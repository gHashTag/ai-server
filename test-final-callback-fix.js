#!/usr/bin/env node

/**
 * üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ callback –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 144022504
 * –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º callback URL –∏–∑ production
 */

const axios = require('axios')

const USER_ID = '144022504'
const PRODUCTION_URL = 'https://ai-server-production-production-8e2d.up.railway.app'
const EXPECTED_CALLBACK = `${PRODUCTION_URL}/api/kie-ai/callback`

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∞
process.env.API_URL = PRODUCTION_URL

async function testCallbackEndpoint() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º callback endpoint...')
  console.log('URL:', EXPECTED_CALLBACK)
  
  try {
    const response = await axios.get(`${EXPECTED_CALLBACK}/health`, {
      timeout: 10000
    })
    console.log('‚úÖ Callback endpoint –¥–æ—Å—Ç—É–ø–µ–Ω:', response.status)
    return true
  } catch (error) {
    console.log('‚ùå Callback endpoint –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω:', error.message)
    return false
  }
}

async function runFinalVideoTest() {
  console.log('üé¨ –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ...')
  
  const testPayload = {
    prompt: "–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –æ–∫–µ–∞–Ω–æ–º —Å –≤–æ–ª–Ω–∞–º–∏ - –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢",
    telegramId: USER_ID,
    botName: 'neuro_blogger_bot',
    model: 'veo3_fast', // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ 8 —Å–µ–∫—É–Ω–¥
    aspectRatio: '16:9',
    duration: 8 // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ 8 —Å–µ–∫—É–Ω–¥ –¥–ª—è veo3_fast
  }
  
  try {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...')
    console.log('Payload:', {
      ...testPayload,
      prompt: testPayload.prompt.substring(0, 50) + '...'
    })
    
    const response = await axios.post(
      `${PRODUCTION_URL}/generate/veo3-video`,
      testPayload,
      {
        timeout: 60000, // 60 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–ø—Ä–æ—Å–∞
        headers: { 'Content-Type': 'application/json' }
      }
    )
    
    console.log('‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç —Å–µ—Ä–≤–µ—Ä–æ–º!')
    console.log('üìä –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
      status: response.status,
      data: response.data
    })
    
    if (response.data && response.data.jobId) {
      console.log(`üéØ Job ID: ${response.data.jobId}`)
      console.log(`üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${USER_ID} –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ callback`)
      console.log(`üîó Callback URL: ${EXPECTED_CALLBACK}`)
      console.log(`‚è∞ –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: 2-5 –º–∏–Ω—É—Ç`)
    }
    
    return true
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error.message)
    if (error.response) {
      console.log('üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
        status: error.response.status,
        data: error.response.data
      })
    }
    return false
  }
}

async function monitorCallback() {
  console.log('\nüì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ callback endpoint –Ω–∞ 30 —Å–µ–∫—É–Ω–¥...')
  
  let requestCount = 0
  const startTime = Date.now()
  const monitorDuration = 30000 // 30 —Å–µ–∫—É–Ω–¥
  
  const checkInterval = setInterval(async () => {
    try {
      await axios.get(`${EXPECTED_CALLBACK}/health`, { timeout: 1000 })
      requestCount++
    } catch (error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ health check –≤–æ –≤—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    }
  }, 2000)
  
  setTimeout(() => {
    clearInterval(checkInterval)
    console.log(`üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω. Health checks: ${requestCount}`)
    console.log(`‚è±Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${(Date.now() - startTime) / 1000}s`)
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:')
    console.log(`‚úÖ Callback URL –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: ${EXPECTED_CALLBACK}`)
    console.log(`‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${USER_ID}`)
    console.log(`üì± –í–∏–¥–µ–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ –≤ @neuro_blogger_bot`)
    console.log('\nüí° –ï—Å–ª–∏ –≤–∏–¥–µ–æ –ù–ï –ø—Ä–∏—à–ª–æ - –ø—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏ production —Å–µ—Ä–≤–µ—Ä–∞!')
  }, monitorDuration)
}

async function main() {
  console.log('üöÄ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ CALLBACK –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø')
  console.log('='*50)
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${USER_ID}`)
  console.log(`üåê Production URL: ${PRODUCTION_URL}`)
  console.log(`üîó Callback URL: ${EXPECTED_CALLBACK}`)
  console.log(`‚ö° API_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${process.env.API_URL}`)
  
  // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º callback endpoint
  const callbackWorking = await testCallbackEndpoint()
  
  if (!callbackWorking) {
    console.log('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: Callback endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!')
    console.log('–ü—Ä–æ–≤–µ—Ä—å —Ä–æ—É—Ç–∏–Ω–≥ /api/kie-ai/callback –≤ production')
    process.exit(1)
  }
  
  // –®–∞–≥ 2: –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ
  const generationStarted = await runFinalVideoTest()
  
  if (!generationStarted) {
    console.log('\n‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ')
    process.exit(1)
  }
  
  // –®–∞–≥ 3: –ú–æ–Ω–∏—Ç–æ—Ä–∏–º callback
  await monitorCallback()
}

main().catch(error => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error)
  process.exit(1)
})