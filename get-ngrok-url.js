#!/usr/bin/env node

/**
 * üåê –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ ngrok URL
 * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: node get-ngrok-url.js
 */

const axios = require('axios')

async function getNgrokUrl() {
  try {
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ ngrok URL...')

    const response = await axios.get('http://localhost:4040/api/tunnels')
    const tunnels = response.data.tunnels

    if (!tunnels || tunnels.length === 0) {
      console.error('‚ùå Ngrok —Ç—É–Ω–Ω–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ ngrok –∑–∞–ø—É—â–µ–Ω.')
      process.exit(1)
    }

    const httpsTunnel = tunnels.find(tunnel =>
      tunnel.public_url.startsWith('https://')
    )

    if (!httpsTunnel) {
      console.error('‚ùå HTTPS —Ç—É–Ω–Ω–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
      process.exit(1)
    }

    const ngrokUrl = httpsTunnel.public_url
    const morphingEndpoint = `${ngrokUrl}/generate/morph-images`

    console.log('‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ URLs:')
    console.log(`   Ngrok URL: ${ngrokUrl}`)
    console.log(`   –ú–æ—Ä—Ñ–∏–Ω–≥ API: ${morphingEndpoint}`)
    console.log('')
    console.log('üìã –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—Ä–æ–Ω—Ç-—ç–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:')
    console.log(`   const API_BASE_URL = "${ngrokUrl}";`)
    console.log('')

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    try {
      const healthResponse = await axios.get(`${ngrokUrl}/health`, {
        timeout: 5000,
      })
      console.log('üü¢ API —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω')
      console.log(`   Health check: ${JSON.stringify(healthResponse.data)}`)
    } catch (error) {
      console.log('üî¥ API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
      console.log(`   –û—à–∏–±–∫–∞: ${error.message}`)
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ngrok URL:', error.message)
    console.error('   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ngrok –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 4000')
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫
getNgrokUrl()
