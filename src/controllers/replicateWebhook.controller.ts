import { Request, Response } from 'express'
import { inngest } from '@/core/inngest-client/clients'
import { updateLatestModelTraining } from '@/core/supabase'

export class ReplicateWebhookController {
  async handleWebhook(req: Request, res: Response) {
    try {
      const event = req.body

      // üéØ –û—Å–Ω–æ–≤–Ω—ã–µ —ç—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:
      // 1. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤ Inngest –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
      await inngest.send({
        name: 'model.training.completed',
        data: {
          training_id: event.id,
          status: event.status,
          error: event.error,
          output: event.output,
          metadata: event.metadata,
        },
      })

      // 2. –°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î
      if (event.status === 'succeeded') {
        await updateLatestModelTraining(
          event.metadata.telegram_id,
          event.metadata.model_name,
          {
            status: 'SUCCESS',
            model_url: event.output?.model_url,
          },
          'replicate'
        )
      }

      // 3. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è Replicate
      res.status(200).json({ success: true })
    } catch (error) {
      console.error('‚ùå Webhook Error:', error)
      res.status(500).json({ error: error.message })
    }
  }
}
