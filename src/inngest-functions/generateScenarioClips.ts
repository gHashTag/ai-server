/**
 * Generate text-based scenario scripts for bloggers
 * üé¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –±–ª–æ–≥–µ—Ä–æ–≤ –∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–≤–æ—Ä—Ü–æ–≤
 */

import { inngest } from '@/core/inngest/clients'
import OpenAI from 'openai'
import { supabase } from '@/core/supabase'
import * as fs from 'fs'
import * as path from 'path'
import archiver from 'archiver'
import * as XLSX from 'xlsx'
import {
  type ScenarioClipsRecord,
  type SceneData,
  type SceneVariant,
  type ScenarioReportMetadata,
  generateScenarioClipsSchema,
} from '@/interfaces/scenario-clips.interface'

// üé¨ –ë–õ–û–ì–ï–†–°–ö–ò–ï –°–¢–ò–õ–ò –ò –¢–ï–ú–´ –î–õ–Ø –°–û–í–†–ï–ú–ï–ù–ù–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê
const BLOGGER_STYLES = {
  // üì± TikTok —Å—Ç–∏–ª—å - –±—ã—Å—Ç—Ä–æ, —è—Ä–∫–æ, –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ
  TIKTOK: {
    name: 'TikTok Creator',
    description: '–ë—ã—Å—Ç—Ä—ã–π, –¥–∏–Ω–∞–º–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–∏–¥–µ–æ',
    scenes: [
      'Hook moment - —è—Ä–∫–æ–µ –Ω–∞—á–∞–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞—Ü–µ–ø–∏—Ç –∑—Ä–∏—Ç–µ–ª—è –≤ –ø–µ—Ä–≤—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã',
      'Story setup - –±—ã—Å—Ç—Ä–∞—è –ø–æ–¥–∞—á–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–¥–µ–∏ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã',
      'Conflict moment - –º–æ–º–µ–Ω—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç',
      'Resolution - –±—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏–ª–∏ –∫—É–ª—å–º–∏–Ω–∞—Ü–∏—è',
      'Call to action - –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é, –ø–æ–¥–ø–∏—Å–∫–µ –∏–ª–∏ –ª–∞–π–∫—É',
      'Bonus content - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –∏–ª–∏ —Å–µ–∫—Ä–µ—Ç',
      'Viral moment - –º–æ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ö–æ—á–µ—Ç—Å—è –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å',
      'Community hook - —á—Ç–æ-—Ç–æ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏–π',
    ],
    visual_style:
      'dynamic vertical composition, bright colors, high contrast, mobile-first design, trendy aesthetics',
    mood: 'energetic, playful, attention-grabbing',
    tips: [
      '–ü–µ—Ä–≤—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã - —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ',
      '–ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–≤—É–∫–∏ –∏ –º—É–∑—ã–∫—É',
      '–î–æ–±–∞–≤—å —Å—É–±—Ç–∏—Ç—Ä—ã –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è',
      '–°–æ–∑–¥–∞–π –º–æ–º–µ–Ω—Ç –¥–ª—è –ø–∞—É–∑—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
    ],
  },

  // üì∫ YouTube —Å—Ç–∏–ª—å - –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π, –≥–ª—É–±–æ–∫–∏–π
  YOUTUBE: {
    name: 'YouTube Creator',
    description: '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π, —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ',
    scenes: [
      'Strong intro - –º–æ—â–Ω–æ–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Å –æ–±–µ—â–∞–Ω–∏–µ–º —Ü–µ–Ω–Ω–æ—Å—Ç–∏',
      'Problem identification - —á–µ—Ç–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∑—Ä–∏—Ç–µ–ª—è',
      'Context building - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ background –∏—Å—Ç–æ—Ä–∏–∏',
      'Main content delivery - –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
      'Example demonstration - –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏–ª–∏ –∫–µ–π—Å—ã',
      'Expert insights - —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –º–Ω–µ–Ω–∏—è –∏–ª–∏ –≥–ª—É–±–æ–∫–∏–µ –∑–Ω–∞–Ω–∏—è',
      'Action steps - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è –∑—Ä–∏—Ç–µ–ª—è',
      'Conclusion & CTA - –∏—Ç–æ–≥–∏ –∏ –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é',
    ],
    visual_style:
      'cinematic 16:9 composition, professional lighting, clear backgrounds, educational graphics',
    mood: 'authoritative, educational, engaging',
    tips: [
      '–°–æ–∑–¥–∞–π –∏–Ω—Ç—Ä–∏–≥—É –≤ –ø–µ—Ä–≤—ã–µ 15 —Å–µ–∫—É–Ω–¥',
      '–ò—Å–ø–æ–ª—å–∑—É–π –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∏',
      '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —á–µ—Ç–∫–∏–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏',
      '–î–æ–±–∞–≤—å –º–æ–º–µ–Ω—Ç—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π',
    ],
  },

  // üì∏ Instagram —Å—Ç–∏–ª—å - —ç—Å—Ç–µ—Ç–∏—á–Ω—ã–π, lifestyle
  INSTAGRAM: {
    name: 'Instagram Creator',
    description: '–≠—Å—Ç–µ—Ç–∏—á–Ω—ã–π, lifestyle –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Stories –∏ Reels',
    scenes: [
      'Aesthetic opener - –∫—Ä–∞—Å–∏–≤–æ–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –Ω–∞—á–∞–ª–æ',
      'Lifestyle moment - –º–æ–º–µ–Ω—Ç –∏–∑ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏',
      'Behind the scenes - –∑–∞–∫—É–ª–∏—Å—å–µ –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è',
      'Personal story - –ª–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –∏–ª–∏ –æ–ø—ã—Ç',
      'Value sharing - –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–ª–∏ —Å–æ–≤–µ—Ç',
      'Community moment - –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏',
      'Inspiration shot - –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –º–æ–º–µ–Ω—Ç –∏–ª–∏ —Ü–∏—Ç–∞—Ç–∞',
      'Next content teaser - –∞–Ω–æ–Ω—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
    ],
    visual_style:
      'aesthetic square or vertical composition, soft natural lighting, minimalist design, Instagram-worthy',
    mood: 'aspirational, authentic, lifestyle-focused',
    tips: [
      '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –µ–¥–∏–Ω—ã–π —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å',
      '–ò—Å–ø–æ–ª—å–∑—É–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ',
      '–°–æ–∑–¥–∞–≤–∞–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Stories –∏ –ø–æ—Å—Ç–æ–≤',
      '–î–æ–±–∞–≤–ª—è–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
    ],
  },

  // üíº Business/LinkedIn —Å—Ç–∏–ª—å - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π
  BUSINESS: {
    name: 'Business Creator',
    description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å-–∞—É–¥–∏—Ç–æ—Ä–∏–∏',
    scenes: [
      'Industry insight - —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –∏–Ω–¥—É—Å—Ç—Ä–∏—é',
      'Case study intro - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–µ–π—Å–∞ –∏–ª–∏ –ø—Ä–∏–º–µ—Ä–∞',
      'Problem analysis - –∞–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ–±–ª–µ–º—ã',
      'Solution presentation - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è',
      'Results showcase - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
      'Lessons learned - –≤—ã–≤–æ–¥—ã –∏ —É—Ä–æ–∫–∏',
      'Professional advice - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã',
      'Network building - –ø—Ä–∏–∑—ã–≤ –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –æ–±—â–µ–Ω–∏—é',
    ],
    visual_style:
      'professional clean composition, corporate colors, modern minimalist design, business-appropriate',
    mood: 'professional, authoritative, trustworthy',
    tips: [
      '–§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞',
      '–ò—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ –∏ —Ñ–∞–∫—Ç—ã',
      '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω',
      '–°–æ–∑–¥–∞–≤–∞–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π',
    ],
  },

  // üç≥ Lifestyle/Tutorial —Å—Ç–∏–ª—å - –ø–æ—à–∞–≥–æ–≤—ã–π, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π
  LIFESTYLE: {
    name: 'Lifestyle Creator',
    description: '–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ –∂–∏–∑–Ω–∏, —Ö–æ–±–±–∏, DIY',
    scenes: [
      'Daily moment - –º–æ–º–µ–Ω—Ç –∏–∑ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏',
      'Problem introduction - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –±—ã—Ç–æ–≤–æ–π –ø—Ä–æ–±–ª–µ–º—ã',
      'Materials overview - –æ–±–∑–æ—Ä –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
      'Step-by-step process - –ø–æ—à–∞–≥–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
      'Tips and tricks - –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏',
      'Final result - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞',
      'Personal reflection - –ª–∏—á–Ω—ã–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –æ–± –æ–ø—ã—Ç–µ',
      'Audience engagement - –≤–æ–ø—Ä–æ—Å—ã –∫ –∞—É–¥–∏—Ç–æ—Ä–∏–∏',
    ],
    visual_style:
      'cozy home environment, natural lighting, step-by-step visuals, lifestyle photography',
    mood: 'helpful, authentic, approachable',
    tips: [
      '–ü–æ–∫–∞–∑—ã–≤–∞–π –ø—Ä–æ—Ü–µ—Å—Å –ø–æ—à–∞–≥–æ–≤–æ',
      '–î–µ–ª–∏—Å—å –ª–∏—á–Ω—ã–º –æ–ø—ã—Ç–æ–º',
      '–°–æ–∑–¥–∞–≤–∞–π —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É',
      '–î–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã',
    ],
  },

  // üéÆ Gaming/Tech —Å—Ç–∏–ª—å - –¥–ª—è –≥–µ–π–º–µ—Ä–æ–≤ –∏ —Ç–µ—Ö–Ω–æ-–±–ª–æ–≥–µ—Ä–æ–≤
  GAMING: {
    name: 'Gaming/Tech Creator',
    description: '–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≥–µ–π–º–µ—Ä–æ–≤ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –±–ª–æ–≥–µ—Ä–æ–≤',
    scenes: [
      'Epic intro - —ç–ø–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ —Å –∏–≥—Ä–æ–≤–æ–π –º—É–∑—ã–∫–æ–π',
      'Setup showcase - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–µ—Ç–∞–ø–∞',
      'Gameplay highlight - –ª—É—á—à–∏–µ –º–æ–º–µ–Ω—Ç—ã –∏–∑ –∏–≥—Ä—ã',
      'Tech explanation - –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤',
      'Tips and strategies - –∏–≥—Ä–æ–≤—ã–µ —Å–æ–≤–µ—Ç—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏',
      'Community interaction - –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∏–≥—Ä–æ–≤—ã–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º',
      'Achievement moment - –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–ª–∏ –ø–æ–±–µ–¥—ã',
      'Next stream/video - –∞–Ω–æ–Ω—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
    ],
    visual_style:
      'gaming setup environment, RGB lighting, high-tech aesthetics, screen recordings',
    mood: 'exciting, competitive, tech-savvy',
    tips: [
      '–ü–æ–∫–∞–∑—ã–≤–∞–π –ª—É—á—à–∏–µ –∏–≥—Ä–æ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã',
      '–û–±—ä—è—Å–Ω—è–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ—Å—Ç–æ',
      '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π —Å –∏–≥—Ä–æ–≤—ã–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º',
      '–ò—Å–ø–æ–ª—å–∑—É–π –∏–≥—Ä–æ–≤—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é',
    ],
  },

  // üåü Motivational —Å—Ç–∏–ª—å - –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  MOTIVATIONAL: {
    name: 'Motivational Creator',
    description: '–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',
    scenes: [
      'Inspiring quote - –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞ –∏–ª–∏ –º—ã—Å–ª—å',
      'Personal struggle - –ª–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è',
      'Mindset shift - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º—ã—à–ª–µ–Ω–∏—è –∏–ª–∏ –ø–æ–¥—Ö–æ–¥–∞',
      'Action inspiration - –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∫ –¥–µ–π—Å—Ç–≤–∏—é',
      'Success visualization - –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—Ö–∞',
      'Community support - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
      'Daily practice - –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è',
      'Transformation moment - –º–æ–º–µ–Ω—Ç —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏',
    ],
    visual_style:
      'inspirational backgrounds, golden hour lighting, uplifting compositions, positive energy',
    mood: 'inspiring, uplifting, empowering',
    tips: [
      '–î–µ–ª–∏—Å—å –ª–∏—á–Ω—ã–º–∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏',
      '–ò—Å–ø–æ–ª—å–∑—É–π –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ –≤–∏–∑—É–∞–ª—ã',
      '–°–æ–∑–¥–∞–≤–∞–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Å–≤—è–∑—å',
      '–ü—Ä–∏–∑—ã–≤–∞–π –∫ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º',
    ],
  },
}

// –ë–∏–±–ª–µ–π—Å–∫–∏–µ —Ç–µ–º—ã –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
const BIBLE_THEMES = {
  CREATION: {
    scenes: [
      'Divine Light - –í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é, –∏ —Å–≤–µ—Ç –æ—Ç–¥–µ–ª–∏–ª –æ—Ç —Ç—å–º—ã',
      'Waters Divided - –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –≤–æ–¥ –Ω–µ–±–µ—Å–Ω—ã—Ö –∏ –∑–µ–º–Ω—ã—Ö, —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–≤–µ—Ä–¥–æ–≥–æ —Å–≤–æ–¥–∞',
      'Earth and Seas - –°–æ–±—Ä–∞–Ω–∏–µ –≤–æ–¥ –≤ –æ–¥–Ω–æ –º–µ—Å—Ç–æ –∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ —Å—É—à–∏ —Å —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',
      'Celestial Bodies - –°–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ —Å–æ–ª–Ω—Ü–∞, –ª—É–Ω—ã –∏ –∑–≤–µ–∑–¥ –¥–ª—è –æ—Å–≤–µ—â–µ–Ω–∏—è –∑–µ–º–ª–∏',
      'Sea Life - –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–æ—Ä–µ–π —Ä—ã–±–∞–º–∏ –∏ –Ω–µ–±–µ—Å –ø—Ç–∏—Ü–∞–º–∏ –ø–æ —Ä–æ–¥—É –∏—Ö',
      'Land Animals - –°–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –∑–≤–µ—Ä–µ–π –∑–µ–º–Ω—ã—Ö, —Å–∫–æ—Ç–∞ –∏ –≥–∞–¥–æ–≤ –ø–æ —Ä–æ–¥—É –∏—Ö',
      'Human Creation - –°–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –æ–±—Ä–∞–∑—É –∏ –ø–æ–¥–æ–±–∏—é –ë–æ–∂–∏—é',
      'Divine Rest - –î–µ–Ω—å —Å–µ–¥—å–º–æ–π, –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ –∏ –æ—Å–≤—è—â–µ–Ω–∏–µ –¥–Ω—è –ø–æ–∫–æ—è',
    ],
    base_style:
      'divine cosmic energy, sacred geometry, mystical atmosphere, ethereal lighting',
  },
}

/**
 * üé¨ Generate text-based scenario scripts for bloggers
 * –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –±–ª–æ–≥–µ—Ä–æ–≤ –∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–≤–æ—Ä—Ü–æ–≤
 */
export const generateScenarioClips = inngest.createFunction(
  {
    id: 'generate-scenario-clips',
    name: 'üé¨ Generate Blogger Text Scenarios',
  },
  { event: 'content/generate-scenario-clips' },
  async ({ event, step, runId, logger: log }) => {
    const input = generateScenarioClipsSchema.parse(event.data)
    log.info('üé¨ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –±–ª–æ–≥–µ—Ä–æ–≤', {
      input,
      runId,
    })

    // Step 1: Validate input and create database record
    const scenarioRecord = await step.run(
      'create-scenario-record',
      async () => {
        log.info('üìù –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')

        // –£–±–∏—Ä–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–µ–∫—Å—Ç
        const totalScenes = input.scene_count * input.variants_per_scene
        const costPerScene = 0.01 // –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö
        const totalCostStars = ((costPerScene * totalScenes) / 0.016) * 1.5 // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –∑–≤–µ–∑–¥—ã

        const recordData: Partial<ScenarioClipsRecord> = {
          project_id: input.project_id,
          requester_telegram_id: input.requester_telegram_id,
          base_photo_url: input.photo_url, // –û—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º
          base_prompt: input.prompt,
          scene_count: input.scene_count,
          variants_per_scene: input.variants_per_scene,
          aspect_ratio: input.aspect_ratio,
          flux_model: 'text-only', // –£–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
          status: 'PROCESSING',
          total_cost_stars: totalCostStars,
          created_at: new Date(),
        }

        const { data, error } = await supabase
          .from('scenario_clips')
          .insert(recordData)
          .select()
          .single()

        if (error) {
          throw new Error(`Failed to create scenario record: ${error.message}`)
        }

        log.info('‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞', { recordId: data.id, totalCostStars })
        return data as ScenarioClipsRecord
      }
    )

    // Step 2: Generate detailed scene scripts using OpenAI
    const detailedScenes = await step.run(
      'generate-detailed-scenes',
      async () => {
        log.info('üß† –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏')

        const basePrompt = input.prompt
        const sceneCount = input.scene_count
        const variantsPerScene = input.variants_per_scene
        const bloggerStyle = input.metadata?.blogger_style || 'YOUTUBE'
        const bibleTheme = input.metadata?.bible_theme

        const openai = new OpenAI({
          apiKey: process.env.OPENAI_API_KEY,
        })

        const scenes: SceneData[] = []
        let selectedStyle = null

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        if (bibleTheme === 'CREATION' && BIBLE_THEMES.CREATION) {
          selectedStyle = {
            name: 'Biblical Creation',
            scenes: BIBLE_THEMES.CREATION.scenes,
            tips: [
              '–ò—Å–ø–æ–ª—å–∑—É–π –±–∏–±–ª–µ–π—Å–∫–∏–µ –æ–±—Ä–∞–∑—ã',
              '–°–æ–∑–¥–∞–≤–∞–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —Å–≤—è—â–µ–Ω–Ω–æ—Å—Ç–∏',
            ],
          }
        } else if (
          BLOGGER_STYLES[bloggerStyle as keyof typeof BLOGGER_STYLES]
        ) {
          selectedStyle =
            BLOGGER_STYLES[bloggerStyle as keyof typeof BLOGGER_STYLES]
        } else {
          selectedStyle = BLOGGER_STYLES.YOUTUBE // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }

        log.info(`üé≠ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∏–ª—å: ${selectedStyle.name}`, {
          style: bloggerStyle,
        })

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ü–µ–Ω—ã
        for (let sceneIndex = 0; sceneIndex < sceneCount; sceneIndex++) {
          const sceneTheme =
            selectedStyle.scenes[sceneIndex] || `–°—Ü–µ–Ω–∞ ${sceneIndex + 1}`
          const variants: SceneVariant[] = []

          log.info(
            `üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ü–µ–Ω—É ${sceneIndex + 1}/${sceneCount}: ${sceneTheme}`
          )

          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ü–µ–Ω—ã
          for (
            let variantIndex = 0;
            variantIndex < variantsPerScene;
            variantIndex++
          ) {
            log.info(
              `‚úçÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∞—Ä–∏–∞–Ω—Ç ${variantIndex + 1}/${variantsPerScene}`
            )

            const startTime = Date.now()

            // –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
            const systemPrompt = `
–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–ª–æ–≥–µ—Ä–æ–≤ –≤ —Å—Ç–∏–ª–µ "${
              selectedStyle.name
            }".

–ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —Å—Ü–µ–Ω—ã –±–ª–æ–≥–µ—Ä—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.

–ö–û–ù–¢–ï–ö–°–¢:
- –ë–∞–∑–æ–≤–∞—è —Ç–µ–º–∞: "${basePrompt}"
- –¢–∏–ø —Å—Ü–µ–Ω—ã: "${sceneTheme}"
- –°—Ç–∏–ª—å: ${selectedStyle.name}
- –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${bloggerStyle}
- –§–æ—Ä–º–∞—Ç: ${input.aspect_ratio}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–¶–ï–ù–ê–†–ò–Æ:
1. –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –≤ —Å—Ü–µ–Ω–µ
2. –î–∏–∞–ª–æ–≥–∏ –∏–ª–∏ –º–æ–Ω–æ–ª–æ–≥ –±–ª–æ–≥–µ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
3. –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏ –∞–∫—Ü–µ–Ω—Ç—ã
4. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–º–µ—Ç–∫–∏ (–¥–≤–∏–∂–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã, —Ä–µ–∫–≤–∏–∑–∏—Ç, –ª–æ–∫–∞—Ü–∏—è)
5. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è
6. –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)

–°–¢–ò–õ–¨ –ù–ê–ü–ò–°–ê–ù–ò–Ø: ${selectedStyle.mood || 'engaging, authentic'}

–°–æ–∑–¥–∞–π –∂–∏–≤–æ–π, –¥–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª–∏–Ω–æ–π 150-300 —Å–ª–æ–≤.
`

            const userPrompt = `
–°–æ–∑–¥–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —Å—Ü–µ–Ω—ã: "${sceneTheme}"

–í–∞—Ä–∏–∞–Ω—Ç: ${variantIndex + 1}
–°–¥–µ–ª–∞–π —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ø–æ –ø–æ–¥—Ö–æ–¥—É, –Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏ —Å—É—Ç—å —Å—Ü–µ–Ω—ã.
`

            try {
              const response = await openai.chat.completions.create({
                model: 'gpt-4',
                messages: [
                  { role: 'system', content: systemPrompt },
                  { role: 'user', content: userPrompt },
                ],
                temperature: 0.8,
                max_tokens: 800,
              })

              const scenarioText =
                response.choices[0]?.message?.content ||
                `–°—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è ${sceneTheme} - –≤–∞—Ä–∏–∞–Ω—Ç ${variantIndex + 1}`
              const generationTime = (Date.now() - startTime) / 1000

              variants.push({
                variant_number: variantIndex + 1,
                image_url: '', // –£–±–∏—Ä–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                prompt_used: scenarioText, // –¢–µ–ø–µ—Ä—å —ç—Ç–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
                flux_model: 'text-only',
                generation_time: generationTime,
                metadata: {
                  blogger_style: bloggerStyle,
                  scene_theme: sceneTheme,
                  text_length: scenarioText.length,
                  generation_source: 'openai-gpt4',
                },
              })

              log.info(`‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π ${variantIndex + 1} —Å–æ–∑–¥–∞–Ω`, {
                length: scenarioText.length,
                generationTime: `${generationTime}s`,
              })
            } catch (error) {
              log.error(
                `‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è ${variantIndex + 1}:`,
                error
              )

              // Fallback —Å—Ü–µ–Ω–∞—Ä–∏–π
              variants.push({
                variant_number: variantIndex + 1,
                image_url: '',
                prompt_used: `–î–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è "${sceneTheme}" - –≤–∞—Ä–∏–∞–Ω—Ç ${
                  variantIndex + 1
                }. 
              
–û–ü–ò–°–ê–ù–ò–ï –°–¶–ï–ù–´: ${sceneTheme.split(' - ')[1] || sceneTheme}

–î–ï–ô–°–¢–í–ò–ï: –ë–ª–æ–≥–µ—Ä –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–¥–µ—é —Å—Ü–µ–Ω—ã –≤ —Å—Ç–∏–ª–µ ${selectedStyle.name}.

–î–ò–ê–õ–û–ì: "–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! –°–µ–≥–æ–¥–Ω—è –º—ã —Ä–∞–∑–±–µ—Ä–µ–º ${basePrompt}..."

–¢–ï–•–ù–ò–ö–ê: –°—ä–µ–º–∫–∞ –≤ ${input.aspect_ratio} —Ñ–æ—Ä–º–∞—Ç–µ, ${selectedStyle.visual_style}

–≠–ú–û–¶–ò–Ø: ${selectedStyle.mood}`,
                flux_model: 'text-only',
                generation_time: 0,
                metadata: {
                  blogger_style: bloggerStyle,
                  status: 'fallback',
                },
              })
            }
          }

          scenes.push({
            scene_number: sceneIndex + 1,
            scene_prompt: sceneTheme,
            variants: variants,
            theme: sceneTheme.split(' - ')[0] || `–°—Ü–µ–Ω–∞ ${sceneIndex + 1}`,
          })
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∏–ª–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
        if (selectedStyle) {
          const updatedMetadata = {
            ...scenarioRecord.metadata,
            blogger_style: bloggerStyle,
            style_info: {
              name: selectedStyle.name,
              description: selectedStyle.description || selectedStyle.name,
              tips: selectedStyle.tips || [],
            },
          }

          // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–ø–∏—Å–∏
          await supabase
            .from('scenario_clips')
            .update({ metadata: updatedMetadata })
            .eq('id', scenarioRecord.id)
        }

        log.info('‚úÖ –í—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã', {
          totalScenes: scenes.length,
          totalVariants: scenes.reduce(
            (acc, scene) => acc + scene.variants.length,
            0
          ),
          blogger_style: bloggerStyle,
        })

        return scenes
      }
    )

    // Step 3: Create text-based reports and archive
    const archiveResult = await step.run(
      'create-text-reports-archive',
      async () => {
        log.info('üìã –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã –∏ –∞—Ä—Ö–∏–≤')

        try {
          const reportGenerator = new TextScenarioReportGenerator('./output')
          const bloggerStyle = input.metadata?.blogger_style || 'YOUTUBE'

          const metadata: ScenarioReportMetadata = {
            base_photo_url: '', // –£–±–∏—Ä–∞–µ–º —Ñ–æ—Ç–æ
            base_prompt: input.prompt,
            total_scenes: input.scene_count,
            total_variants: input.variants_per_scene,
            total_images: 0, // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Ç
            aspect_ratio: input.aspect_ratio,
            flux_model: 'text-only',
            generation_date: new Date(),
            processing_time: 0, // –ë—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ –ø–æ–∑–∂–µ
            cost_breakdown: {
              total_stars: scenarioRecord.total_cost_stars,
              cost_per_image: 0, // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Ç
              estimated_rubles: scenarioRecord.total_cost_stars * 0.016 * 100,
            },
            blogger_style: bloggerStyle,
            style_info:
              BLOGGER_STYLES[bloggerStyle as keyof typeof BLOGGER_STYLES] ||
              null,
          }

          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –æ—Ç—á–µ—Ç —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏
          const htmlPath = await reportGenerator.generateTextScenarioHTMLReport(
            detailedScenes as SceneData[],
            metadata,
            log
          )

          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Excel —Ñ–∞–π–ª —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏
          const excelPath =
            await reportGenerator.generateTextScenarioExcelReport(
              detailedScenes as SceneData[],
              metadata
            )

          // –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
          const archivePath = await reportGenerator.createTextScenarioArchive(
            htmlPath,
            excelPath,
            metadata,
            log
          )

          log.info('‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã –∏ –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω—ã')

          return {
            success: true,
            htmlReportPath: htmlPath,
            excelReportPath: excelPath,
            archivePath: archivePath,
            archiveFileName: path.basename(archivePath),
          } as const
        } catch (error) {
          log.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤:', error)
          return {
            success: false,
            error: error instanceof Error ? error.message : String(error),
          } as const
        }
      }
    )

    // Step 4: Update database record with results
    const finalResult = await step.run('update-scenario-record', async () => {
      log.info('üíæ –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')

      const processingTime =
        (Date.now() - new Date(scenarioRecord.created_at).getTime()) / 1000

      const updateData = {
        generated_scenes: detailedScenes,
        archive_path: archiveResult.success
          ? (archiveResult as any).archivePath
          : null,
        html_report_path: archiveResult.success
          ? (archiveResult as any).htmlReportPath
          : null,
        excel_report_path: archiveResult.success
          ? (archiveResult as any).excelReportPath
          : null,
        status: archiveResult.success ? 'COMPLETED' : 'FAILED',
        error_message: archiveResult.success
          ? null
          : (archiveResult as any).error,
        processing_time_seconds: processingTime,
        completed_at: new Date(),
      }

      const { error } = await supabase
        .from('scenario_clips')
        .update(updateData)
        .eq('id', scenarioRecord.id)

      if (error) {
        log.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏:', error)
      } else {
        log.info('‚úÖ –ó–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
      }

      return {
        success: true,
        record_id: scenarioRecord.id,
        total_scenes: detailedScenes.length,
        total_scenarios: detailedScenes.reduce(
          (acc, scene) => acc + scene.variants.length,
          0
        ),
        processing_time_seconds: processingTime,
        archive_created: archiveResult.success,
        archive_path: archiveResult.success
          ? (archiveResult as any).archivePath
          : null,
        blogger_style: input.metadata?.blogger_style || 'YOUTUBE',
      }
    })

    log.info(
      'üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –±–ª–æ–≥–µ—Ä—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!',
      finalResult
    )

    return {
      success: true,
      data: {
        record_id: scenarioRecord.id,
        scenarios: detailedScenes, // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏ —Å scenes
        archive: archiveResult.success
          ? {
              path: (archiveResult as any).archivePath,
              filename: (archiveResult as any).archiveFileName,
            }
          : null,
        metadata: {
          total_cost_stars: scenarioRecord.total_cost_stars,
          processing_time: finalResult.processing_time_seconds,
          total_scenarios: finalResult.total_scenarios,
          blogger_style: finalResult.blogger_style,
          content_type: 'text-only',
          platform_optimized:
            input.aspect_ratio === '16:9'
              ? 'YouTube'
              : input.aspect_ratio === '9:16'
              ? 'TikTok/Reels'
              : 'Instagram',
        },
      },
    }
  }
)

/**
 * üìù –ö–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –æ —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö
 */
class TextScenarioReportGenerator {
  constructor(private outputDir: string) {}

  async generateTextScenarioHTMLReport(
    scenes: SceneData[],
    metadata: ScenarioReportMetadata & {
      blogger_style?: string
      style_info?: any
    },
    log: any
  ): Promise<string> {
    const styleInfo = metadata.style_info
    const bloggerStyle = metadata.blogger_style || 'YOUTUBE'

    const html = `
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üìù –ë–ª–æ–≥–µ—Ä—Å–∫–∏–µ –°—Ü–µ–Ω–∞—Ä–∏–∏ - ${
      scenes.length
    } –°—Ü–µ–Ω (${bloggerStyle})</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #ff6b6b, #ffa500);
            color: white;
            padding: 40px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .blogger-style-badge {
            display: inline-block;
            background: rgba(255, 255, 255, 0.2);
            padding: 10px 20px;
            border-radius: 25px;
            margin: 10px;
            font-weight: bold;
        }
        
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            padding: 40px;
            background: #f8f9fa;
        }
        
        .stat-card {
            background: white;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .stat-card .number {
            font-size: 3rem;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 10px;
        }

        .blogger-tips {
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
            color: white;
            padding: 30px;
            margin: 20px 0;
        }

        .tips-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .tip-item {
            background: rgba(255, 255, 255, 0.1);
            padding: 15px;
            border-radius: 10px;
            border-left: 4px solid rgba(255, 255, 255, 0.5);
        }
        
        .scenarios-grid {
            padding: 40px;
        }
        
        .scene-card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .scene-header {
            border-bottom: 3px solid #667eea;
            padding-bottom: 15px;
            margin-bottom: 20px;
        }

        .platform-optimization {
            display: inline-block;
            background: #28a745;
            color: white;
            padding: 5px 15px;
            border-radius: 15px;
            font-size: 0.8rem;
            margin-left: 10px;
        }
        
        .variants-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 20px;
            margin-top: 20px;
        }
        
        .variant-card {
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            padding: 20px;
            background: #f9f9f9;
        }
        
        .scenario-text {
            background: white;
            padding: 20px;
            border-radius: 8px;
            margin: 15px 0;
            font-size: 1.1rem;
            line-height: 1.7;
            border-left: 4px solid #667eea;
        }

        .scenario-metadata {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            font-size: 0.9rem;
            margin-top: 15px;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 10px;
        }
        
        .footer {
            background: #333;
            color: white;
            padding: 30px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>üìù –ë–ª–æ–≥–µ—Ä—Å–∫–∏–µ –°—Ü–µ–Ω–∞—Ä–∏–∏</h1>
            <div class="subtitle">"${metadata.base_prompt}"</div>
            <div class="blogger-style-badge">üé≠ –°—Ç–∏–ª—å: ${
              styleInfo?.name || bloggerStyle
            }</div>
            <div class="blogger-style-badge">üì∫ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${
              metadata.aspect_ratio === '16:9'
                ? 'YouTube'
                : metadata.aspect_ratio === '9:16'
                ? 'TikTok/Reels'
                : 'Instagram'
            }</div>
            <div class="blogger-style-badge">üìù –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç</div>
        </header>

        ${
          styleInfo
            ? `
        <section class="blogger-tips">
            <h2>üí° –°–æ–≤–µ—Ç—ã –¥–ª—è —Å—Ç–∏–ª—è "${styleInfo.name}"</h2>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${styleInfo.description}</p>
            <div class="tips-grid">
                ${
                  styleInfo.tips
                    ?.map(
                      (tip: string) => `
                    <div class="tip-item">üíé ${tip}</div>
                `
                    )
                    .join('') || ''
                }
            </div>
        </section>
        `
            : ''
        }
        
        <section class="stats">
            <div class="stat-card">
                <div class="number">${metadata.total_scenes}</div>
                <div class="label">üé≠ –°—Ü–µ–Ω</div>
            </div>
            <div class="stat-card">
                <div class="number">${metadata.total_variants}</div>
                <div class="label">üìù –í–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞ —Å—Ü–µ–Ω—É</div>
            </div>
            <div class="stat-card">
                <div class="number">${scenes.reduce(
                  (acc, scene) => acc + scene.variants.length,
                  0
                )}</div>
                <div class="label">üìÑ –í—Å–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤</div>
            </div>
            <div class="stat-card">
                <div class="number">${metadata.cost_breakdown.total_stars}</div>
                <div class="label">‚≠ê –°—Ç–æ–∏–º–æ—Å—Ç—å –≤ –∑–≤–µ–∑–¥–∞—Ö</div>
            </div>
        </section>
        
        <section class="scenarios-grid">
            <h2 class="section-title">üìù –î–µ—Ç–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –±–ª–æ–≥–∞</h2>
            ${scenes
              .map(
                (scene, _index) => `
                <div class="scene-card">
                    <div class="scene-header">
                        <h3>–°—Ü–µ–Ω–∞ ${scene.scene_number}: ${scene.theme}
                            <span class="platform-optimization">${bloggerStyle}</span>
                        </h3>
                        <p><strong>–¢–∏–ø —Å—Ü–µ–Ω—ã:</strong> ${scene.scene_prompt}</p>
                    </div>
                    <div class="variants-grid">
                        ${scene.variants
                          .map(
                            variant => `
                            <div class="variant-card">
                                <h4>üìÑ –í–∞—Ä–∏–∞–Ω—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è ${
                                  variant.variant_number
                                }</h4>
                                <div class="scenario-text">
                                    ${variant.prompt_used.replace(
                                      /\n/g,
                                      '<br>'
                                    )}
                                </div>
                                <div class="scenario-metadata">
                                    <div><strong>‚è±Ô∏è –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:</strong> ${
                                      variant.generation_time
                                    }s</div>
                                    <div><strong>üìè –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞:</strong> ${
                                      variant.metadata?.text_length || 'N/A'
                                    } —Å–∏–º–≤–æ–ª–æ–≤</div>
                                    <div><strong>üé≠ –°—Ç–∏–ª—å:</strong> ${
                                      variant.metadata?.blogger_style ||
                                      bloggerStyle
                                    }</div>
                                    <div><strong>üéØ –ò—Å—Ç–æ—á–Ω–∏–∫:</strong> ${
                                      variant.metadata?.generation_source ||
                                      'AI Generated'
                                    }</div>
                                </div>
                            </div>
                        `
                          )
                          .join('')}
                    </div>
                </div>
            `
              )
              .join('')}
        </section>
        
        <footer class="footer">
            <p>üìä –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã ${metadata.generation_date.toLocaleDateString(
              'ru-RU'
            )} –≤ ${metadata.generation_date.toLocaleTimeString('ru-RU')}</p>
            <p>üìù Text Scenario Generator - Optimized for ${bloggerStyle}</p>
            <p>üöÄ –ì–æ—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞!</p>
        </footer>
    </div>
</body>
</html>
    `

    const fileName = `text_scenarios_${bloggerStyle.toLowerCase()}_${Date.now()}.html`
    const filePath = path.join(this.outputDir, fileName)

    await fs.promises.mkdir(this.outputDir, { recursive: true })
    await fs.promises.writeFile(filePath, html, 'utf-8')

    log.info(`üìÑ HTML –æ—Ç—á—ë—Ç —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω: ${fileName}`)
    return filePath
  }

  async generateTextScenarioExcelReport(
    scenes: SceneData[],
    metadata: ScenarioReportMetadata & {
      blogger_style?: string
      style_info?: any
    }
  ): Promise<string> {
    const workbook = XLSX.utils.book_new()
    const bloggerStyle = metadata.blogger_style || 'YOUTUBE'

    // –õ–∏—Å—Ç "–°—Ü–µ–Ω–∞—Ä–∏–∏"
    const scenariosData = scenes.flatMap(scene =>
      scene.variants.map(variant => ({
        '‚Ññ –°—Ü–µ–Ω—ã': scene.scene_number,
        '–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã': scene.theme || `–°—Ü–µ–Ω–∞ ${scene.scene_number}`,
        '–¢–∏–ø —Å—Ü–µ–Ω—ã': scene.scene_prompt,
        '‚Ññ –í–∞—Ä–∏–∞–Ω—Ç–∞': variant.variant_number,
        '–¢–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è': variant.prompt_used,
        '–î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞': variant.metadata?.text_length || 0,
        '–ë–ª–æ–≥–µ—Ä—Å–∫–∏–π —Å—Ç–∏–ª—å': variant.metadata?.blogger_style || bloggerStyle,
        '–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (—Å–µ–∫)': variant.generation_time,
        –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:
          metadata.aspect_ratio === '16:9'
            ? 'YouTube'
            : metadata.aspect_ratio === '9:16'
            ? 'TikTok/Reels'
            : 'Instagram',
        –°—Ç–∞—Ç—É—Å: variant.metadata?.status || '–ì–æ—Ç–æ–≤–æ',
      }))
    )

    const scenariosSheet = XLSX.utils.json_to_sheet(scenariosData)
    XLSX.utils.book_append_sheet(workbook, scenariosSheet, '–°—Ü–µ–Ω–∞—Ä–∏–∏')

    // –õ–∏—Å—Ç "–ö—Ä–∞—Ç–∫–∏–π –ø–ª–∞–Ω"
    const summaryData = scenes.map((scene, _index) => ({
      '‚Ññ –°—Ü–µ–Ω—ã': scene.scene_number,
      –ù–∞–∑–≤–∞–Ω–∏–µ: scene.theme || `–°—Ü–µ–Ω–∞ ${scene.scene_number}`,
      –¢–∏–ø: scene.scene_prompt,
      '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤': scene.variants.length,
      '–û–±—â–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞': scene.variants.reduce(
        (acc, v) => acc + (v.metadata?.text_length || 0),
        0
      ),
      '–ë–ª–æ–≥–µ—Ä—Å–∫–∏–π —Å—Ç–∏–ª—å': bloggerStyle,
      –°—Ç–∞—Ç—É—Å: '–ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é',
    }))

    const summarySheet = XLSX.utils.json_to_sheet(summaryData)
    XLSX.utils.book_append_sheet(workbook, summarySheet, '–ö—Ä–∞—Ç–∫–∏–π –ø–ª–∞–Ω')

    // –õ–∏—Å—Ç "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"
    const styleInfo = metadata.style_info
    const totalTextLength = scenes.reduce(
      (acc, scene) =>
        acc +
        scene.variants.reduce(
          (acc2, variant) => acc2 + (variant.metadata?.text_length || 0),
          0
        ),
      0
    )

    const analyticsData = [
      {
        '–ë–ª–æ–≥–µ—Ä—Å–∫–∏–π —Å—Ç–∏–ª—å': styleInfo?.name || bloggerStyle,
        '–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∏–ª—è':
          styleInfo?.description || '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–ª–æ–≥–µ—Ä—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç',
        '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ü–µ–Ω': metadata.total_scenes,
        '–í–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞ —Å—Ü–µ–Ω—É': metadata.total_variants,
        '–í—Å–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤': scenes.reduce(
          (acc, scene) => acc + scene.variants.length,
          0
        ),
        '–û–±—â–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞': totalTextLength,
        '–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è': Math.round(
          totalTextLength /
            scenes.reduce((acc, scene) => acc + scene.variants.length, 0)
        ),
        '–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω': metadata.aspect_ratio,
        '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã':
          metadata.aspect_ratio === '16:9'
            ? 'YouTube (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ)'
            : metadata.aspect_ratio === '9:16'
            ? 'TikTok/Reels (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ)'
            : 'Instagram (–∫–≤–∞–¥—Ä–∞—Ç)',
        '–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞': '–¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç',
        '–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ –∑–≤–µ–∑–¥–∞—Ö': metadata.cost_breakdown.total_stars,
        '–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏': metadata.generation_date.toLocaleDateString('ru-RU'),
        '–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (—Å–µ–∫)': metadata.processing_time,
        '–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é': '–î–∞',
      },
    ]

    const analyticsSheet = XLSX.utils.json_to_sheet(analyticsData)
    XLSX.utils.book_append_sheet(workbook, analyticsSheet, '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞')

    // –õ–∏—Å—Ç "–°–æ–≤–µ—Ç—ã –±–ª–æ–≥–µ—Ä–∞–º"
    if (styleInfo && styleInfo.tips) {
      const tipsData = styleInfo.tips.map((tip: string, index: number) => ({
        '‚Ññ': index + 1,
        –°–æ–≤–µ—Ç: tip,
        –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
        –°—Ç–∏–ª—å: styleInfo.name,
      }))

      const tipsSheet = XLSX.utils.json_to_sheet(tipsData)
      XLSX.utils.book_append_sheet(workbook, tipsSheet, '–°–æ–≤–µ—Ç—ã –±–ª–æ–≥–µ—Ä–∞–º')
    }

    const fileName = `text_scenarios_${bloggerStyle.toLowerCase()}_data_${Date.now()}.xlsx`
    const filePath = path.join(this.outputDir, fileName)

    await fs.promises.mkdir(this.outputDir, { recursive: true })
    XLSX.writeFile(workbook, filePath)

    return filePath
  }

  async createTextScenarioArchive(
    htmlPath: string,
    excelPath: string,
    metadata: ScenarioReportMetadata & {
      blogger_style?: string
      style_info?: any
    },
    log: any
  ): Promise<string> {
    const bloggerStyle = metadata.blogger_style || 'YOUTUBE'
    const archiveName = `text_scenarios_${bloggerStyle.toLowerCase()}_${Date.now()}.zip`
    const archivePath = path.join(this.outputDir, archiveName)

    return new Promise((resolve, reject) => {
      const output = fs.createWriteStream(archivePath)
      const archive = archiver('zip', { zlib: { level: 9 } })

      output.on('close', () => {
        log.info(
          `üì¶ –ê—Ä—Ö–∏–≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Å–æ–∑–¥–∞–Ω: ${archiveName} (${archive.pointer()} bytes)`
        )
        resolve(archivePath)
      })

      archive.on('error', err => {
        log.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:', err)
        reject(err)
      })

      archive.pipe(output)

      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ –∞—Ä—Ö–∏–≤
      archive.file(htmlPath, { name: path.basename(htmlPath) })
      archive.file(excelPath, { name: path.basename(excelPath) })

      // –°–æ–∑–¥–∞—ë–º README –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
      const readmeContent = `
# üìù –¢–µ–∫—Å—Ç–æ–≤—ã–µ –°—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –ë–ª–æ–≥–µ—Ä–æ–≤: ${metadata.blogger_style}

## üöÄ –û–ø–∏—Å–∞–Ω–∏–µ
–≠—Ç–æ—Ç –∞—Ä—Ö–∏–≤ —Å–æ–¥–µ—Ä–∂–∏—Ç –≥–æ—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–≥–µ—Ä—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

## üì± –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è:
${
  metadata.aspect_ratio === '16:9'
    ? 'üé• YouTube (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ)'
    : metadata.aspect_ratio === '9:16'
    ? 'üì± TikTok & Instagram Reels (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ)'
    : 'üì∏ Instagram Posts (–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)'
}

## üé≠ –°—Ç–∏–ª—å: ${metadata.style_info?.name || metadata.blogger_style}
${
  metadata.style_info?.description ||
  '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–ª–æ–≥–µ—Ä—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π'
}

## üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ö–∏–≤–∞:
- üìÑ **HTML –æ—Ç—á—ë—Ç** - –∫—Ä–∞—Å–∏–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
- üìä **Excel —Ñ–∞–π–ª** - –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
- üìù **README.txt** - –¥–∞–Ω–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è

## üìä Excel –ª–∏—Å—Ç—ã:
- **"–°—Ü–µ–Ω–∞—Ä–∏–∏"** - –ø–æ–ª–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
- **"–ö—Ä–∞—Ç–∫–∏–π –ø–ª–∞–Ω"** - –æ–±–∑–æ—Ä –≤—Å–µ—Ö —Å—Ü–µ–Ω
- **"–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"** - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏
- **"–°–æ–≤–µ—Ç—ã –±–ª–æ–≥–µ—Ä–∞–º"** - —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∏–ª—é

## üí° –°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:
${
  metadata.style_info?.tips
    ?.map((tip: string, i: number) => `${i + 1}. ${tip}`)
    .join('\n') || '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞!'
}

## üéØ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–∏:
1. **–û—Ç–∫—Ä–æ–π—Ç–µ HTML** - –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
2. **–ò–∑—É—á–∏—Ç–µ Excel** - –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –≤ –≤–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã
3. **–ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç—ã** - –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π —Å—Ç–∏–ª—å –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
4. **–°–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç** - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è —Å—ä—ë–º–æ–∫

## üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- üé¨ –°—Ü–µ–Ω: ${metadata.total_scenes}
- üìù –í–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞ —Å—Ü–µ–Ω—É: ${metadata.total_variants}  
- üìÑ –í—Å–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: ${metadata.total_scenes * metadata.total_variants}
- ‚≠ê –°—Ç–æ–∏–º–æ—Å—Ç—å: ${metadata.cost_breakdown.total_stars} –∑–≤–µ–∑–¥
- ‚è±Ô∏è –í—Ä–µ–º—è: ${metadata.processing_time} —Å–µ–∫—É–Ω–¥

## üé• –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—ä—ë–º–∫–µ:
${
  metadata.aspect_ratio === '16:9'
    ? '‚úÖ –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è —Å—ä—ë–º–∫–∞ –¥–ª—è YouTube\n‚úÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 3-15+ –º–∏–Ω—É—Ç\n‚úÖ –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç\n‚úÖ –ß–µ—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞'
    : metadata.aspect_ratio === '9:16'
    ? '‚úÖ –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è —Å—ä—ë–º–∫–∞ –¥–ª—è TikTok/Reels\n‚úÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 15-60 —Å–µ–∫—É–Ω–¥\n‚úÖ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ–º–ø\n‚úÖ –•—É–∫–∏ –≤ –Ω–∞—á–∞–ª–µ'
    : '‚úÖ –ö–≤–∞–¥—Ä–∞—Ç–Ω–∞—è —Å—ä—ë–º–∫–∞ –¥–ª—è Instagram\n‚úÖ –≠—Å—Ç–µ—Ç–∏—á–Ω–∞—è –ø–æ–¥–∞—á–∞\n‚úÖ Lifestyle –∫–æ–Ω—Ç–µ–Ω—Ç\n‚úÖ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞'
}

## üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!
–í—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –≥–æ—Ç–æ–≤—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –ü—Ä–æ—Å—Ç–æ —Å–ª–µ–¥—É–π—Ç–µ —Ç–µ–∫—Å—Ç—É –∏ –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å!

---
## üìÖ –°–æ–∑–¥–∞–Ω–æ: ${metadata.generation_date.toLocaleDateString(
        'ru-RU'
      )} –≤ ${metadata.generation_date.toLocaleTimeString('ru-RU')}
## ü§ñ Text Scenario Generator - AI-Powered Content Creation
## üìù –°—Ç–∏–ª—å: ${metadata.blogger_style} | –§–æ—Ä–º–∞—Ç: ${metadata.aspect_ratio}

–£—Å–ø–µ—Ö–æ–≤ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—Ä—É—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞! üåü
      `

      archive.append(readmeContent, { name: 'README_—Å—Ü–µ–Ω–∞—Ä–∏–∏.txt' })

      archive.finalize()
    })
  }
}
