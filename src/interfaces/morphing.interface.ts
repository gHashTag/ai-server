/**
 * üß¨ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –ú–æ—Ä—Ñ–∏–Ω–≥ API
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ ZIP –∞—Ä—Ö–∏–≤–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –º–æ—Ä—Ñ–∏–Ω–≥-–≤–∏–¥–µ–æ
 */

// ================================
// –û–°–ù–û–í–ù–´–ï –¢–ò–ü–´ –ò ENUMS
// ================================

export enum MorphingType {
  SEAMLESS = 'seamless',
  LOOP = 'loop',
}

export enum MorphingModel {
  KLING_V16_PRO = 'kling-v1.6-pro',
}

export enum MorphingStatus {
  PROCESSING = 'processing',
  COMPLETED = 'completed',
  FAILED = 'failed',
  ERROR = 'error',
}

// ================================
// –ó–ê–ü–†–û–° –ù–ê –ú–û–†–§–ò–ù–ì
// ================================

/**
 * –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ—Ä—Ñ–∏–Ω–≥ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
 * –ü—Ä–∏—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ FormData –≤ POST /generate/morph-images
 */
export interface MorphImagesRequest {
  type: 'morphing'
  telegram_id: string
  images_zip: File
  image_count: string // –ü—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ –∏–∑ FormData
  morphing_type: MorphingType
  model: MorphingModel
  is_ru: string // –ü—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ –∏–∑ FormData
  bot_name: string
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ (–ø–æ—Å–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏)
 */
export interface ProcessedMorphRequest {
  type: 'morphing'
  telegram_id: string
  image_count: number
  morphing_type: MorphingType
  model: MorphingModel
  is_ru: boolean
  bot_name: string
  zip_file_path: string
}

// ================================
// –û–¢–í–ï–¢ –ú–û–†–§–ò–ù–ì API
// ================================

/**
 * –û—Ç–≤–µ—Ç –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
 */
export interface MorphImagesSuccessResponse {
  message: string
  job_id: string
  status: MorphingStatus.PROCESSING
  estimated_time: string
}

/**
 * –û—Ç–≤–µ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
 */
export interface MorphImagesErrorResponse {
  message: string
  error: string
  status: MorphingStatus.ERROR
}

export type MorphImagesResponse =
  | MorphImagesSuccessResponse
  | MorphImagesErrorResponse

// ================================
// –û–ë–†–ê–ë–û–¢–ö–ê ZIP –ê–†–•–ò–í–ê
// ================================

/**
 * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
 */
export interface ExtractedImage {
  filename: string
  originalName: string
  path: string
  // –£–±–∏—Ä–∞–µ–º buffer: Buffer - —ç—Ç–æ –≤—ã–∑—ã–≤–∞–ª–æ output_too_large
  order: number // –ü–æ—Ä—è–¥–æ–∫ –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞)
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ ZIP –∞—Ä—Ö–∏–≤–∞
 */
export interface ZipExtractionResult {
  success: boolean
  images: ExtractedImage[]
  totalCount: number
  extractionPath: string
  error?: string
}

// ================================
// –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° KLING API
// ================================

/**
 * –ó–∞–ø—Ä–æ—Å –∫ Kling API
 */
export interface KlingMorphingRequest {
  model: string // 'kling-v1.6-pro'
  task_type: 'image_morphing'
  images: string[] // Base64 encoded images
  transition_type: MorphingType
  output_format: 'mp4'
  quality: 'high'
  webhook_url?: string
}

/**
 * –û—Ç–≤–µ—Ç –æ—Ç Kling API
 */
export interface KlingMorphingResponse {
  id: string
  status: 'queued' | 'processing' | 'completed' | 'failed'
  model: string
  created_at: string
  output_url?: string
  output_duration?: number
  error?: string
  estimated_time?: number
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ Kling
 */
export interface KlingProcessingResult {
  success: boolean
  job_id: string
  video_url?: string
  error?: string
  processing_time?: number
}

// ================================
// –°–û–•–†–ê–ù–ï–ù–ò–ï –ò –î–û–°–¢–ê–í–ö–ê
// ================================

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
 */
export interface VideoStorageResult {
  success: boolean
  public_url: string
  file_size: number
  file_path: string
  error?: string
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
 */
export interface TelegramDeliveryResult {
  success: boolean
  message_id?: number
  error?: string
  delivery_time?: number
}

// ================================
// –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –ú–û–†–§–ò–ù–ì–ê
// ================================

/**
 * –ü–æ–ª–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ –º–æ—Ä—Ñ–∏–Ω–≥–∞
 */
export interface MorphingJobResult {
  job_id: string
  telegram_id: string
  status: MorphingStatus

  // –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  original_request: ProcessedMorphRequest

  // –≠—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
  zip_extraction: ZipExtractionResult
  kling_processing: KlingProcessingResult
  video_storage: VideoStorageResult
  telegram_delivery: TelegramDeliveryResult

  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  created_at: Date
  completed_at?: Date
  processing_time?: number
  final_video_url?: string
  error?: string
}

// ================================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò –ù–ê–°–¢–†–û–ô–ö–ò
// ================================

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ—Ä—Ñ–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
 */
export interface MorphingConfig {
  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
  max_images: number
  min_images: number
  max_file_size_mb: number
  allowed_image_formats: string[]

  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  processing_timeout_ms: number
  cleanup_delay_ms: number

  // Kling API
  kling_api_url: string
  kling_model: string

  // –•—Ä–∞–Ω–∏–ª–∏—â–µ
  temp_dir: string
  output_dir: string
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
export const DEFAULT_MORPHING_CONFIG: MorphingConfig = {
  max_images: 100,
  min_images: 2,
  max_file_size_mb: 50,
  allowed_image_formats: ['.jpg', '.jpeg', '.png', '.webp'],
  processing_timeout_ms: 600000, // 10 –º–∏–Ω—É—Ç
  cleanup_delay_ms: 3600000, // 1 —á–∞—Å
  kling_api_url: 'https://api.kling.kuaishou.com/v1',
  kling_model: 'kling-v1.6-pro',
  temp_dir: process.cwd() + '/tmp/morphing', // –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
  output_dir: process.cwd() + '/uploads/morphing', // –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
}

// ================================
// –£–¢–ò–õ–ò–¢–ê–†–ù–´–ï –¢–ò–ü–´
// ================================

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–æ–≤ –º–æ—Ä—Ñ–∏–Ω–≥–∞
 */
export interface MorphingLogEntry {
  timestamp: Date
  stage:
    | 'validation'
    | 'extraction'
    | 'morphing'
    | 'storage'
    | 'delivery'
    | 'cleanup'
  message: string
  details?: any
  error?: boolean
}

/**
 * –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
 */
export interface MorphingProgress {
  job_id: string
  current_stage: string
  progress_percent: number
  estimated_remaining_ms: number
  logs: MorphingLogEntry[]
}
