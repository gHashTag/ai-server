import { Telegraf } from 'telegraf'
import { MyContext } from '@/interfaces'
import { logger } from '@/utils/logger'
export const sendPaymentNotification = async ({
  amount,
  stars, // –ó–≤–µ–∑–¥—ã –≤—Å–µ –µ—â–µ –Ω—É–∂–Ω—ã, –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
  telegramId,
  language_code,
  username,
  groupId,
  bot,
  subscription, // –≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –ø–æ–∫—É–ø–∫–∏
}: {
  amount: string
  stars: number
  telegramId: string
  language_code: string
  username: string
  groupId: string // ID –≥—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  bot: Telegraf<MyContext>
  subscription?: string // –ò–º—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ undefined/–ø—É—Å—Ç–æ
}) => {
  try {
    // –ó–∞—â–∏—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞
    if (!bot || !bot.telegram) {
      console.error('‚ùå Bot instance is invalid in sendPaymentNotification');
      logger.error('[sendPaymentNotification] Bot instance is invalid');
      return; // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–ª–∞—Ç–µ–∂–∞
    }

    let caption = '' // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π

    const userInfo = `@${
      username ||
      (language_code === 'ru'
        ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username'
        : 'User without username')
    } (ID: ${telegramId.toString()})`

    if (language_code === 'ru') {
      if (subscription) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞
        caption = `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userInfo} –∫—É–ø–∏–ª –ø–æ–¥–ø–∏—Å–∫—É "${subscription}" –∑–∞ ${amount} —Ä—É–±–ª–µ–π.`
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–≤–µ–∑–¥—ã, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å: caption += `\n(–ù–∞—á–∏—Å–ª–µ–Ω–æ –∑–≤–µ–∑–¥ –ø–æ —Ç–∞—Ä–∏—Ñ—É: ${stars} ‚≠ê)`;
      } else {
        // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–≤–µ–∑–¥
        caption = `üí∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userInfo} –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${stars} ‚≠ê (–æ–ø–ª–∞—Ç–∏–ª ${amount} —Ä—É–±–ª–µ–π).`
      }
    } else {
      // –ê–Ω–≥–ª–∏–π—Å–∫–∞—è –≤–µ—Ä—Å–∏—è
      if (subscription) {
        caption = `‚úÖ User ${userInfo} purchased subscription "${subscription}" for ${amount} RUB.`
        // Optional stars: caption += `\n(Stars awarded: ${stars} ‚≠ê)`;
      } else {
        caption = `üí∏ User ${userInfo} topped up balance by ${stars} ‚≠ê (paid ${amount} RUB).`
      }
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
    await bot.telegram.sendMessage(groupId, caption) // –£–±–µ–¥–∏—Å—å, —á—Ç–æ groupId –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ –≤ –≥—Ä—É–ø–ø—É:', error)
    // –ú–æ–∂–Ω–æ –Ω–µ –±—Ä–æ—Å–∞—Ç—å –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –∏–∑-–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    // throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ')
    logger.error(
      `[sendPaymentNotification] Failed to send group notification to ${groupId}`,
      error
    ) // –ò—Å–ø–æ–ª—å–∑—É–µ–º logger, –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω
  }
}
