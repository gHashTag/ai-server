import multer from 'multer'
import path from 'path'
import fs from 'fs'

declare module 'express' {
  interface Request {
    files?: Express.Multer.File[]
    // –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å AuthMiddleware, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç req.user,
    // —Ç–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Ç–∞–∫–∂–µ —Ä–∞—Å—à–∏—Ä–∏—Ç—å Request –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:
    // user?: { telegram_id: string | number; /* –¥—Ä—É–≥–∏–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */ }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
async function ensureDirectoryExistence(filePath: string) {
  console.log(`Ensuring directory exists: ${filePath}`) // –õ–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—É—Ç–∏
  try {
    await fs.promises.mkdir(filePath, { recursive: true })
    console.log(`Directory created: ${filePath}`) // –õ–æ–≥ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è
  } catch (error) {
    console.error(`Error creating directory: ${error}`)
    throw error
  }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è multer
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    try {
      console.log('CASE: storage destination function entered')
      console.log('req.body:', req.body) // –í—ã–≤–æ–¥–∏–º –≤—Å–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞

      // üîß FIX: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É, —Ç–∞–∫ –∫–∞–∫ req.body –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –≥–æ—Ç–æ–≤
      // telegram_id –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Å–µ—Ö –ø–æ–ª–µ–π
      const tempDir = path.join(
        __dirname, // –≠—Ç–æ –±—É–¥–µ—Ç dist/utils
        '..', // –ü–æ–¥–Ω—è—Ç—å—Å—è –¥–æ dist/
        '..', // –ü–æ–¥–Ω—è—Ç—å—Å—è –¥–æ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ (–≥–¥–µ src/, uploads/)
        'tmp' // –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞
      )

      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
      try {
        const fsSync = require('fs')
        fsSync.mkdirSync(tempDir, { recursive: true })
        console.log('üìÅ Using temp directory:', tempDir)
        cb(null, tempDir)
      } catch (mkdirError) {
        console.error('Error creating temp directory:', mkdirError)
        cb(mkdirError, '')
      }
    } catch (error) {
      console.error('Error in multer destination function:', error)
      cb(error, '')
    }
  },
  filename: function (req, file, cb) {
    console.log('CASE: filename function entered')
    console.log('req.body for filename:', req.body) // –ü—Ä–æ–≤–µ—Ä–∏–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ req.body –∏ –∑–¥–µ—Å—å
    const originalFilename = file.originalname || 'unknown_file'
    const safeOriginalFilename = originalFilename.replace(
      /[^a-zA-Z0-9._-]/g,
      '_'
    )
    const filename = Date.now() + '-' + safeOriginalFilename
    console.log(`Generated filename: ${filename}`)
    cb(null, filename)
  },
})

export const fileUpload = multer({ storage: storage })
