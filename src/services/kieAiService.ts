import axios from 'axios';
import { errorMessage, errorMessageAdmin } from '@/helpers';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Kie.ai API
 * –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://docs.kie.ai
 * –≠–∫–æ–Ω–æ–º–∏—è –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å Vertex AI: –¥–æ 87%
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π Kie.ai (–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è)
interface KieModelConfig {
  name: string;
  description: string;
  pricePerSecond: number;
  maxDuration: number;
  supportedFormats: string[];
  kieModelName: string;
  endpoint: string;
  supportedDurations?: number[];
}

export const KIE_AI_MODELS: Record<string, KieModelConfig> = {
  'veo-3-fast': {
    name: 'Veo 3 Fast',
    description: '–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è',
    pricePerSecond: 0.05, // $0.05/—Å–µ–∫ (87% —ç–∫–æ–Ω–æ–º–∏—è –ø—Ä–æ—Ç–∏–≤ $0.40 Vertex AI)
    maxDuration: 10,
    supportedFormats: ['16:9', '9:16', '1:1'],
    kieModelName: 'veo3', // –†–µ–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ Kie.ai API
    endpoint: '/veo/generate'
  },
  'veo-3': {
    name: 'Veo 3 Quality', 
    description: '–ü—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ',
    pricePerSecond: 0.25, // $0.25/—Å–µ–∫ (37% —ç–∫–æ–Ω–æ–º–∏—è –ø—Ä–æ—Ç–∏–≤ $0.40 Vertex AI)
    maxDuration: 10,
    supportedFormats: ['16:9', '9:16', '1:1'],
    kieModelName: 'veo3', // –†–µ–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ Kie.ai API
    endpoint: '/veo/generate'
  },
  'runway-gen3': {
    name: 'Runway Gen3',
    description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è',
    pricePerSecond: 0.30, // $0.30/—Å–µ–∫
    maxDuration: 8, // Runway –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ 5 –∏–ª–∏ 8 —Å–µ–∫—É–Ω–¥
    supportedFormats: ['16:9', '9:16', '1:1'],
    kieModelName: 'gen3', // –†–µ–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ Kie.ai API  
    endpoint: '/runway/generate',
    supportedDurations: [5, 8] // –¢–æ–ª—å–∫–æ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è
  }
};

interface KieAiGenerationOptions {
  model: 'veo-3-fast' | 'veo-3' | 'runway-gen3';
  prompt: string;
  duration: number; // 2-10 —Å–µ–∫—É–Ω–¥ –¥–ª—è Veo, 5 –∏–ª–∏ 8 –¥–ª—è Runway
  aspectRatio?: '16:9' | '9:16' | '1:1';
  imageUrl?: string; // –¥–ª—è image-to-video
  userId?: string;
  projectId?: number;
}

interface KieAiResponse {
  success: boolean;
  data?: {
    videoUrl: string;
    duration: number;
    taskId?: string;
  };
  cost: {
    usd: number;
    stars: number;
  };
  provider: string;
  model: string;
  processingTime?: number;
  error?: string;
}

export class KieAiService {
  private apiKey: string;
  private baseUrl: string = 'https://api.kie.ai/api/v1';
  
  constructor() {
    this.apiKey = process.env.KIE_AI_API_KEY || '';
    if (!this.apiKey) {
      console.warn('‚ö†Ô∏è KIE_AI_API_KEY not found. Kie.ai will not be available.');
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API –∏ –±–∞–ª–∞–Ω—Å
   */
  async checkHealth(): Promise<boolean> {
    if (!this.apiKey) {
      return false;
    }
    
    try {
      // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
      const testPayload = {
        model: 'veo3',
        prompt: 'health check test',
        duration: 2,
        aspect_ratio: '16:9'
      };

      const response = await axios.post(`${this.baseUrl}/veo/generate`, testPayload, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        },
        timeout: 10000
      });
      
      // –ï—Å–ª–∏ –∫–æ–¥ 402 (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤) - API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω–µ—Ç –¥–µ–Ω–µ–≥
      if (response.data.code === 402) {
        console.log('‚ö†Ô∏è Kie.ai API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤');
        return false; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false —á—Ç–æ–±—ã —Å—Ä–∞–±–æ—Ç–∞–ª fallback
      }
      
      console.log('‚úÖ Kie.ai API –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –∏–º–µ–µ—Ç –∫—Ä–µ–¥–∏—Ç—ã');
      return true;
    } catch (error: any) {
      if (error.response?.data?.code === 402) {
        console.log('‚ö†Ô∏è Kie.ai API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤');
        // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ê–î–ú–ò–ù–ê–ú –û –ù–ï–î–û–°–¢–ê–¢–ö–ï –ë–ê–õ–ê–ù–°–ê
        console.error('üö® CRITICAL: Kie.ai balance insufficient during health check!');
        errorMessageAdmin(new Error(`üö® CRITICAL KIE.AI BALANCE ERROR: Health check failed due to insufficient credits. System will fallback to expensive Vertex AI (87% cost increase). IMMEDIATE ACTION REQUIRED: Top up Kie.ai balance!`));
        return false; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false —á—Ç–æ–±—ã —Å—Ä–∞–±–æ—Ç–∞–ª fallback
      }
      console.error('‚ùå Kie.ai API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
      errorMessageAdmin(new Error(`üö® KIE.AI API UNAVAILABLE: Health check failed - ${error.message}. Fallback to Vertex AI will be used.`));
      return false;
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞
   */
  async getAccountBalance(): Promise<{ credits: number }> {
    if (!this.apiKey) {
      throw new Error('KIE_AI_API_KEY is required');
    }

    try {
      const response = await axios.get(`${this.baseUrl}/chat/credit`, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        }
      });
      
      return { credits: response.data.credits || 0 };
    } catch (error) {
      console.error('Error getting Kie.ai balance:', error);
      throw new Error(`Failed to get balance: ${error.message}`);
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Kie.ai
   */
  async generateVideo(options: KieAiGenerationOptions): Promise<{
    videoUrl: string;
    cost: number;
    duration: number;
    processingTime: number;
  }> {
    if (!this.apiKey) {
      throw new Error('KIE_AI_API_KEY is required for video generation');
    }

    const {
      model,
      prompt,
      duration,
      aspectRatio = '16:9',
      imageUrl,
      userId,
      projectId
    } = options;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
    const modelConfig = KIE_AI_MODELS[model];
    if (!modelConfig) {
      throw new Error(`Unsupported model: ${model}`);
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
    let clampedDuration: number;
    
    if (modelConfig.supportedDurations) {
      // –î–ª—è Runway - —Ç–æ–ª—å–∫–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
      clampedDuration = modelConfig.supportedDurations.reduce((prev, curr) =>
        Math.abs(curr - duration) < Math.abs(prev - duration) ? curr : prev
      );
      if (clampedDuration !== duration) {
        console.log(`‚ö†Ô∏è Duration adjusted from ${duration}s to ${clampedDuration}s for ${model} (supported: ${modelConfig.supportedDurations.join(', ')})`);
      }
    } else {
      // –î–ª—è Veo - –æ–±—ã—á–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
      clampedDuration = Math.max(2, Math.min(modelConfig.maxDuration, duration));
      if (clampedDuration !== duration) {
        console.log(`‚ö†Ô∏è Duration adjusted from ${duration}s to ${clampedDuration}s for ${model}`);
      }
    }

    // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    const costUSD = clampedDuration * modelConfig.pricePerSecond;

    const startTime = Date.now();

    try {
      console.log(`üé¨ Starting ${model} generation via Kie.ai...`);
      console.log(`   ‚Ä¢ Prompt: ${prompt}`);
      console.log(`   ‚Ä¢ Duration: ${clampedDuration}s`);  
      console.log(`   ‚Ä¢ Aspect Ratio: ${aspectRatio}`);
      console.log(`   ‚Ä¢ Estimated cost: $${costUSD.toFixed(3)}`);

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∏ endpoint –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      const kieModelName = modelConfig.kieModelName;
      const endpoint = `${this.baseUrl}${modelConfig.endpoint}`;
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ Kie.ai API
      const requestBody: any = {
        model: kieModelName,
        prompt: prompt,
        duration: clampedDuration,
        aspectRatio: aspectRatio,
        ...(imageUrl && { imageUrl }),
        ...(userId && { userId }),
        ...(projectId && { projectId })
      };

      // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è Runway
      if (modelConfig.endpoint === '/runway/generate') {
        requestBody.videoQuality = 'high'; // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è Runway
      }

      console.log(`üéØ Using model: ${kieModelName} at endpoint: ${endpoint}`);

      const response = await axios.post(endpoint, requestBody, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        },
        timeout: 300000 // 5 –º–∏–Ω—É—Ç –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
      });

      if (!response.data.success) {
        throw new Error(response.data.error || 'Video generation failed');
      }

      const processingTime = Date.now() - startTime;

      console.log(`‚úÖ ${model} generation completed in ${processingTime}ms`);
      console.log(`   ‚Ä¢ Video URL: ${response.data.data.videoUrl}`);
      console.log(`   ‚Ä¢ Actual cost: $${costUSD.toFixed(3)}`);

      return {
        videoUrl: response.data.data.videoUrl,
        cost: costUSD,
        duration: clampedDuration,
        processingTime
      };

    } catch (error: any) {
      console.error(`‚ùå Kie.ai ${model} generation failed:`, error.response?.data || error.message);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ Kie.ai
      if (error.response?.status === 401) {
        const errorMsg = 'Invalid Kie.ai API key. Please check KIE_AI_API_KEY environment variable.';
        // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
        console.error('üö® CRITICAL: Kie.ai API key is invalid!');
        errorMessageAdmin(new Error(`üö® CRITICAL KIE.AI ERROR: Invalid API key - ${errorMsg}`));
        throw new Error(errorMsg);
      } else if (error.response?.status === 402) {
        const errorMsg = 'Insufficient credits in Kie.ai account. Please top up your balance.';
        // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ê–î–ú–ò–ù–ê–ú –û –ù–ï–î–û–°–¢–ê–¢–ö–ï –ë–ê–õ–ê–ù–°–ê
        console.error('üö® CRITICAL: Kie.ai balance is insufficient! Fallback to expensive Vertex AI!');
        errorMessageAdmin(new Error(`üö® CRITICAL KIE.AI BALANCE ERROR: Insufficient credits - falling back to expensive Vertex AI. Current balance may be exhausted. IMMEDIATE ACTION REQUIRED: Top up Kie.ai balance to restore 87% cost savings!`));
        throw new Error(errorMsg);
      } else if (error.response?.status === 429) {
        const errorMsg = 'Rate limit exceeded. Please wait before making another request.';
        console.warn('‚ö†Ô∏è WARNING: Kie.ai rate limit exceeded');
        errorMessageAdmin(new Error(`‚ö†Ô∏è WARNING KIE.AI RATE LIMIT: ${errorMsg} - May affect video generation performance`));
        throw new Error(errorMsg);
      }
      
      // –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–æ–∂–µ –∫—Ä–∏—Ç–∏—á–Ω–∞ - –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å API
      const errorMsg = `Kie.ai video generation failed: ${error.message}`;
      console.error('üö® CRITICAL: Kie.ai service failure!');
      errorMessageAdmin(new Error(`üö® CRITICAL KIE.AI SERVICE ERROR: ${errorMsg} - Fallback to Vertex AI may be triggered`));
      throw new Error(errorMsg);
    }
  }

  /**
   * –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
   */
  calculateCost(model: string, durationSeconds: number): number {
    const modelConfig = KIE_AI_MODELS[model as keyof typeof KIE_AI_MODELS];
    if (!modelConfig) {
      throw new Error(`Unknown model: ${model}`);
    }
    
    return durationSeconds * modelConfig.pricePerSecond;
  }

  /**
   * –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ –∑–≤–µ–∑–¥–∞—Ö —Å –Ω–∞—Ü–µ–Ω–∫–æ–π
   */
  calculateCostInStars(model: string, durationSeconds: number): number {
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    const STAR_COST_USD = 0.016; // $0.016 –∑–∞ –∑–≤–µ–∑–¥—É
    const MARKUP_RATE = 1.5; // –Ω–∞—Ü–µ–Ω–∫–∞ 50%
    
    const baseCostUSD = this.calculateCost(model, durationSeconds);
    const baseCostStars = baseCostUSD / STAR_COST_USD;
    const finalCostStars = baseCostStars * MARKUP_RATE;
    
    return Math.floor(finalCostStars);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –º–æ–¥–µ–ª–∏
   */
  isModelSupported(model: string): boolean {
    return model in KIE_AI_MODELS;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
   */
  getModelInfo(model: string) {
    return KIE_AI_MODELS[model as keyof typeof KIE_AI_MODELS] || null;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
   */
  getAllModels() {
    return KIE_AI_MODELS;
  }
}