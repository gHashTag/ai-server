import { supabase } from '@/core/supabase'
import { getBotByName } from '@/core/bot'
import { Telegraf } from 'telegraf'
import { MyContext } from '@/interfaces'

import { getTelegramIdFromFinetune } from '@/core/bfl'
export async function notifyTrainingSuccess(
  finetuneId: string,
  status: string,
  result: string
): Promise<void> {
  try {
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º —Ç–∞–±–ª–∏—Ü –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è telegram_id –∏ bot_name
    console.log(`finetuneId: ${finetuneId}`)
    const telegram_id = await getTelegramIdFromFinetune(finetuneId)
    console.log(`telegramId: ${telegram_id}`)

    //@ts-ignore
    const bot_name = data.users.bot_name
    //@ts-ignore
    const language_code = data.users.language_code

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const { error: updateError } = await supabase
      .from('model_trainings')
      .update({ status, result })
      .eq('finetune_id', finetuneId)

    if (updateError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:', updateError)
      return
    }

    // –ü–æ–ª—É—á–∞–µ–º –±–æ—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
    const { bot } = getBotByName(bot_name) as { bot: Telegraf<MyContext> }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ
    await bot.telegram.sendMessage(
      telegram_id,
      language_code === 'ru'
        ? `üéâ –í–∞—à–∞ –º–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –Ω–∞—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–Ω–∞!`
        : `üéâ Your model has been trained successfully!`
    )
  } catch (error) {
    console.error(
      '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ:',
      error
    )
  }
}
