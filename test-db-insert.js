/**
 * –¢–µ—Å—Ç –ø—Ä—è–º–æ–π –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É instagram_similar_users
 */

const { Pool } = require('pg')

async function testDirectInsert() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º—É—é –≤—Å—Ç–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö...')

  const connectionString = process.env.NEON_DATABASE_URL

  if (!connectionString) {
    console.error('‚ùå NEON_DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
    process.exit(1)
  }

  const dbPool = new Pool({
    connectionString: connectionString,
    ssl: {
      rejectUnauthorized: false,
    },
  })

  const client = await dbPool.connect()

  try {
    // –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('üíæ –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')

    const testUsers = [
      {
        search_username: 'test_search',
        user_pk: '123456789',
        username: 'test_user_1',
        full_name: 'Test User 1',
        is_private: false,
        is_verified: true,
        profile_pic_url: 'https://example.com/pic1.jpg',
        profile_url: 'https://instagram.com/test_user_1',
        project_id: 1,
      },
      {
        search_username: 'test_search',
        user_pk: '987654321',
        username: 'test_user_2',
        full_name: 'Test User 2',
        is_private: true,
        is_verified: false,
        profile_pic_url: 'https://example.com/pic2.jpg',
        profile_url: 'https://instagram.com/test_user_2',
        project_id: 1,
      },
    ]

    for (const user of testUsers) {
      await client.query(
        `INSERT INTO instagram_similar_users 
         (search_username, user_pk, username, full_name, is_private, is_verified, 
          profile_pic_url, profile_url, project_id)
         VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
         ON CONFLICT (search_username, user_pk) DO NOTHING`,
        [
          user.search_username,
          user.user_pk,
          user.username,
          user.full_name,
          user.is_private,
          user.is_verified,
          user.profile_pic_url,
          user.profile_url,
          user.project_id,
        ]
      )
      console.log(`‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.username}`)
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = await client.query(
      'SELECT COUNT(*) as total FROM instagram_similar_users'
    )
    console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: ${result.rows[0].total}`)

    // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ
    const dataResult = await client.query(`
      SELECT username, full_name, is_verified, project_id, created_at 
      FROM instagram_similar_users 
      ORDER BY created_at DESC
    `)

    console.log('\nüìã –î–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ:')
    dataResult.rows.forEach((row, index) => {
      console.log(
        `${index + 1}. ${row.username} (${row.full_name}) - Verified: ${
          row.is_verified
        } - Project: ${row.project_id}`
      )
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error.message)
    console.error('–î–µ—Ç–∞–ª–∏:', error)
    throw error
  } finally {
    client.release()
    await dbPool.end()
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testDirectInsert()
    .then(() => {
      console.log('\nüéâ –¢–µ—Å—Ç –ø—Ä—è–º–æ–π –≤—Å—Ç–∞–≤–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
      process.exit(0)
    })
    .catch(error => {
      console.error('\nüí• –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error)
      process.exit(1)
    })
}

module.exports = { testDirectInsert }
