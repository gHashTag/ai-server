const { triggerApifyInstagramScraping } = require('./dist/inngest-functions/instagramApifyScraper')

async function testTriggerFix() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏')
  
  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å auto-system (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    const parseResult = await triggerApifyInstagramScraping({
      username_or_hashtag: 'theaisurfer',
      project_id: 999,
      source_type: 'competitor', 
      max_reels: 3, // –ú–µ–Ω—å—à–µ —Ä–∏–ª—Å–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞
      requester_telegram_id: 'auto-system', // –ö–ª—é—á–µ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞
      bot_name: 'neuro_blogger_bot'
    })
    
    console.log('‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω:', parseResult.eventId)
    console.log('üîç –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    const checkStatus = async () => {
      try {
        const fetch = (await import('node-fetch')).default
        const response = await fetch(`http://localhost:8288/v1/events/${parseResult.eventId}/runs`)
        const runs = await response.json()
        
        if (runs && runs.data && runs.data.length > 0) {
          const run = runs.data[0]
          console.log(`üìä Status: ${run.status} | Started: ${run.run_started_at}`)
          
          if (run.status === 'Completed') {
            console.log('‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!')
            console.log('üì¶ Output:', JSON.stringify(run.output, null, 2))
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª –ª–∏ –∑–∞–ø—É—â–µ–Ω delivery
            setTimeout(async () => {
              const deliveryResponse = await fetch('http://localhost:8288/v1/events?name=competitor%2Fdelivery-reels')
              const deliveryEvents = await deliveryResponse.json()
              
              console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—ã—Ç–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏:')
              console.log(`üì¨ –ù–∞–π–¥–µ–Ω–æ delivery —Å–æ–±—ã—Ç–∏–π: ${deliveryEvents.data ? deliveryEvents.data.length : 0}`)
              
              if (deliveryEvents.data && deliveryEvents.data.length > 0) {
                console.log('üéâ –£–°–ü–ï–•! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç—Ä–∏–≥–≥–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!')
                deliveryEvents.data.forEach((event, i) => {
                  console.log(`${i + 1}. Event ID: ${event.id}`)
                  console.log(`   Data:`, JSON.stringify(event.data, null, 2))
                })
              } else {
                console.log('‚ùå –û–®–ò–ë–ö–ê: –¢—Ä–∏–≥–≥–µ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª!')
              }
            }, 5000) // 5 —Å–µ–∫—É–Ω–¥
            
            return true
          }
        }
        return false
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message)
        return false
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    const interval = setInterval(async () => {
      const completed = await checkStatus()
      if (completed) {
        clearInterval(interval)
      }
    }, 30000)
    
    // –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
    setTimeout(checkStatus, 5000)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message)
  }
}

testTriggerFix()