#!/usr/bin/env node
/**
 * üöÄ –†–ï–ê–õ–¨–ù–´–ô –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 144022504
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –∂–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –±–æ—Ç–µ
 */

const axios = require('axios')

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const TEST_CONFIG = {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º production —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
  API_URL: 'https://ai-server-production-production-8e2d.up.railway.app',
  // –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: 'http://localhost:3000'
  
  USER_DATA: {
    telegram_id: '144022504',
    username: 'test_user_144022504',
    is_ru: true,
    bot_name: 'neuro_blogger_bot'
  },
  
  TEST_PROMPTS: [
    {
      name: '–ö–æ—Ä–æ—Ç–∫–∏–π —Ç–µ—Å—Ç',
      prompt: '–ö–æ—Ç –∏–≥—Ä–∞–µ—Ç —Å –º—è—á–∏–∫–æ–º –≤ —Å–æ–ª–Ω–µ—á–Ω–æ–º —Å–∞–¥—É',
      duration: 5,
      expectedCost: 0.25 // $0.05 * 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è veo3_fast
    },
    {
      name: '–¢–µ—Å—Ç —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º', 
      prompt: '–ö—Ä–∞—Å–∏–≤–∞—è –¥–µ–≤—É—à–∫–∞ —É–ª—ã–±–∞–µ—Ç—Å—è –∏ –º–∞—à–µ—Ç —Ä—É–∫–æ–π –Ω–∞ —Ñ–æ–Ω–µ –∑–∞–∫–∞—Ç–∞',
      duration: 3,
      expectedCost: 0.15 // $0.05 * 3 —Å–µ–∫—É–Ω–¥—ã
    }
  ]
}

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ
 */
async function sendVideoGenerationRequest(testCase) {
  const payload = {
    prompt: testCase.prompt,
    duration: testCase.duration,
    ...TEST_CONFIG.USER_DATA
  }
  
  console.log(`\nüöÄ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é: "${testCase.name}"`)
  console.log(`üìã Payload:`, {
    ...payload,
    prompt: `"${payload.prompt}"`
  })
  console.log(`üí∞ –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${testCase.expectedCost}`)
  
  const startTime = Date.now()
  
  try {
    const response = await axios.post(
      `${TEST_CONFIG.API_URL}/generate/veo3-video`,
      payload,
      {
        headers: {
          'Content-Type': 'application/json',
          'User-Agent': 'Integration-Test-144022504'
        },
        timeout: 30000 // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
      }
    )
    
    const responseTime = Date.now() - startTime
    
    console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç —Å–µ—Ä–≤–µ—Ä–æ–º –∑–∞ ${responseTime}ms`)
    console.log(`üì® –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:`, response.data)
    
    return {
      success: true,
      data: response.data,
      responseTime,
      jobId: response.data?.jobId
    }
    
  } catch (error) {
    const responseTime = Date.now() - startTime
    
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∑–∞ ${responseTime}ms:`)
    
    if (error.response) {
      console.error(`üìä HTTP Status: ${error.response.status}`)
      console.error(`üìã Response Data:`, error.response.data)
    } else {
      console.error(`üîå Network Error:`, error.message)
    }
    
    return {
      success: false,
      error: error.message,
      status: error.response?.status,
      responseTime
    }
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –ª–æ–≥–∏
 */
async function checkGenerationStatus(jobId, testCase) {
  if (!jobId) {
    console.log('‚ùå –ù–µ—Ç jobId –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è')
    return
  }
  
  console.log(`\nüîç –û—Ç—Å–ª–µ–∂–∏–≤–∞—é —Å—Ç–∞—Ç—É—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è jobId: ${jobId}`)
  console.log(`‚è≥ –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –±–æ—Ç–µ @${TEST_CONFIG.USER_DATA.bot_name}`)
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${TEST_CONFIG.USER_DATA.telegram_id}`)
  
  // –ñ–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
  const checkInterval = 10000 // 10 —Å–µ–∫—É–Ω–¥
  const maxChecks = 12 // –ú–∞–∫—Å–∏–º—É–º 2 –º–∏–Ω—É—Ç—ã –æ–∂–∏–¥–∞–Ω–∏—è
  let checks = 0
  
  const checkTimer = setInterval(() => {
    checks++
    console.log(`üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ ${checks}/${maxChecks} - –ø—Ä–æ—à–ª–æ ${checks * (checkInterval/1000)} —Å–µ–∫—É–Ω–¥`)
    
    if (checks >= maxChecks) {
      clearInterval(checkTimer)
      console.log(`\n‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ`)
      console.log(`üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–æ—Ç ${TEST_CONFIG.USER_DATA.bot_name} –≤—Ä—É—á–Ω—É—é`)
      console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${TEST_CONFIG.USER_DATA.telegram_id}`)
      console.log(`üÜî Job ID: ${jobId}`)
    }
  }, checkInterval)
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  console.log(`\nüìã –ß–¢–û –ü–†–û–í–ï–†–ò–¢–¨ –í –ë–û–¢–ï:`)
  console.log(`1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –±–æ—Ç: @${TEST_CONFIG.USER_DATA.bot_name}`)
  console.log(`2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∏–¥–µ–æ –ø—Ä–∏—à–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${TEST_CONFIG.USER_DATA.telegram_id}`)
  console.log(`3. –í–∏–¥–µ–æ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ–º–ø—Ç—É: "${testCase.prompt}"`)
  console.log(`4. –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ: ${testCase.duration} —Å–µ–∫—É–Ω–¥`)
  console.log(`5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–ø—Ä–æ—Å—É`)
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
 */
async function checkServerHealth() {
  console.log('üè• –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞...')
  
  try {
    const response = await axios.get(`${TEST_CONFIG.API_URL}/health`, {
      timeout: 10000
    })
    
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω')
    console.log('üìä Health status:', response.data)
    return true
    
  } catch (error) {
    console.error('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message)
    return false
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
async function runIntegrationTest() {
  console.log('üß™ –†–ï–ê–õ–¨–ù–´–ô –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ô –¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò –í–ò–î–ï–û')
  console.log('=' .repeat(60))
  console.log(`üåê API URL: ${TEST_CONFIG.API_URL}`)
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${TEST_CONFIG.USER_DATA.telegram_id}`)
  console.log(`ü§ñ –ë–æ—Ç: ${TEST_CONFIG.USER_DATA.bot_name}`)
  console.log(`üåç –Ø–∑—ã–∫: ${TEST_CONFIG.USER_DATA.is_ru ? '–†—É—Å—Å–∫–∏–π' : 'English'}`)
  console.log('=' .repeat(60))
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
  const serverHealthy = await checkServerHealth()
  if (!serverHealthy) {
    console.error('‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç–µ—Å—Ç - —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
    process.exit(1)
  }
  
  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å —Ç—Ä–∞—Ç–æ–π —Å—Ä–µ–¥—Å—Ç–≤!')
  console.log('üí∞ –ë—É–¥–µ—Ç –ø–æ—Ç—Ä–∞—á–µ–Ω–æ ~$0.40 –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ')
  console.log('üì± –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–¥–µ—Ç –≤ Telegram –±–æ—Ç')
  
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  // const readline = require('readline')
  // ... –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
  const results = []
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
  for (let i = 0; i < TEST_CONFIG.TEST_PROMPTS.length; i++) {
    const testCase = TEST_CONFIG.TEST_PROMPTS[i]
    
    console.log(`\n${'='.repeat(40)}`)
    console.log(`üß™ –¢–ï–°–¢ ${i + 1}/${TEST_CONFIG.TEST_PROMPTS.length}: ${testCase.name}`)
    console.log(`${'='.repeat(40)}`)
    
    const result = await sendVideoGenerationRequest(testCase)
    results.push({ testCase, result })
    
    if (result.success) {
      await checkGenerationStatus(result.jobId, testCase)
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    if (i < TEST_CONFIG.TEST_PROMPTS.length - 1) {
      console.log('\n‚è∏Ô∏è  –ü–∞—É–∑–∞ 5 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏...')
      await new Promise(resolve => setTimeout(resolve, 5000))
    }
  }
  
  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  console.log(`\n${'='.repeat(60)}`)
  console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø')
  console.log(`${'='.repeat(60)}`)
  
  let successCount = 0
  let totalCost = 0
  
  results.forEach(({ testCase, result }, index) => {
    console.log(`\n${index + 1}. ${testCase.name}:`)
    console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${result.success ? '‚úÖ –£–°–ü–ï–®–ù–û' : '‚ùå –û–®–ò–ë–ö–ê'}`)
    
    if (result.success) {
      console.log(`   üÜî Job ID: ${result.jobId}`)
      console.log(`   ‚è±Ô∏è  –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${result.responseTime}ms`)
      console.log(`   üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: $${testCase.expectedCost}`)
      successCount++
      totalCost += testCase.expectedCost
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${result.error}`)
      if (result.status) {
        console.log(`   üìä HTTP Status: ${result.status}`)
      }
    }
  })
  
  console.log(`\nüìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`)
  console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${successCount}/${results.length}`)
  console.log(`   üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${totalCost.toFixed(2)}`)
  console.log(`   üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –±–æ—Ç–µ @${TEST_CONFIG.USER_DATA.bot_name}`)
  
  if (successCount > 0) {
    console.log(`\nüéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç! –í–∏–¥–µ–æ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–π—Ç–∏ –≤ –±–æ—Ç.`)
  } else {
    console.log(`\n‚ùå –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞.`)
  }
  
  console.log('\nüëÄ –í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û –ü–†–û–í–ï–†–¨–¢–ï:')
  console.log('   1. –ü—Ä–∏—à–ª–∏ –ª–∏ –≤–∏–¥–µ–æ –≤ Telegram –±–æ—Ç')
  console.log('   2. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ª–∏ –≤–∏–¥–µ–æ –ø—Ä–æ–º–ø—Ç–∞–º')
  console.log('   3. –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ')
  console.log('   4. –ù–µ—Ç –ª–∏ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞')
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  runIntegrationTest()
    .then(() => {
      console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω')
      process.exit(0)
    })
    .catch(error => {
      console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error)
      process.exit(1)
    })
}

module.exports = {
  sendVideoGenerationRequest,
  checkGenerationStatus,
  TEST_CONFIG
}