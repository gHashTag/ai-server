#!/usr/bin/env node

/**
 * –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –¢–ï–°–¢ KIE.AI API
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ endpoints:
 * ‚Ä¢ Veo 3: /api/v1/veo/generate
 * ‚Ä¢ Runway Aleph: /api/v1/aleph/generate
 * ‚Ä¢ Runway: /api/v1/runway/generate
 */

const axios = require('axios');

console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –¢–ï–°–¢ KIE.AI API\n');

class FixedKieApiTester {
  constructor() {
    this.apiKey = 'f52f224a92970aa6b7c7780104a00f71';
    this.baseUrl = 'https://api.kie.ai/api/v1';
    this.results = [];
  }

  async checkBalance() {
    console.log('üí∞ –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê');
    console.log('='.repeat(40));
    
    try {
      const response = await axios.get(`${this.baseUrl}/chat/credit`, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('‚úÖ –ë–∞–ª–∞–Ω—Å –ø—Ä–æ–≤–µ—Ä–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      console.log('üìä –ö—Ä–µ–¥–∏—Ç—ã:', response.data.data || response.data.credits);
      return true;
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞:', error.response?.data || error.message);
      return false;
    }
  }

  async testVideoGeneration(config) {
    console.log(`\nüé• –¢–ï–°–¢: ${config.name}`);
    console.log('='.repeat(60));
    console.log(`üìã Endpoint: ${config.endpoint}`);
    console.log(`üìã –ú–æ–¥–µ–ª—å: ${config.model}`);
    console.log(`üìã Prompt: ${config.prompt}`);
    console.log(`üìã Duration: ${config.duration}s`);
    console.log(`üìã Aspect Ratio: ${config.aspectRatio}`);
    
    try {
      const requestBody = {
        model: config.model,
        prompt: config.prompt,
        duration: config.duration,
        aspectRatio: config.aspectRatio
      };
      
      console.log('\n‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...');
      console.log('üì§ –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:', JSON.stringify(requestBody, null, 2));
      
      const response = await axios.post(`${this.baseUrl}${config.endpoint}`, requestBody, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        },
        timeout: 300000 // 5 –º–∏–Ω—É—Ç
      });
      
      console.log('‚úÖ –ó–ê–ü–†–û–° –£–°–ü–ï–®–ï–ù!');
      console.log('üìä HTTP Status:', response.status);
      console.log('üìã Headers:', JSON.stringify(response.headers, null, 2));
      console.log('üìä Response:', JSON.stringify(response.data, null, 2));
      
      const result = {
        name: config.name,
        success: true,
        endpoint: config.endpoint,
        model: config.model,
        httpStatus: response.status,
        response: response.data,
        videoUrl: this.extractVideoUrl(response.data),
        actualDuration: this.extractDuration(response.data),
        cost: this.extractCost(response.data)
      };
      
      if (result.videoUrl) {
        console.log(`üéâ –í–ò–î–ï–û –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–û!`);
        console.log(`üîó URL: ${result.videoUrl}`);
        console.log(`‚è±Ô∏è  Duration: ${result.actualDuration || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}s`);
        console.log(`üí∞ Cost: $${result.cost || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
      }
      
      this.results.push(result);
      return result;
      
    } catch (error) {
      console.log('‚ùå –û–®–ò–ë–ö–ê:', error.message);
      
      if (error.response) {
        console.log('üìã HTTP Status:', error.response.status);
        console.log('üìã Headers:', JSON.stringify(error.response.headers, null, 2));
        console.log('üìã Error Data:', JSON.stringify(error.response.data, null, 2));
        
        // –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫
        if (error.response.status === 404) {
          console.log('üí° Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ URL');
        } else if (error.response.status === 400) {
          console.log('üí° –ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞');
        } else if (error.response.status === 401) {
          console.log('üí° –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á');
        } else if (error.response.status === 402) {
          console.log('üí° –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤');
        } else if (error.response.status === 429) {
          console.log('üí° –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤');
        }
      }
      
      const errorResult = {
        name: config.name,
        success: false,
        endpoint: config.endpoint,
        model: config.model,
        error: error.message,
        httpStatus: error.response?.status,
        errorData: error.response?.data
      };
      
      this.results.push(errorResult);
      return errorResult;
    }
  }

  extractVideoUrl(responseData) {
    return responseData.data?.videoUrl || 
           responseData.videoUrl ||
           responseData.data?.url ||
           responseData.url ||
           null;
  }

  extractDuration(responseData) {
    return responseData.data?.duration ||
           responseData.duration ||
           responseData.data?.actualDuration ||
           null;
  }

  extractCost(responseData) {
    return responseData.cost?.usd ||
           responseData.cost ||
           responseData.data?.cost?.usd ||
           responseData.data?.cost ||
           null;
  }

  async runAllTests() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ endpoints...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
    const hasBalance = await this.checkBalance();
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ endpoints
    const testConfigs = [
      {
        name: 'VEO 3 FAST - 2 —Å–µ–∫—É–Ω–¥—ã –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ',
        endpoint: '/veo/generate',
        model: 'veo-3-fast',
        prompt: 'A cat playing with a red ball in a sunny garden',
        duration: 2,
        aspectRatio: '16:9'
      },
      {
        name: 'VEO 3 FAST - 4 —Å–µ–∫—É–Ω–¥—ã –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ',
        endpoint: '/veo/generate',
        model: 'veo-3-fast',
        prompt: 'A dog running through autumn leaves, cinematic',
        duration: 4,
        aspectRatio: '9:16'
      },
      {
        name: 'VEO 3 - –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ',
        endpoint: '/veo/generate',
        model: 'veo-3',
        prompt: 'Birds flying over mountains, peaceful scene',
        duration: 3,
        aspectRatio: '16:9'
      }
    ];
    
    if (!hasBalance) {
      console.log('\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫—Ä–µ–¥–∏—Ç–∞–º–∏!');
      console.log('–¢–µ—Å—Ç—ã –ø–æ–º–æ–≥—É—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–æ—á–Ω—ã–µ –æ—à–∏–±–∫–∏ API.\n');
    }
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
    for (const config of testConfigs) {
      await this.testVideoGeneration(config);
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
      console.log('\n‚è≥ –ü–∞—É–∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã...');
      await new Promise(resolve => setTimeout(resolve, 3000));
    }
  }

  printSummary() {
    console.log('\nüéØ –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢');
    console.log('='.repeat(60));
    
    const successful = this.results.filter(r => r.success);
    const failed = this.results.filter(r => !r.success);
    
    console.log(`üìä –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${this.results.length}`);
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: ${successful.length}`);
    console.log(`‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö: ${failed.length}`);
    
    if (successful.length > 0) {
      console.log('\nüéâ –£–°–ü–ï–®–ù–´–ï –ì–ï–ù–ï–†–ê–¶–ò–ò:');
      successful.forEach((result, index) => {
        console.log(`\n${index + 1}. ${result.name}`);
        console.log(`   üéØ Endpoint: ${result.endpoint}`);
        console.log(`   üîó Video URL: ${result.videoUrl || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
        console.log(`   ‚è±Ô∏è  Duration: ${result.actualDuration || '?'}s`);
        console.log(`   üí∞ Cost: $${result.cost || '?'}`);
        console.log(`   üìä HTTP Status: ${result.httpStatus}`);
      });
    }
    
    if (failed.length > 0) {
      console.log('\n‚ùå –ù–ï–£–î–ê–ß–ù–´–ï –ü–û–ü–´–¢–ö–ò:');
      failed.forEach((result, index) => {
        console.log(`\n${index + 1}. ${result.name}`);
        console.log(`   üéØ Endpoint: ${result.endpoint}`);
        console.log(`   ‚ùå Error: ${result.error}`);
        console.log(`   üìä HTTP Status: ${result.httpStatus || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
      });
    }
    
    console.log('\nüîç –ê–ù–ê–õ–ò–ó:');
    
    // –ê–Ω–∞–ª–∏–∑ endpoints
    const endpointResults = {};
    this.results.forEach(result => {
      if (!endpointResults[result.endpoint]) {
        endpointResults[result.endpoint] = { success: 0, fail: 0 };
      }
      if (result.success) {
        endpointResults[result.endpoint].success++;
      } else {
        endpointResults[result.endpoint].fail++;
      }
    });
    
    console.log('\nüì° –°–¢–ê–¢–ò–°–¢–ò–ö–ê ENDPOINTS:');
    Object.keys(endpointResults).forEach(endpoint => {
      const stats = endpointResults[endpoint];
      const total = stats.success + stats.fail;
      const successRate = ((stats.success / total) * 100).toFixed(1);
      console.log(`   ‚Ä¢ ${endpoint}: ${stats.success}/${total} (${successRate}% —É—Å–ø–µ—Ö)`);
    });
    
    // –ê–Ω–∞–ª–∏–∑ –º–æ–¥–µ–ª–µ–π
    const modelResults = {};
    this.results.forEach(result => {
      if (!modelResults[result.model]) {
        modelResults[result.model] = { success: 0, fail: 0 };
      }
      if (result.success) {
        modelResults[result.model].success++;
      } else {
        modelResults[result.model].fail++;
      }
    });
    
    console.log('\nü§ñ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–û–î–ï–õ–ï–ô:');
    Object.keys(modelResults).forEach(model => {
      const stats = modelResults[model];
      const total = stats.success + stats.fail;
      const successRate = ((stats.success / total) * 100).toFixed(1);
      console.log(`   ‚Ä¢ ${model}: ${stats.success}/${total} (${successRate}% —É—Å–ø–µ—Ö)`);
    });
    
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    if (successful.length > 0) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ä–∞–±–æ—á–∏–µ endpoints - –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ production');
      console.log('‚úÖ Kie.ai –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç video generation');
      if (successful.some(r => r.videoUrl)) {
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞');
      }
    } else {
      console.log('‚ùå –ù–∏ –æ–¥–∏–Ω endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
    }
  }
}

async function main() {
  const tester = new FixedKieApiTester();
  
  try {
    await tester.runAllTests();
    tester.printSummary();
    
  } catch (error) {
    console.error('\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    console.error(error.stack);
  }
}

if (require.main === module) {
  main();
}