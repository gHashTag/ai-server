#!/usr/bin/env node

/**
 * –ü–†–û–í–ï–†–ö–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø KIE.AI API
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Kie.ai –¥–ª—è veo-3-fast
 */

const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, '.env') });

console.log('üîç –ü–†–û–í–ï–†–ö–ê API –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:');
console.log('='.repeat(50));

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('\nüìã ENVIRONMENT VARIABLES:');
console.log('KIE_AI_API_KEY:', process.env.KIE_AI_API_KEY ? '–£–°–¢–ê–ù–û–í–õ–ï–ù ‚úÖ' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù ‚ùå');
console.log('GOOGLE_CLOUD_PROJECT:', process.env.GOOGLE_CLOUD_PROJECT ? '–£–°–¢–ê–ù–û–í–õ–ï–ù ‚úÖ' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù ‚ùå');

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–µ–π
try {
  const { VIDEO_MODELS_CONFIG } = require('./src/config/models.config');
  
  console.log('\nüéØ –ú–û–î–ï–õ–¨ VEO-3-FAST:');
  const veo3Fast = VIDEO_MODELS_CONFIG['veo-3-fast'];
  if (veo3Fast) {
    console.log('- ID:', veo3Fast.id);
    console.log('- Title:', veo3Fast.title);
    console.log('- Provider Type:', veo3Fast.api.input.type);
    console.log('- Price per second:', veo3Fast.pricePerSecond);
    console.log('- Supported durations:', veo3Fast.supportedDurations);
    console.log('- Default duration:', veo3Fast.defaultDuration);
    
    if (veo3Fast.api.input.type === 'kie-ai') {
      console.log('‚úÖ –ù–ê–°–¢–†–û–ï–ù –ù–ê KIE.AI');
    } else {
      console.log('‚ùå –ù–ï –ù–ê–°–¢–†–û–ï–ù –ù–ê KIE.AI');
    }
  } else {
    console.log('‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è veo-3-fast –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }

  console.log('\nüéØ –ú–û–î–ï–õ–¨ VEO-3:');
  const veo3 = VIDEO_MODELS_CONFIG['veo-3'];
  if (veo3) {
    console.log('- Provider Type:', veo3.api.input.type);
    if (veo3.api.input.type === 'kie-ai') {
      console.log('‚úÖ –ù–ê–°–¢–†–û–ï–ù –ù–ê KIE.AI');
    } else {
      console.log('‚ùå –ù–ï –ù–ê–°–¢–†–û–ï–ù –ù–ê KIE.AI');
    }
  }

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
}

// 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
console.log('\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–û–ì–ò–ö–ò:');
console.log('='.repeat(50));

async function testProviderSelection() {
  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    const { processVideoGeneration } = require('./src/services/generateTextToVideo');
    
    console.log('üìû –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–∑–æ–≤–∞ processVideoGeneration –¥–ª—è veo-3-fast...');
    
    // –ù–ï –í–´–ó–´–í–ê–ï–ú –†–ï–ê–õ–¨–ù–û, –∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏–∫—É
    const mockResult = await processVideoGeneration(
      'veo-3-fast', 
      '16:9', 
      'test prompt for provider check',
      undefined,
      2 // 2 —Å–µ–∫—É–Ω–¥—ã
    ).catch(err => {
      console.log('‚ö†Ô∏è –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ (–Ω–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ API –≤—ã–∑–æ–≤–∞):', err.message);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º, –∫–∞–∫–æ–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä –ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
      if (err.message.includes('Kie.ai')) {
        console.log('‚úÖ –õ–û–ì–ò–ö–ê –ò–°–ü–û–õ–¨–ó–£–ï–¢ KIE.AI');
        return 'kie-ai';
      } else if (err.message.includes('Vertex AI')) {
        console.log('‚ùå –õ–û–ì–ò–ö–ê –ò–°–ü–û–õ–¨–ó–£–ï–¢ VERTEX AI');
        return 'vertex-ai';
      } else {
        console.log('‚ùì –ù–ï–ò–ó–í–ï–°–¢–ù–´–ô –ü–†–û–í–ê–ô–î–ï–†');
        return 'unknown';
      }
    });
    
    return mockResult;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º Kie.ai API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
async function checkKieApiHealth() {
  console.log('\nüè• –ü–†–û–í–ï–†–ö–ê KIE.AI API:');
  
  if (!process.env.KIE_AI_API_KEY) {
    console.log('‚ùå API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    return false;
  }
  
  try {
    const { KieAiService } = require('./src/services/kieAiService');
    const kieService = new KieAiService();
    
    console.log('üìû –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Kie.ai API...');
    const isHealthy = await kieService.checkHealth();
    
    if (isHealthy) {
      console.log('‚úÖ KIE.AI API –î–û–°–¢–£–ü–ï–ù');
    } else {
      console.log('‚ùå KIE.AI API –ù–ï–î–û–°–¢–£–ü–ï–ù');
    }
    
    return isHealthy;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Kie.ai:', error.message);
    return false;
  }
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
async function runAllChecks() {
  console.log('üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ü–û–õ–ù–£–Æ –ü–†–û–í–ï–†–ö–£...\n');
  
  await testProviderSelection();
  await checkKieApiHealth();
  
  console.log('\n' + '='.repeat(50));
  console.log('üìù –ò–¢–û–ì–ò:');
  console.log('- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: veo-3-fast –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ kie-ai');
  console.log('- Environment: KIE_AI_API_KEY', process.env.KIE_AI_API_KEY ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  console.log('- –õ–æ–≥–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Kie.ai –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–ª—é—á–∞');
  console.log('='.repeat(50));
}

runAllChecks().catch(console.error);