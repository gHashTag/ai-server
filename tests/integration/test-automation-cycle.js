/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ Instagram –ø–∞—Ä—Å–∏–Ω–≥–∞
 * –ò–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–µ–∞–ª—å–Ω–æ–π –ë–î
 */

console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–ù–û–ì–û –¶–ò–ö–õ–ê –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò');
console.log('='.repeat(50));

// –ò–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
const mockSubscriptions = [
  {
    id: 'test-1',
    user_telegram_id: '144022504',
    competitor_username: 'test_competitor_1',
    max_reels: 10,
    min_views: 1000,
    delivery_format: 'digest'
  },
  {
    id: 'test-2', 
    user_telegram_id: '144022504',
    competitor_username: 'test_competitor_2',
    max_reels: 5,
    min_views: 500,
    delivery_format: 'individual'
  }
];

const mockReels = [
  {
    reel_id: 'reel_1',
    owner_username: 'test_competitor_1',
    views_count: 15000,
    likes_count: 1200,
    caption: '–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∏–ª—Å 1',
    url: 'https://instagram.com/p/test1/'
  },
  {
    reel_id: 'reel_2',
    owner_username: 'test_competitor_1', 
    views_count: 8500,
    likes_count: 650,
    caption: '–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∏–ª—Å 2',
    url: 'https://instagram.com/p/test2/'
  },
  {
    reel_id: 'reel_3',
    owner_username: 'test_competitor_2',
    views_count: 2300,
    likes_count: 180,
    caption: '–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∏–ª—Å –æ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ 2',
    url: 'https://instagram.com/p/test3/'
  }
];

// 1. –≠–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã competitorAutoParser
function simulateAutoParser() {
  console.log('\nüìÖ 1. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ü–ê–†–°–ò–ù–ì (08:00 UTC)');
  console.log('   ‚è∞ Cron –∑–∞–ø—É—â–µ–Ω: competitorAutoParser');
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫
  console.log(`   üìã –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${mockSubscriptions.length}`);
  
  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º
  const competitors = [...new Set(mockSubscriptions.map(s => s.competitor_username))];
  console.log(`   üéØ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${competitors.length}`);
  console.log(`      - ${competitors.join(', ')}`);
  
  // –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞
  competitors.forEach((competitor, index) => {
    console.log(`   üé¨ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –¥–ª—è @${competitor}`);
    console.log(`      ‚Üí –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è: instagram/apify-scrape`);
    console.log(`      ‚Üí requester_telegram_id: 'auto-system'`);
    setTimeout(() => simulateApifyScraper(competitor), (index + 1) * 1000);
  });
}

// 2. –≠–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã instagramApifyScraper 
function simulateApifyScraper(competitor) {
  console.log(`\nü§ñ 2. APIFY –ü–ê–†–°–ò–ù–ì @${competitor}`);
  
  // –ò–º–∏—Ç–∞—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–∏–ª—Å–æ–≤
  const competitorReels = mockReels.filter(r => r.owner_username === competitor);
  console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ —Ä–∏–ª—Å–æ–≤: ${competitorReels.length}`);
  
  if (competitorReels.length > 0) {
    console.log(`   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: ${competitorReels.length} —Ä–∏–ª—Å–æ–≤`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏
    console.log(`   ‚úÖ requester_telegram_id === 'auto-system': true`);
    console.log(`   üì¨ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –¥–æ—Å—Ç–∞–≤–∫—É...`);
    
    setTimeout(() => simulateDelivery(competitor), 500);
  }
}

// 3. –≠–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã competitorDelivery
function simulateDelivery(competitor) {
  console.log(`\nüì¨ 3. –î–û–°–¢–ê–í–ö–ê –†–ò–õ–°–û–í @${competitor}`);
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
  const subscribers = mockSubscriptions.filter(s => s.competitor_username === competitor);
  console.log(`   üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: ${subscribers.length}`);
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–µ–∂–∏—Ö —Ä–∏–ª—Å–æ–≤
  const reels = mockReels.filter(r => r.owner_username === competitor);
  console.log(`   üé¨ –°–≤–µ–∂–∏—Ö —Ä–∏–ª—Å–æ–≤: ${reels.length}`);
  
  // –î–æ—Å—Ç–∞–≤–∫–∞ –∫–∞–∂–¥–æ–º—É –ø–æ–¥–ø–∏—Å—á–∏–∫—É
  subscribers.forEach((subscriber, index) => {
    const userReels = reels.filter(r => r.views_count >= subscriber.min_views)
      .slice(0, subscriber.max_reels);
    
    console.log(`   üì§ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${subscriber.user_telegram_id}:`);
    console.log(`      - –§–æ—Ä–º–∞—Ç: ${subscriber.delivery_format}`);
    console.log(`      - –†–∏–ª—Å–æ–≤: ${userReels.length}`);
    
    if (subscriber.delivery_format === 'digest') {
      console.log(`      - –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–π–¥–∂–µ—Å—Ç —Å —Ç–æ–ø —Ä–∏–ª—Å–æ–º (${userReels[0]?.views_count} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤)`);
    } else if (subscriber.delivery_format === 'individual') {
      console.log(`      - –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ä–∏–ª—Å –æ—Ç–¥–µ–ª—å–Ω–æ`);
    }
    
    // –ó–∞–ø–∏—Å—å –∏—Å—Ç–æ—Ä–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
    console.log(`   ‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ competitor_delivery_history`);
  });
}

// 4. –≠–º—É–ª—è—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
function simulateSystemMonitor() {
  console.log(`\nüìä 4. –°–ò–°–¢–ï–ú–ù–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì (09:00 UTC)`);
  console.log('   ‚è∞ Cron –∑–∞–ø—É—â–µ–Ω: systemMonitor');
  
  const stats = {
    total_subscriptions: mockSubscriptions.length,
    unique_competitors: [...new Set(mockSubscriptions.map(s => s.competitor_username))].length,
    reels_parsed_24h: mockReels.length,
    deliveries_24h: mockSubscriptions.length,
    successful_deliveries: mockSubscriptions.length,
    failed_deliveries: 0
  };
  
  console.log('   üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 24 —á–∞—Å–∞:');
  console.log(`      - –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏: ${stats.total_subscriptions}`);
  console.log(`      - –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${stats.unique_competitors}`);
  console.log(`      - –†–∏–ª—Å–æ–≤ —Å–æ–±—Ä–∞–Ω–æ: ${stats.reels_parsed_24h}`);
  console.log(`      - –î–æ—Å—Ç–∞–≤–æ–∫: ${stats.deliveries_24h} (—É—Å–ø–µ—à–Ω—ã—Ö: ${stats.successful_deliveries})`);
  
  const healthScore = (stats.successful_deliveries / stats.deliveries_24h) * 100;
  console.log(`   üíö –ó–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã: ${healthScore}%`);
  console.log(`   üì§ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω—É (${process.env.ADMIN_CHAT_ID || '144022504'})`);
}

// 5. –≠–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
function simulateHealthCheck() {
  console.log(`\nüíö 5. –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø (–∫–∞–∂–¥—ã–µ 30 –º–∏–Ω)`);
  console.log('   ‚è∞ Cron –∑–∞–ø—É—â–µ–Ω: systemHealthCheck');
  
  const services = [
    { name: 'PostgreSQL Database', status: 'healthy', response_time: 45 },
    { name: 'Apify API', status: 'healthy', response_time: 234 },
    { name: 'Telegram Bot API', status: 'healthy', response_time: 123 },
    { name: 'Inngest', status: 'healthy', response_time: 67 },
    { name: 'Parsing Activity', status: 'healthy', message: '–ü–∞—Ä—Å–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω' }
  ];
  
  console.log('   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:');
  services.forEach(service => {
    const emoji = service.status === 'healthy' ? '‚úÖ' : '‚ùå';
    const time = service.response_time ? ` (${service.response_time}ms)` : '';
    console.log(`      ${emoji} ${service.name}${time}`);
  });
  
  console.log('   üíö –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ');
}

// –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —ç–º—É–ª—è—Ü–∏–∏
async function runFullCycle() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –¶–ò–ö–õ–ê –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò\n');
  
  // 1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥ (08:00 UTC)
  simulateAutoParser();
  
  // 4. –°–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (09:00 UTC) 
  setTimeout(simulateSystemMonitor, 4000);
  
  // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è (–∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç)
  setTimeout(simulateHealthCheck, 5000);
  
  // –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
  setTimeout(() => {
    console.log('\n' + '='.repeat(50));
    console.log('‚úÖ –ü–û–õ–ù–´–ô –¶–ò–ö–õ –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù');
    console.log('\nüìã –†–ï–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´:');
    console.log('1. ‚úÖ competitorAutoParser - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 24—á');
    console.log('2. ‚úÖ instagramApifyScraper - –ø–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ Apify + –∞–≤—Ç–æ—Ç—Ä–∏–≥–≥–µ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏');
    console.log('3. ‚úÖ competitorDelivery - –¥–æ—Å—Ç–∞–≤–∫–∞ —Ä–∏–ª—Å–æ–≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º');
    console.log('4. ‚úÖ systemMonitor - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ—Ç—á–µ—Ç—ã (09:00 UTC)');
    console.log('5. ‚úÖ systemHealthCheck - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω');
    
    console.log('\nüîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –¶–ò–ö–õ:');
    console.log('08:00 UTC ‚Üí –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ ‚Üí –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞');
    console.log('09:00 UTC ‚Üí –°–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ‚Üí –û—Ç—á–µ—Ç –∞–¥–º–∏–Ω—É');
    console.log('–ö–∞–∂–¥—ã–µ 30 –º–∏–Ω ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è ‚Üí –ê–ª–µ—Ä—Ç—ã –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö');
    
    console.log('\nüéØ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!');
  }, 6000);
}

runFullCycle();