const { triggerApifyInstagramScraping } = require('./dist/inngest-functions/instagramApifyScraper')

async function testDirectTrigger() {
  console.log('üî• –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ü—Ä—è–º–æ–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏ (–±–µ–∑ step.run)')
  
  try {
    const parseResult = await triggerApifyInstagramScraping({
      username_or_hashtag: 'theaisurfer',
      project_id: 999,
      source_type: 'competitor',
      max_reels: 1,
      requester_telegram_id: 'auto-system', // –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ü–†–Ø–ú–û–ô —Ç—Ä–∏–≥–≥–µ—Ä
      bot_name: 'neuro_blogger_bot'
    })
    
    console.log('‚úÖ Event ID:', parseResult.eventId)
    console.log('üîç –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä—è–º–æ–π —Ç—Ä–∏–≥–≥–µ—Ä...')
    
    setTimeout(async () => {
      try {
        const fetch = (await import('node-fetch')).default
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ñ—É–Ω–∫—Ü–∏–∏
        const statusResponse = await fetch(`http://localhost:8288/v1/events/${parseResult.eventId}/runs`)
        const statusData = await statusResponse.json()
        
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏:')
        console.log(`‚Ä¢ Status: ${statusData.data[0].status}`)
        console.log(`‚Ä¢ Reels found: ${statusData.data[0].output?.reelsFound || 0}`)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞–≤–∫—É
        const deliveryResponse = await fetch('http://localhost:8288/v1/events?name=competitor%2Fdelivery-reels')
        const deliveryData = await deliveryResponse.json()
        
        console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:')
        console.log(`üì¨ –ù–∞–π–¥–µ–Ω–æ delivery —Å–æ–±—ã—Ç–∏–π: ${deliveryData.data ? deliveryData.data.length : 0}`)
        
        if (deliveryData.data && deliveryData.data.length > 0) {
          console.log('\nüéâüéâüéâ –ü–û–ë–ï–î–ê! –ü–†–Ø–ú–û–ô –¢–†–ò–ì–ì–ï–† –†–ê–ë–û–¢–ê–ï–¢! üéâüéâüéâ')
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π –¥–æ—Å—Ç–∞–≤–∫–∏
          const recentEvents = deliveryData.data.slice(0, 3)
          recentEvents.forEach((event, i) => {
            console.log(`\n${i + 1}. Delivery Event: ${event.id}`)
            console.log(`   ‚Ä¢ Competitor: ${event.data.competitor_username}`)
            console.log(`   ‚Ä¢ Project ID: ${event.data.project_id}`)
            console.log(`   ‚Ä¢ Triggered by: ${event.data.triggered_by}`)
            console.log(`   ‚Ä¢ Created: ${event.created_at}`)
          })
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ delivery —Ñ—É–Ω–∫—Ü–∏–π
          console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ delivery —Ñ—É–Ω–∫—Ü–∏–π...')
          for (const event of recentEvents) {
            try {
              const deliveryRuns = await fetch(`http://localhost:8288/v1/events/${event.id}/runs`)
              const deliveryRunsData = await deliveryRuns.json()
              
              if (deliveryRunsData.data && deliveryRunsData.data.length > 0) {
                const run = deliveryRunsData.data[0]
                console.log(`üì¶ Delivery ${event.id}: ${run.status}`)
                if (run.output && run.output.delivery_summary) {
                  console.log(`   ‚Ä¢ Delivered: ${run.output.delivery_summary.delivered}`)
                  console.log(`   ‚Ä¢ Failed: ${run.output.delivery_summary.failed}`)
                  console.log(`   ‚Ä¢ Skipped: ${run.output.delivery_summary.skipped}`)
                }
              }
            } catch (err) {
              console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ delivery ${event.id}:`, err.message)
            }
          }
          
        } else {
          console.log('\n‚ùå –ü–†–Ø–ú–û–ô –¢–†–ò–ì–ì–ï–† –í–°–ï –ï–©–ï –ù–ï –†–ê–ë–û–¢–ê–ï–¢!')
          console.log('ü§î –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:')
          console.log('   1. inngest.send() –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–Ω–µ step.run')
          console.log('   2. –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–º–ø–æ—Ä—Ç–æ–º inngest –≤ —Ñ—É–Ω–∫—Ü–∏–∏')
          console.log('   3. –£—Å–ª–æ–≤–∏–µ if –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è')
          console.log('   4. –û—à–∏–±–∫–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è')
        }
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message)
      }
    }, 90000) // 1.5 –º–∏–Ω—É—Ç—ã
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message)
  }
}

testDirectTrigger()