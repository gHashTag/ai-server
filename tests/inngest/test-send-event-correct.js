/**
 * –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è –≤ Inngest
 */

const { inngest } = require('../../dist/core/inngest/clients')

async function testSendEvent() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–±—ã—Ç–∏—è –≤ Inngest —Å mock bot...')

  const testEvent = {
    name: 'neuro-image/generation',
    data: {
      prompt: 'Beautiful landscape with mountains',
      num_images: 1,
      model_url: 'test_model',
      telegram_id: 123456789,
      bot_name: 'neuro_blogger_bot',
    },
  }

  try {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ:', testEvent.name)

    const result = await inngest.send(testEvent)

    console.log('‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:', result)

    return result
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è:', error.message)
    console.log('üìã –î–µ—Ç–∞–ª–∏:', error)
    throw error
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSendEvent()
  .then(() => {
    console.log('üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ')
    process.exit(0)
  })
  .catch(error => {
    console.log('üí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π:', error.message)
    process.exit(1)
  })
