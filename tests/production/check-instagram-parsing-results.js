#!/usr/bin/env node

/**
 * üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Instagram –ø–∞—Ä—Å–∏–Ω–≥–∞
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
 */

const { Inngest } = require('inngest')

console.log('üîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í INSTAGRAM –ü–ê–†–°–ò–ù–ì–ê')
console.log('=' * 50)
console.log(`üïí –í—Ä–µ–º—è: ${new Date().toISOString()}`)
console.log('=' * 50)

const inngest = new Inngest({
  id: 'instagram-parsing-test',
  name: 'Instagram Parsing Test Client',
  eventKey: process.env.INNGEST_EVENT_KEY || 'test-key',
})

async function checkInstagramParsing() {
  try {
    console.log(
      '\n1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –º–∞–ª–æ–≥–æ Instagram –∞–∫–∫–∞—É–Ω—Ç–∞...'
    )

    // –¢–µ—Å—Ç —Å –Ω–µ–±–æ–ª—å—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    const testEvent1 = {
      name: 'instagram/apify-scrape',
      data: {
        username_or_hashtag: 'lexfridman',
        project_id: 1001,
        source_type: 'competitor',
        max_reels: 2,
        min_views: 1000,
        max_age_days: 30,
        requester_telegram_id: '144022504',
        bot_name: 'test_parsing_bot',
      },
    }

    const result1 = await inngest.send(testEvent1)
    if (result1 && result1.ids) {
      console.log(`   ‚úÖ –°–æ–±—ã—Ç–∏–µ 1 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${result1.ids[0]}`)
    } else {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è 1')
      return
    }

    console.log('\n2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ö–µ—à—Ç–µ–≥–∞...')

    // –¢–µ—Å—Ç —Å —Ö–µ—à—Ç–µ–≥–æ–º
    const testEvent2 = {
      name: 'instagram/apify-scrape',
      data: {
        username_or_hashtag: '#ai',
        project_id: 1002,
        source_type: 'hashtag',
        max_reels: 2,
        min_views: 5000,
        max_age_days: 7,
        requester_telegram_id: '144022504',
        bot_name: 'test_hashtag_bot',
      },
    }

    const result2 = await inngest.send(testEvent2)
    if (result2 && result2.ids) {
      console.log(`   ‚úÖ –°–æ–±—ã—Ç–∏–µ 2 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${result2.ids[0]}`)
    } else {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è 2')
      return
    }

    console.log('\n3Ô∏è‚É£ –û–∂–∏–¥–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞...')
    console.log('   ‚è±Ô∏è  –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π...')

    // –ñ–¥–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    for (let i = 0; i < 30; i++) {
      process.stdout.write('.')
      await new Promise(resolve => setTimeout(resolve, 1000))
    }
    console.log('')

    console.log('\n4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏—è...')

    // –ü—Ä–æ—Å—Ç–æ–µ hello —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—â–µ–π —Ä–∞–±–æ—Ç—ã Inngest
    const helloEvent = {
      name: 'test/hello',
      data: {
        name: 'Instagram Parser Test',
        timestamp: new Date().toISOString(),
      },
    }

    const helloResult = await inngest.send(helloEvent)
    if (helloResult && helloResult.ids) {
      console.log(`   ‚úÖ Hello —Å–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${helloResult.ids[0]}`)
    } else {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ hello —Å–æ–±—ã—Ç–∏—è')
    }

    console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:')
    console.log('=' * 50)

    if (
      result1 &&
      result1.ids &&
      result2 &&
      result2.ids &&
      helloResult &&
      helloResult.ids
    ) {
      console.log('‚úÖ –í–°–ï –°–û–ë–´–¢–ò–Ø –£–°–ü–ï–®–ù–û –û–¢–ü–†–ê–í–õ–ï–ù–´:')
      console.log(`   ‚Ä¢ Instagram User Event: ${result1.ids[0]}`)
      console.log(`   ‚Ä¢ Instagram Hashtag Event: ${result2.ids[0]}`)
      console.log(`   ‚Ä¢ Hello Test Event: ${helloResult.ids[0]}`)

      console.log('\nüéØ –ß–¢–û –î–û–õ–ñ–ù–û –ü–†–û–ò–ó–û–ô–¢–ò:')
      console.log('   1. Instagram —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∏—Ç —Å–æ–±—ã—Ç–∏—è')
      console.log('   2. Apify SDK –≤—ã–ø–æ–ª–Ω–∏—Ç —Å–∫—Ä–µ–π–ø–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö')
      console.log('   3. –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è –≤ Neon PostgreSQL')
      console.log('   4. –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤ Telegram')

      console.log('\nüîç –ö–ê–ö –ü–†–û–í–ï–†–ò–¢–¨ –†–ï–ó–£–õ–¨–¢–ê–¢:')
      console.log('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
      console.log('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Neon –Ω–∞ –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏')
      console.log('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Inngest Dashboard: http://localhost:8288')
      console.log('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway –Ω–∞ –æ—à–∏–±–∫–∏')

      console.log('\nüöÄ INSTAGRAM –ü–ê–†–°–ò–ù–ì –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù!')
      return true
    } else {
      console.log('‚ùå –ù–ï –í–°–ï –°–û–ë–´–¢–ò–Ø –û–¢–ü–†–ê–í–õ–ï–ù–´')
      console.log('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Inngest')
      return false
    }
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –ü–†–û–í–ï–†–ö–ò –ü–ê–†–°–ò–ù–ì–ê:', error.message)
    console.error('   –°—Ç–µ–∫:', error.stack)
    return false
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkInstagramParsing()
  .then(success => {
    if (success) {
      console.log('\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!')
      process.exit(0)
    } else {
      console.log('\nüí• –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ï –ü–†–û–®–õ–û')
      process.exit(1)
    }
  })
  .catch(error => {
    console.error('\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error)
    process.exit(1)
  })
