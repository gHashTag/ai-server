const axios = require('axios')
const FormData = require('form-data')
const fs = require('fs')

/**
 * üß¨ –¢–ï–°–¢ –ú–û–†–§–ò–ù–ì–ê –° –†–ê–ë–û–ß–ò–ú –ë–û–¢–û–ú
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ–º clip_maker_neuro_bot –≤–º–µ—Å—Ç–æ ai_koshey_bot
 * –ø–æ—Å–∫–æ–ª—å–∫—É –µ–≥–æ —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
 */

async function testMorphingWithWorkingBot() {
  console.log('üß¨ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–†–§–ò–ù–ì–ê –° –†–ê–ë–û–ß–ò–ú –ë–û–¢–û–ú ===\n')

  if (!fs.existsSync('test_real_morphing.zip')) {
    console.error('‚ùå –§–∞–π–ª test_real_morphing.zip –Ω–µ –Ω–∞–π–¥–µ–Ω!')
    return
  }

  const formData = new FormData()
  formData.append('type', 'morphing')
  formData.append('telegram_id', '144022504')
  formData.append('username', 'test_working_bot')
  formData.append('image_count', '3')
  formData.append('morphing_type', 'seamless')
  formData.append('model', 'kling-v1.6-pro')
  formData.append('is_ru', 'true')
  formData.append('bot_name', 'clip_maker_neuro_bot') // –ò—Å–ø–æ–ª—å–∑—É–µ–º –†–ê–ë–û–ß–ò–ô –±–æ—Ç!
  formData.append('images_zip', fs.createReadStream('test_real_morphing.zip'))

  try {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å —Ä–∞–±–æ—á–∏–º –±–æ—Ç–æ–º...')

    const response = await axios.post(
      'https://d8dc81a4a0aa.ngrok.app/generate/morph-images',
      formData,
      {
        headers: {
          'x-secret-key': 'test-secret-key',
          ...formData.getHeaders(),
        },
        timeout: 30000,
      }
    )

    console.log('‚úÖ –£–°–ü–ï–•! API Response:', response.data)
    console.log('üéØ Job ID:', response.data.job_id)

    console.log('\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ (30 —Å–µ–∫—É–Ω–¥) –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Inngest...')
    await new Promise(resolve => setTimeout(resolve, 30000))

    console.log('üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Inngest –¥–∞—à–±–æ—Ä–¥ - —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å!')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message)
  }
}

if (require.main === module) {
  testMorphingWithWorkingBot().catch(console.error)
}

module.exports = { testMorphingWithWorkingBot }
