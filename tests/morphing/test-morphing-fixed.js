/**
 * üß¨ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ morphImages
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –ø–∞—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */

const FormData = require('form-data')
const fs = require('fs')
const axios = require('axios')
const path = require('path')

const API_BASE_URL =
  process.env.NODE_ENV === 'production'
    ? 'https://ai-server-production-production-8e2d.up.railway.app'
    : 'http://localhost:4000'

async function testMorphingFixed() {
  console.log('üß¨ === –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –§–£–ù–ö–¶–ò–ò MORPHING ===')

  try {
    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ZIP —Å 3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    console.log('üì¶ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ZIP –∞—Ä—Ö–∏–≤...')
    const testZipPath = './test-morphing-3-images.zip'

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º AdmZip –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è ZIP
    const AdmZip = require('adm-zip')
    const zip = new AdmZip()

    // –î–æ–±–∞–≤–ª—è–µ–º 3 —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ JPG)
    // –î–ª—è —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–¥–∏–º –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∫–∞–∫ –∑–∞–≥–ª—É—à–∫–∏
    zip.addFile('morphing_image_1.jpg', Buffer.from('Test image 1 content'))
    zip.addFile('morphing_image_2.jpg', Buffer.from('Test image 2 content'))
    zip.addFile('morphing_image_3.jpg', Buffer.from('Test image 3 content'))

    zip.writeZip(testZipPath)
    console.log('‚úÖ ZIP –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω:', testZipPath)

    // 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ morphing API
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ morphing API...')

    const form = new FormData()
    form.append('type', 'morphing')
    form.append('telegram_id', '144022504')
    form.append('image_count', '3')
    form.append('morphing_type', 'seamless')
    form.append('model', 'kling-v1.6-pro')
    form.append('is_ru', 'true')
    form.append('bot_name', 'neuro_blogger_bot')
    form.append('username', 'telegram_bot')
    form.append('images_zip', fs.createReadStream(testZipPath))

    const response = await axios.post(
      `${API_BASE_URL}/generate/morph-images`,
      form,
      {
        headers: {
          ...form.getHeaders(),
          'User-Agent': 'morphing-test/1.0',
        },
        timeout: 30000, // 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
      }
    )

    console.log('‚úÖ API Response:', response.status, response.statusText)
    console.log('üìã Response Data:', JSON.stringify(response.data, null, 2))

    // 3. –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —á–µ—Ä–µ–∑ –ª–æ–≥–∏
    console.log('\nüîç === –û–ñ–ò–î–ê–ï–ú–û–ï –ü–û–í–ï–î–ï–ù–ò–ï (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è) ===')
    console.log('1. ‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä: ZIP —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω')
    console.log('2. ‚úÖ Inngest: check-user-exists –ø—Ä–æ–π–¥–µ–Ω')
    console.log('3. ‚úÖ Inngest: check-balance –ø—Ä–æ–π–¥–µ–Ω')
    console.log('4. ‚úÖ Inngest: notify-start –ø—Ä–æ–π–¥–µ–Ω')
    console.log('5. ‚úÖ Inngest: process-pair-1 –Ω–∞—á–∞—Ç (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 1 ‚Üí 2)')
    console.log('6. ‚úÖ Inngest: process-pair-1 –∑–∞–≤–µ—Ä—à–µ–Ω —á–µ—Ä–µ–∑ ~3-6 –º–∏–Ω—É—Ç')
    console.log(
      '7. üÜï Inngest: process-pair-2 –ù–ê–ß–ê–¢ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 2 ‚Üí 3) <- –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï!'
    )
    console.log('8. ‚úÖ Inngest: process-pair-2 –∑–∞–≤–µ—Ä—à–µ–Ω —á–µ—Ä–µ–∑ ~3-6 –º–∏–Ω—É—Ç')
    console.log('9. ‚úÖ Inngest: concatenate-all-videos –Ω–∞—á–∞—Ç')
    console.log('10. ‚úÖ Inngest: deliver-result - —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞')
    console.log('11. ‚úÖ –ü–û–õ–ù–´–ô –£–°–ü–ï–• –±–µ–∑ 504 Gateway Timeout!')

    console.log('\nüìä –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞—Ö–æ–¥–∏ –≤ Inngest Dashboard:')
    console.log('üîó Inngest Functions: http://localhost:8288/functions')
    console.log('‚ö° Inngest Events: http://localhost:8288/events')

    // –û—á–∏—Å—Ç–∫–∞
    if (fs.existsSync(testZipPath)) {
      fs.unlinkSync(testZipPath)
      console.log('üßπ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω')
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', {
      message: error.message,
      status: error.response?.status,
      statusText: error.response?.statusText,
      data: error.response?.data,
    })

    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∏–ø–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω')
      console.log('–ó–∞–ø—É—Å—Ç–∏: bun run dev')
    } else if (error.response?.status === 404) {
      console.log('\nüîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
      console.log('–ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—Ç—É')
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testMorphingFixed()
}
