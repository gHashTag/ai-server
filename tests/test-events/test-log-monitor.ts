#!/usr/bin/env ts-node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤
 * –ó–∞–ø—É—Å–∫: npx ts-node test-events/test-log-monitor.ts
 */

import { inngest } from '../src/core/inngest/clients'
import dotenv from 'dotenv'

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config()

async function testLogMonitor() {
  console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤...')
  
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    const result = await inngest.send({
      name: 'logs/monitor.trigger',
      data: {
        userId: 'admin',
        reason: 'manual_test',
        timestamp: new Date().toISOString()
      }
    })
    
    console.log('‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')
    console.log('üìã ID —Å–æ–±—ã—Ç–∏—è:', result.ids?.[0] || result)
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Inngest Dashboard: http://localhost:8288')
    console.log('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –≥—Ä—É–ø–ø—É: https://t.me/c/2250147975/1')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testLogMonitor()
  .then(() => {
    console.log('\n‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
    process.exit(0)
  })
  .catch(error => {
    console.error('\n‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  })
