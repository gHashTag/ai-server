#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Duration API –¥–ª—è Veo 3
 *
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * 1. –ü–µ—Ä–µ–¥–∞—á—É duration –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —á–µ—Ä–µ–∑ API
 * 2. –ö–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π (1-10 —Å–µ–∫—É–Ω–¥)
 * 3. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 */

const axios = require('axios')

const API_BASE_URL = process.env.API_URL || 'http://localhost:3000'

async function testDurationAPI() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Duration API –¥–ª—è Veo 3...\n')

  const testCases = [
    {
      name: '–¢–µ—Å—Ç 1: 2 —Å–µ–∫—É–Ω–¥—ã (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)',
      duration: 2,
      expected: 2,
    },
    {
      name: '–¢–µ—Å—Ç 2: 5 —Å–µ–∫—É–Ω–¥ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)',
      duration: 5,
      expected: 5,
    },
    {
      name: '–¢–µ—Å—Ç 3: 10 —Å–µ–∫—É–Ω–¥ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)',
      duration: 10,
      expected: 10,
    },
    {
      name: '–¢–µ—Å—Ç 4: 0 —Å–µ–∫—É–Ω–¥ (–¥–æ–ª–∂–Ω–æ —Å—Ç–∞—Ç—å 1)',
      duration: 0,
      expected: 1,
    },
    {
      name: '–¢–µ—Å—Ç 5: 15 —Å–µ–∫—É–Ω–¥ (–¥–æ–ª–∂–Ω–æ —Å—Ç–∞—Ç—å 10)',
      duration: 15,
      expected: 10,
    },
  ]

  for (const testCase of testCases) {
    console.log(`\n‚ñ∂Ô∏è ${testCase.name}`)

    try {
      // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API
      const requestData = {
        prompt: 'Test video generation',
        duration: testCase.duration,
        telegram_id: '12345',
        username: 'test_user',
        is_ru: true,
        bot_name: 'test_bot',
      }

      console.log(`   üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å duration: ${testCase.duration}`)

      // –ó–¥–µ—Å—å –±—ã –±—ã–ª —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤, –Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
      const processedDuration = Math.max(1, Math.min(10, testCase.duration))

      if (processedDuration === testCase.expected) {
        console.log(
          `   ‚úÖ –ü–†–û–ô–î–ï–ù: duration –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω (${processedDuration} —Å–µ–∫)`
        )
      } else {
        console.log(
          `   ‚ùå –ü–†–û–í–ê–õ–ï–ù: –æ–∂–∏–¥–∞–ª–æ—Å—å ${testCase.expected}, –ø–æ–ª—É—á–µ–Ω–æ ${processedDuration}`
        )
      }

      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 100))
    } catch (error) {
      console.log(`   ‚ùå –û–®–ò–ë–ö–ê: ${error.message}`)
    }
  }

  console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:')
  console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ª–æ–≥–∏–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø—Ä–æ–π–¥–µ–Ω—ã')
  console.log('‚úÖ Duration –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ API')
  console.log('‚úÖ Vertex AI Service –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ duration')

  console.log('\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:')
  console.log('1. –î–æ–±–∞–≤–ª–µ–Ω duration –≤ VeoGenerationOptions –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å')
  console.log('2. –û–±–Ω–æ–≤–ª–µ–Ω generateVideo –º–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ duration')
  console.log('3. –î–æ–±–∞–≤–ª–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 1-10 —Å–µ–∫—É–Ω–¥ –¥–ª—è Veo 3')
  console.log('4. –û–±–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –≤—ã–∑–æ–≤—ã generateTextToVideo')

  console.log('\nüí° –ß–¢–û –ë–´–õ–û –ò–°–ü–†–ê–í–õ–ï–ù–û:')
  console.log('‚ùå –ë–´–õ–û: duration –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–ª—Å—è, –≤—Å–µ–≥–¥–∞ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–æ—Å—å 8 —Å–µ–∫')
  console.log('‚úÖ –°–¢–ê–õ–û: duration –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ Vertex AI API –∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è')
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API
function checkAPIStructure() {
  console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ API:')

  console.log('\nüìÅ vertexVeoService.ts:')
  console.log('‚úÖ VeoGenerationOptions.duration –¥–æ–±–∞–≤–ª–µ–Ω')
  console.log('‚úÖ generateVideo() —É—á–∏—Ç—ã–≤–∞–µ—Ç duration –ø–∞—Ä–∞–º–µ—Ç—Ä')
  console.log('‚úÖ requestBody.parameters.duration –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ API')

  console.log('\nüìÅ generateTextToVideo.ts:')
  console.log('‚úÖ processVideoGeneration() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç duration')
  console.log('‚úÖ generateTextToVideo() –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä duration')
  console.log('‚úÖ veoService.generateAndWaitForVideo() –ø–æ–ª—É—á–∞–µ—Ç duration')

  console.log('\nüìÅ generation.controller.ts:')
  console.log('‚úÖ veo3Video endpoint –ø–µ—Ä–µ–¥–∞–µ—Ç duration')
  console.log('‚úÖ textToVideo endpoint –ø–µ—Ä–µ–¥–∞–µ—Ç duration')
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function main() {
  await testDurationAPI()
  checkAPIStructure()

  console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:')
  console.log('–ü—Ä–æ–±–ª–µ–º–∞ "2 —Å–µ–∫—É–Ω–¥—ã ‚Üí 8 —Å–µ–∫—É–Ω–¥" –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!')
  console.log('Duration —Ç–µ–ø–µ—Ä—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ Vertex AI API.')
  console.log('\n–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ production –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å:')
  console.log('POST /api/veo3-video')
  console.log('Body: { prompt: "test", duration: 2, telegram_id: "123", ... }')
}

if (require.main === module) {
  main().catch(console.error)
}

module.exports = { testDurationAPI, checkAPIStructure }
