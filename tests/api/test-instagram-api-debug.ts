/**
 * üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê INSTAGRAM API
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
 */

import axios from 'axios'

async function debugInstagramAPI() {
  console.log('üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê INSTAGRAM API ===\n')

  const apiKey =
    process.env.RAPIDAPI_INSTAGRAM_KEY ||
    'da6f54ca68mshc06984da37c569bp1743f1jsne4c79beeb969'
  const host =
    process.env.RAPIDAPI_INSTAGRAM_HOST ||
    'real-time-instagram-scraper-api1.p.rapidapi.com'
  const baseUrl = 'https://real-time-instagram-scraper-api1.p.rapidapi.com'

  console.log('üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:')
  console.log(
    `   üîë API Key: ${apiKey.substring(0, 10)}...${apiKey.substring(
      apiKey.length - 10
    )}`
  )
  console.log(`   üåê Host: ${host}`)
  console.log(`   üì° Base URL: ${baseUrl}`)

  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∏–º –±–∞–∑–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
  console.log('\nüéØ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...')
  try {
    const healthResponse = await axios.get(`${baseUrl}/`, {
      headers: {
        'x-rapidapi-key': apiKey,
        'x-rapidapi-host': host,
      },
      timeout: 10000,
    })
    console.log('‚úÖ –ë–∞–∑–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:', healthResponse.status)
  } catch (error: any) {
    console.log(
      '‚ö†Ô∏è –ë–∞–∑–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:',
      error.response?.status || error.message
    )
  }

  // –¢–µ—Å—Ç 2: –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  console.log('\nüë§ –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...')
  try {
    const userResponse = await axios.get(`${baseUrl}/v1/user_info`, {
      params: {
        username_or_id: 'instagram', // –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Instagram
      },
      headers: {
        'x-rapidapi-key': apiKey,
        'x-rapidapi-host': host,
        'Content-Type': 'application/json',
      },
      timeout: 15000,
    })
    console.log('‚úÖ User info API —Ä–∞–±–æ—Ç–∞–µ—Ç:', userResponse.status)
    console.log(
      'üìä –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:',
      JSON.stringify(userResponse.data, null, 2).substring(0, 500) + '...'
    )
  } catch (error: any) {
    console.log(
      '‚ùå User info API error:',
      error.response?.status,
      error.response?.data || error.message
    )

    if (error.response?.status === 403) {
      console.log('üîí 403 Forbidden - –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:')
      console.log('   1. –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á')
      console.log('   2. API –∫–ª—é—á –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è —ç—Ç–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞')
      console.log('   3. –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤')
      console.log('   4. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö–æ—Å—Ç')
    }
  }

  // –¢–µ—Å—Ç 3: –ü–æ–ø—Ä–æ–±—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
  console.log('\nüìã –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...')
  const endpoints = [
    '/v1/user_info',
    '/v1/user_reels',
    '/v1/similar_users_v2',
    '/v1/user_posts',
  ]

  for (const endpoint of endpoints) {
    try {
      console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º ${endpoint}...`)
      const response = await axios.get(`${baseUrl}${endpoint}`, {
        params: {
          username_or_id: 'instagram',
          count: 1,
        },
        headers: {
          'x-rapidapi-key': apiKey,
          'x-rapidapi-host': host,
          'Content-Type': 'application/json',
        },
        timeout: 10000,
      })
      console.log(`‚úÖ ${endpoint}: –¥–æ—Å—Ç—É–ø–µ–Ω (${response.status})`)
    } catch (error: any) {
      const status = error.response?.status
      const message = error.response?.data?.message || error.message
      console.log(`‚ùå ${endpoint}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (${status}) - ${message}`)
    }
  }

  // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∏–º headers –æ—Ç–≤–µ—Ç–∞
  console.log('\nüìä –¢–µ—Å—Ç 4: –ê–Ω–∞–ª–∏–∑ Rate Limits...')
  try {
    const response = await axios.get(`${baseUrl}/v1/user_info`, {
      params: {
        username_or_id: 'instagram',
      },
      headers: {
        'x-rapidapi-key': apiKey,
        'x-rapidapi-host': host,
      },
      timeout: 10000,
    })

    console.log('üîç Rate Limit Headers:')
    console.log(
      `   x-ratelimit-limit: ${
        response.headers['x-ratelimit-limit'] || '–Ω–µ —É–∫–∞–∑–∞–Ω'
      }`
    )
    console.log(
      `   x-ratelimit-remaining: ${
        response.headers['x-ratelimit-remaining'] || '–Ω–µ —É–∫–∞–∑–∞–Ω'
      }`
    )
    console.log(
      `   x-ratelimit-reset: ${
        response.headers['x-ratelimit-reset'] || '–Ω–µ —É–∫–∞–∑–∞–Ω'
      }`
    )
  } catch (error: any) {
    console.log(
      '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å rate limit info:',
      error.response?.status
    )
  }

  // –¢–µ—Å—Ç 5: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
  console.log('\nüß™ –¢–µ—Å—Ç 5: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã...')
  const testAccounts = ['instagram', 'cristiano', 'arianagrande', 'therock']

  for (const account of testAccounts) {
    try {
      console.log(`\nüë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç: ${account}`)
      const response = await axios.get(`${baseUrl}/v1/user_reels`, {
        params: {
          username_or_id: account,
          count: 3,
        },
        headers: {
          'x-rapidapi-key': apiKey,
          'x-rapidapi-host': host,
        },
        timeout: 15000,
      })

      console.log(`‚úÖ ${account}: —É—Å–ø–µ—Ö (${response.status})`)
      if (response.data?.data?.items) {
        console.log(`   üìπ –ù–∞–π–¥–µ–Ω–æ —Ä–∏–ª–∑: ${response.data.data.items.length}`)
      }

      // –í—ã—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
      console.log('\nüéâ –ù–∞–π–¥–µ–Ω —Ä–∞–±–æ—á–∏–π API —ç–Ω–¥–ø–æ–∏–Ω—Ç!')
      break
    } catch (error: any) {
      console.log(
        `‚ùå ${account}: –æ—à–∏–±–∫–∞ (${error.response?.status}) - ${
          error.response?.data?.message || error.message
        }`
      )
    }

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 1000))
  }

  console.log('\nüìã === –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï ===')
  console.log('–ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç 403 –æ—à–∏–±–∫—É:')
  console.log('1. üîÑ –ü—Ä–æ–≤–µ—Ä—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞ –Ω–∞ RapidAPI')
  console.log('2. üí≥ –£–±–µ–¥–∏—Å—å —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞')
  console.log('3. üìä –ü—Ä–æ–≤–µ—Ä—å –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤')
  console.log('4. üåê –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π —Ö–æ—Å—Ç –∏–ª–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç')
  console.log('')
  console.log('–ï—Å–ª–∏ –µ—Å—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã - API —Ä–∞–±–æ—Ç–∞–µ—Ç!')
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
process.env.RAPIDAPI_INSTAGRAM_KEY =
  'da6f54ca68mshc06984da37c569bp1743f1jsne4c79beeb969'
process.env.RAPIDAPI_INSTAGRAM_HOST =
  'real-time-instagram-scraper-api1.p.rapidapi.com'

debugInstagramAPI()
  .then(() => {
    console.log('\nüèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
    process.exit(0)
  })
  .catch(error => {
    console.error('\nüí• –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω–∞:', error.message)
    process.exit(1)
  })
