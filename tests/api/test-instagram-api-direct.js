#!/usr/bin/env node

/**
 * üîó –ü–†–Ø–ú–û–ô –¢–ï–°–¢ Instagram API
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ Inngest
 */

require('dotenv').config({ path: '.env' })
const axios = require('axios')

async function testInstagramAPIDirect() {
  console.log('üîó –ü–†–Ø–ú–û–ô –¢–ï–°–¢ INSTAGRAM API')
  console.log('============================')
  console.log('')

  const apiKey = process.env.RAPIDAPI_INSTAGRAM_KEY
  const host = 'real-time-instagram-scraper-api1.p.rapidapi.com'
  const baseUrl = 'https://real-time-instagram-scraper-api1.p.rapidapi.com'

  console.log(
    `üîë API Key: ${apiKey ? apiKey.substring(0, 10) + '...' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù'}`
  )
  console.log(`üè† Host: ${host}`)
  console.log(`üåê Base URL: ${baseUrl}`)
  console.log('')

  try {
    console.log('üì° –ó–∞–ø—Ä–æ—Å –∫ Instagram API –¥–ª—è @cristiano...')

    const response = await axios.get(`${baseUrl}/v1/similar_users_v2`, {
      params: {
        username_or_id: 'cristiano',
        count: 3,
      },
      headers: {
        'x-rapidapi-key': apiKey,
        'x-rapidapi-host': host,
        'Content-Type': 'application/json',
      },
      timeout: 30000,
    })

    console.log('‚úÖ API –£–°–ü–ï–®–ù–û –û–¢–í–ï–¢–ò–õ!')
    console.log(`üìä Status: ${response.status}`)
    console.log(`üìã Response data type: ${typeof response.data}`)

    if (response.data && response.data.data && response.data.data.users) {
      console.log(
        `üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${response.data.data.users.length}`
      )
      console.log('')
      console.log('üìã –ü–µ—Ä–≤—ã–µ 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
      response.data.data.users.slice(0, 3).forEach((user, i) => {
        console.log(
          `   ${i + 1}. @${user.username} (${user.full_name || '–ë–µ–∑ –∏–º–µ–Ω–∏'})`
        )
      })
    } else {
      console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:')
      console.log(JSON.stringify(response.data, null, 2))
    }

    console.log('')
    console.log('üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: Instagram API –†–ê–ë–û–¢–ê–ï–¢!')
    console.log('   ‚Ä¢ –ï—Å–ª–∏ Instagram API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ—Ç')
    console.log('   ‚Ä¢ –ó–Ω–∞—á–∏—Ç –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ Instagram —Ñ—É–Ω–∫—Ü–∏–∏')
    console.log('   ‚Ä¢ –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é')
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê INSTAGRAM API!')
    console.error(`–¢–∏–ø –æ—à–∏–±–∫–∏: ${error.code || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`)
    console.error(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`)

    if (error.response) {
      console.error(`HTTP Status: ${error.response.status}`)
      console.error(`Response: ${JSON.stringify(error.response.data, null, 2)}`)
    }

    console.log('')
    console.log('üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: Instagram API –ù–ï –†–ê–ë–û–¢–ê–ï–¢!')
    console.log('   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞ –≤ API –∫–ª—é—á–µ –∏–ª–∏ rate limiting')
    console.log('   ‚Ä¢ Instagram —Ñ—É–Ω–∫—Ü–∏—è –ø–∞–¥–∞–µ—Ç –Ω–∞ API –∑–∞–ø—Ä–æ—Å–µ')
  }
}

testInstagramAPIDirect()
