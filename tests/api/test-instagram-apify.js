/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Instagram Apify Scraper —Ñ—É–Ω–∫—Ü–∏–∏
 */

const { inngest } = require('./dist/core/inngest/clients')

async function testInstagramApifyScraper() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Instagram Apify Scraper...')

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏...')

    const {
      instagramApifyScraper,
    } = require('./dist/inngest-functions/instagramApifyScraper')

    if (instagramApifyScraper) {
      console.log('‚úÖ Instagram Apify Scraper —Ñ—É–Ω–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞')
      console.log(`   ‚Ä¢ ID: ${instagramApifyScraper.id}`)
      console.log(`   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: ${instagramApifyScraper.name}`)
    } else {
      throw new Error('–§—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —ç–∫—Å–ø–æ—Ä—Ç–∞—Ö')
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...')

    const envVars = {
      APIFY_TOKEN: process.env.APIFY_TOKEN ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
      NEON_DATABASE_URL: process.env.NEON_DATABASE_URL
        ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
    }

    console.log('   –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:')
    Object.entries(envVars).forEach(([key, status]) => {
      console.log(`      ‚Ä¢ ${key}: ${status}`)
    })

    if (!process.env.APIFY_TOKEN) {
      console.log(
        '\n‚ö†Ô∏è  APIFY_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ'
      )
    }

    if (!process.env.NEON_DATABASE_URL) {
      console.log(
        '\n‚ö†Ô∏è  NEON_DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Å–º–æ–∂–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ'
      )
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (–±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Apify –∑–∞–ø—Ä–æ—Å–∞)
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')

    const testCases = [
      {
        name: '–í–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        data: {
          username_or_hashtag: 'yacheslav_nekludov',
          project_id: 1,
          source_type: 'competitor',
          max_reels: 15,
          min_views: 500,
          max_age_days: 14,
        },
        shouldPass: true,
      },
      {
        name: '–í–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ö–µ—à—Ç–µ–≥–∞',
        data: {
          username_or_hashtag: '#marketing',
          project_id: 1,
          source_type: 'hashtag',
          max_reels: 20,
        },
        shouldPass: true,
      },
      {
        name: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç username',
        data: {
          project_id: 1,
          source_type: 'competitor',
        },
        shouldPass: false,
      },
      {
        name: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π source_type',
        data: {
          username_or_hashtag: 'test',
          project_id: 1,
          source_type: 'invalid_type',
        },
        shouldPass: false,
      },
    ]

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º zod –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ö–µ–º—ã
    const { z } = require('zod')
    const ApifyScraperEventSchema = z.object({
      username_or_hashtag: z.string().min(1),
      project_id: z.number().positive(),
      source_type: z.enum(['competitor', 'hashtag']),
      max_reels: z.number().min(1).max(500).default(50),
      min_views: z.number().min(0).optional(),
      max_age_days: z.number().min(1).max(365).optional(),
      requester_telegram_id: z.string().optional(),
      bot_name: z.string().optional(),
    })

    testCases.forEach(testCase => {
      try {
        const result = ApifyScraperEventSchema.safeParse(testCase.data)

        if (testCase.shouldPass && result.success) {
          console.log(`   ‚úÖ ${testCase.name} - PASSED`)
        } else if (!testCase.shouldPass && !result.success) {
          console.log(`   ‚úÖ ${testCase.name} - FAILED AS EXPECTED`)
        } else {
          console.log(`   ‚ùå ${testCase.name} - UNEXPECTED RESULT`)
          console.log(
            `      –û—à–∏–±–∫–∏: ${
              result.success ? '–ù–µ—Ç –æ—à–∏–±–æ–∫' : result.error.message
            }`
          )
        }
      } catch (error) {
        console.log(`   ‚ùå ${testCase.name} - ERROR: ${error.message}`)
      }
    })

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å URL)
    if (process.env.NEON_DATABASE_URL) {
      console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')

      try {
        const { Pool } = require('pg')
        const dbPool = new Pool({
          connectionString: process.env.NEON_DATABASE_URL,
          ssl: { rejectUnauthorized: false },
        })

        const client = await dbPool.connect()

        try {
          // –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
          const result = await client.query('SELECT NOW()')
          console.log('   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ')
          console.log(`      –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞ –ë–î: ${result.rows[0].now}`)
        } finally {
          client.release()
          await dbPool.end()
        }
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: ${error.message}`)
      }
    } else {
      console.log('\n4Ô∏è‚É£ –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ë–î - NEON_DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ Apify –∫–ª–∏–µ–Ω—Ç–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω)
    if (process.env.APIFY_TOKEN) {
      console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Apify –∫–ª–∏–µ–Ω—Ç–∞...')

      try {
        const { ApifyClient } = require('apify-client')
        const client = new ApifyClient({
          token: process.env.APIFY_TOKEN,
        })

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∫–∞–∫ —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        const user = await client.user().get()
        console.log('   ‚úÖ Apify –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ')
        console.log(
          `      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.username || user.email || 'Unknown'}`
        )
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ Apify –∫–ª–∏–µ–Ω—Ç–∞: ${error.message}`)
        console.log('      –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å APIFY_TOKEN')
      }
    } else {
      console.log('\n5Ô∏è‚É£ –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ Apify - APIFY_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }

    // –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('\nüìã –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:')
    console.log('=' * 50)

    const issues = []

    if (!process.env.APIFY_TOKEN) {
      issues.push('üîë –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç APIFY_TOKEN')
    }

    if (!process.env.NEON_DATABASE_URL) {
      issues.push('üóÑÔ∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç NEON_DATABASE_URL')
    }

    if (issues.length === 0) {
      console.log('‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!')
      console.log('   Instagram Apify Scraper –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ')
      console.log('\nüöÄ –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:')
      console.log('   node start-competitor-analysis.js')
    } else {
      console.log('‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:')
      issues.forEach(issue => console.log(`   ‚Ä¢ ${issue}`))
      console.log('\nüîß –ò–°–ü–†–ê–í–¨–¢–ï –ü–†–û–ë–õ–ï–ú–´ –ü–ï–†–ï–î –î–ï–ü–õ–û–ï–ú!')
    }

    console.log('\nüìñ –°–ü–†–ê–í–ö–ê –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:')
    console.log('   ‚Ä¢ –°–æ–±—ã—Ç–∏–µ: instagram/apify-scrape')
    console.log('   ‚Ä¢ –§—É–Ω–∫—Ü–∏—è: instagramApifyScraper')
    console.log('   ‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ 2 –∑–∞–¥–∞—á –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ')
    console.log('   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ —Ö–µ—à—Ç–µ–≥–∏')
  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error.message)
    console.error('   –°—Ç–µ–∫:', error.stack)
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testInstagramApifyScraper()
