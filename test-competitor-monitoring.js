/**
 * –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∏–ª–∑–∞
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const https = require('https')
const fetch = require('node-fetch') // –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω

async function testCompetitorMonitoring() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...')
  
  try {
    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testData = {
      username: 'natgeo', // National Geographic - –º–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∏–ª–∑–æ–≤
      user_telegram_id: '144022504', // –¢–µ—Å—Ç–æ–≤—ã–π telegram ID
      user_chat_id: '144022504',
      bot_name: 'neuro_blogger_bot',
      max_reels: 5, // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å 5 —Ä–∏–ª–∑–æ–≤ –≤ –ë–î
      min_views: 1000,
      max_age_days: 14,
      delivery_format: 'digest',
      project_id: 999
    }
    
    console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', testData)
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ API
    const response = await fetch('http://localhost:3000/api/competitor-monitoring', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testData)
    })
    
    const result = await response.json()
    
    if (result.success) {
      console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
      console.log('üîó Event ID:', result.event_id)
      console.log('üìä –û–∂–∏–¥–∞–µ—Ç—Å—è —Ä–∏–ª–∑–æ–≤:', result.expected_reels)
      console.log('‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-2 –º–∏–Ω—É—Ç—ã)...')
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞:', result.error)
      return
    }
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log(`
üìä –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
1. ‚úÖ –°–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ @${testData.username}
2. üé¨ –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Ä–∏–ª–∑–æ–≤ —á–µ—Ä–µ–∑ Apify
3. üíæ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è ${testData.max_reels} —Ä–∏–ª–∑–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
4. üì± –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 1 –ª—É—á—à–∏–π —Ä–∏–ª–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
5. üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:
- –õ–æ–≥–∏ Inngest –≤ –¥–∞—à–±–æ—Ä–¥–µ
- Telegram –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–µ–π –ø–æ–¥–ø–∏—Å–∫–∏

üí° –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ —Ä–∏–ª–∑—ã –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
- –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–æ—Å—Ç–∞–≤–æ–∫
`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è:', error)
    console.error('–î–µ—Ç–∞–ª–∏:', error.message)
  }
}

// –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ API
async function testGetCompetitorStatus() {
  console.log('\nüîç –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ API...')
  
  try {
    const response = await fetch('http://localhost:3000/api/competitor-monitoring/status/natgeo?user_telegram_id=144022504&bot_name=neuro_blogger_bot')
    const result = await response.json()
    
    if (result.success && result.monitoring) {
      console.log(`üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:`)
      console.log(`   ‚úÖ –ê–∫—Ç–∏–≤–Ω–∞: ${result.subscription.is_active}`)
      console.log(`   üéØ –ú–∞–∫—Å —Ä–∏–ª–∑–æ–≤: ${result.subscription.max_reels}`)
      console.log(`   üëÅ –ú–∏–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${result.subscription.min_views}`)
      console.log(`   üì¶ –†–∏–ª–∑–æ–≤ –≤ –ë–î: ${result.reels_in_database}`)
      console.log(`   üìÖ –°–æ–∑–¥–∞–Ω–∞: ${result.subscription.created_at}`)
      
      if (result.latest_reels && result.latest_reels.length > 0) {
        console.log('\nüé¨ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∏–ª–∑—ã:')
        result.latest_reels.forEach((reel, index) => {
          console.log(`${index + 1}. üëÅ ${reel.views_count?.toLocaleString()} | ‚ù§Ô∏è ${reel.likes_count?.toLocaleString()}`)
          console.log(`   üîó ${reel.url}`)
        })
      }
    } else {
      console.log('üì≠ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞')
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–æ–∫
async function checkSubscriptionStatus() {
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–æ–∫...')
  
  try {
    const { createClient } = require('@supabase/supabase-js')
    
    const supabase = createClient(
      process.env.SUPABASE_URL,
      process.env.SUPABASE_SERVICE_ROLE_KEY
    )
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
    const { data: subscriptions, error: subError } = await supabase
      .from('competitor_subscriptions')
      .select(`
        *,
        competitor_profiles(display_name, followers_count)
      `)
      .eq('user_telegram_id', '144022504')
      .order('created_at', { ascending: false })
      .limit(5)
    
    if (subError) {
      throw subError
    }
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${subscriptions.length} –ø–æ–¥–ø–∏—Å–æ–∫:`)
    subscriptions.forEach((sub, index) => {
      console.log(`${index + 1}. @${sub.competitor_username}`)
      console.log(`   üéØ –ú–∞–∫—Å —Ä–∏–ª–∑–æ–≤: ${sub.max_reels}`)
      console.log(`   üëÅ –ú–∏–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${sub.min_views}`)
      console.log(`   ‚è∞ –°–æ–∑–¥–∞–Ω–∞: ${sub.created_at}`)
      console.log(`   ‚úÖ –ê–∫—Ç–∏–≤–Ω–∞: ${sub.is_active}`)
      console.log('')
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫:', error.message)
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function runAllTests() {
  await testCompetitorMonitoring()
  
  // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  console.log('\n‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π...')
  await new Promise(resolve => setTimeout(resolve, 5000))
  
  await checkSubscriptionStatus()
  await testGetCompetitorStatus()
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!process.env.SUPABASE_URL) {
  console.error('‚ùå SUPABASE_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')
  process.exit(1)
}

if (!process.env.SUPABASE_SERVICE_ROLE_KEY) {
  console.error('‚ùå SUPABASE_SERVICE_ROLE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')
  process.exit(1)
}

if (!process.env.INNGEST_EVENT_KEY) {
  console.error('‚ùå INNGEST_EVENT_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')
  process.exit(1)
}

runAllTests().catch(console.error)