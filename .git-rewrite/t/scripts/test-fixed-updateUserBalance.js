#!/usr/bin/env node

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
process.env.NODE_ENV = 'production'
process.env.SUPABASE_URL = 'https://yuukfqcsdhkyxegfwlcb.supabase.co'
process.env.SUPABASE_SERVICE_KEY = 'test_key'
process.env.SUPABASE_SERVICE_ROLE_KEY = 'test_role_key'
process.env.SECRET_KEY = 'test_secret'
process.env.SECRET_API_KEY = 'test_api_secret'
process.env.SYNC_LABS_API_KEY = 'test_sync_labs'
process.env.NEXT_PUBLIC_MANAGEMENT_TOKEN = 'test_management_token'
process.env.NEXRENDER_PORT = '4001'
process.env.AERENDER_PATH = '/test/path'
process.env.BOT_TOKEN_1 = 'test_token_1'
process.env.BOT_TOKEN_2 = 'test_token_2'
process.env.BOT_TOKEN_3 = 'test_token_3'
process.env.BOT_TOKEN_4 = 'test_token_4'
process.env.BOT_TOKEN_5 = 'test_token_5'
process.env.BOT_TOKEN_6 = 'test_token_6'
process.env.BOT_TOKEN_7 = 'test_token_7'
process.env.BOT_TOKEN_8 = 'test_token_8'
process.env.BOT_TOKEN_TEST_1 = 'test_token_test_1'
process.env.BOT_TOKEN_TEST_2 = 'test_token_test_2'

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ updateUserBalance')
console.log('==================================================')

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
const { calculateModeCost } = require('../dist/price/helpers/modelsCost.js')
const { ModeEnum } = require('../dist/interfaces/modes.js')
const { PaymentType } = require('../dist/interfaces/payments.interface.js')

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
const testCases = [
  {
    name: 'Model Training - DigitalAvatarBody',
    params: {
      telegram_id: '144022504',
      amount: 220, // –°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ (1000 —à–∞–≥–æ–≤ √ó 0.22)
      type: PaymentType.MONEY_OUTCOME,
      description: '–û–ø–ª–∞—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏ test_model (—à–∞–≥–æ–≤: 1000)',
      metadata: {
        stars: 220,
        payment_method: 'Internal',
        bot_name: 'neuro_blogger_bot',
        language: 'ru',
        service_type: ModeEnum.DigitalAvatarBody,
        operation_id: 'test_training_123',
        category: 'REAL',
        cost: 146.67, // 220 √∑ 1.5 (–Ω–∞—Ü–µ–Ω–∫–∞ 50%)
      },
    },
    expectedStructure: {
      amount: 220,
      stars: 220,
      currency: 'STARS',
      service_type: 'DIGITAL_AVATAR_BODY',
      category: 'REAL',
      cost: 147, // –û–∫—Ä—É–≥–ª–µ–Ω–æ
      is_system_payment: 'false',
    },
  },
  {
    name: 'NeuroPhoto Generation',
    params: {
      telegram_id: '144022504',
      amount: 7.5, // –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      type: PaymentType.MONEY_OUTCOME,
      description: 'NeuroPhoto generation (1 images)',
      metadata: {
        stars: 7.5,
        payment_method: 'Internal',
        bot_name: 'neuro_blogger_bot',
        language: 'en',
        service_type: ModeEnum.NeuroPhoto,
        category: 'REAL',
        cost: 5, // 7.5 √∑ 1.5 (–Ω–∞—Ü–µ–Ω–∫–∞ 50%)
      },
    },
    expectedStructure: {
      amount: 8, // –û–∫—Ä—É–≥–ª–µ–Ω–æ –¥–æ —Ü–µ–ª–æ–≥–æ
      stars: 8,
      currency: 'STARS',
      service_type: 'NEURO_PHOTO',
      category: 'REAL',
      cost: 5, // 7.5 √∑ 1.5 = 5
      is_system_payment: 'false',
    },
  },
  {
    name: 'Text-to-Image Generation',
    params: {
      telegram_id: '144022504',
      amount: 15, // –°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
      type: PaymentType.MONEY_OUTCOME,
      description: 'Text-to-Image generation (2/3 successful)',
      metadata: {
        stars: 15,
        payment_method: 'Internal',
        bot_name: 'neuro_blogger_bot',
        language: 'ru',
        service_type: ModeEnum.TextToImage,
        category: 'REAL',
        cost: 10, // 15 √∑ 1.5 (–Ω–∞—Ü–µ–Ω–∫–∞ 50%)
      },
    },
    expectedStructure: {
      amount: 15,
      stars: 15,
      currency: 'STARS',
      service_type: 'TEXT_TO_IMAGE',
      category: 'REAL',
      cost: 10, // 15 √∑ 1.5 = 10
      is_system_payment: 'false',
    },
  },
]

console.log('üìä –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...\n')

for (const testCase of testCases) {
  console.log(`üß™ ${testCase.name}:`)
  console.log('   –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:')
  console.log(`     amount: ${testCase.params.amount}`)
  console.log(`     type: ${testCase.params.type}`)
  console.log(`     service_type: ${testCase.params.metadata.service_type}`)
  console.log(`     category: ${testCase.params.metadata.category}`)
  console.log(`     cost: ${testCase.params.metadata.cost}`)

  console.log('   –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤ –ë–î:')
  console.log(`     amount: ${testCase.expectedStructure.amount}`)
  console.log(`     stars: ${testCase.expectedStructure.stars}`)
  console.log(`     currency: ${testCase.expectedStructure.currency}`)
  console.log(`     service_type: ${testCase.expectedStructure.service_type}`)
  console.log(`     category: ${testCase.expectedStructure.category}`)
  console.log(`     cost: ${testCase.expectedStructure.cost}`)
  console.log(
    `     is_system_payment: ${testCase.expectedStructure.is_system_payment}`
  )

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏–º–µ—Ä—É –∏–∑ –ë–î
  const isConsistent =
    testCase.params.amount === testCase.expectedStructure.amount &&
    testCase.params.metadata.stars === testCase.expectedStructure.stars &&
    testCase.params.metadata.category === testCase.expectedStructure.category &&
    testCase.params.metadata.category_detailed ===
      testCase.expectedStructure.category_detailed

  console.log(
    `   ‚úÖ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å: ${
      isConsistent ? '–°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢' : '–ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢'
    }`
  )
  console.log()
}

console.log('üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–æ–º –∏–∑ –ë–î:')
console.log('–ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏ –∏–∑ –ë–î:')
console.log(`  amount: '25425' (–±—ã–ª–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)`)
console.log(`  stars: '25425' (–±—ã–ª–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)`)
console.log(`  service_type: null (–ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏)`)
console.log(`  category: 'REAL'`)
console.log(`  category_detailed: 'REAL_PAYMENT'`)
console.log(`  is_system_payment: 'false'`)

console.log('\n–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (1000 —à–∞–≥–æ–≤):')
console.log(`  amount: '220' (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)`)
console.log(`  stars: '220' (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)`)
console.log(`  service_type: 'DIGITAL_AVATAR_BODY' (–¥–æ–±–∞–≤–ª–µ–Ω–æ)`)
console.log(`  category: 'REAL'`)
console.log(`  category_detailed: 'REAL_PAYMENT'`)
console.log(`  is_system_payment: 'false'`)

console.log('\nüìà –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç:')
console.log('–°—Ç–∞—Ä–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 25,425 –∑–≤–µ–∑–¥')
console.log('–ù–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 220 –∑–≤–µ–∑–¥')
console.log('–≠–∫–æ–Ω–æ–º–∏—è:', 25425 - 220, '–∑–≤–µ–∑–¥')
console.log(
  '–°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏:',
  (((25425 - 220) / 25425) * 100).toFixed(1) + '%'
)

console.log('\n‚úÖ –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω!')
console.log(
  'üéØ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ö–µ–º–æ–π –ë–î'
)
