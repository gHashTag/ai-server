console.log('üîç –¢–ï–°–¢: –ü—Ä–æ–±–ª–µ–º–∞ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –≤ calculateFinalImageCostInStars\n')

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–∏–∑ src/price/helpers/modelsCost.ts)
const starCost = 0.016 // —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–π –∑–≤–µ–∑–¥—ã –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö
const interestRate = 0.5 // –Ω–∞—Ü–µ–Ω–∫–∞ 50%

console.log('üìä –¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:')
console.log(`   starCost: $${starCost}`)
console.log(`   interestRate: ${interestRate} (${interestRate * 100}%)`)
console.log('')

// –§—É–Ω–∫—Ü–∏—è –∫–∞–∫ –æ–Ω–∞ –µ—Å—Ç—å —Å–µ–π—á–∞—Å (—Å Math.ceil)
function calculateFinalImageCostInStars_CURRENT(baseCost) {
  const finalCostInDollars = baseCost * (1 + interestRate)
  return Math.ceil(finalCostInDollars / starCost)
}

// –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è (—Å Math.floor)
function calculateFinalImageCostInStars_FIXED(baseCost) {
  const finalCostInDollars = baseCost * (1 + interestRate)
  return Math.floor(finalCostInDollars / starCost)
}

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è
const testCases = [
  { baseCost: 0.12, description: 'TextToSpeech –±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å' },
  { baseCost: 0.08, description: 'NeuroPhoto –±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å' },
  { baseCost: 0.14, description: 'NeuroPhotoV2 –±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å' },
  { baseCost: 0.055, description: 'FLUX1.1 pro –±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å' },
  { baseCost: 0.06, description: 'FLUX1.1 pro Ultra –±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å' },
  { baseCost: 0.05, description: 'FLUX1.1 dev –±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å' },
  { baseCost: 0.025, description: 'FLUX1.1 Depth –±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å' },
]

console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ö–†–£–ì–õ–ï–ù–ò–Ø:\n')

let totalOvercharge = 0
let problemCases = 0

testCases.forEach(testCase => {
  const { baseCost, description } = testCase

  // –†—É—á–Ω–æ–π —Ä–∞—Å—á–µ—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const finalCostInDollars = baseCost * (1 + interestRate)
  const exactStars = finalCostInDollars / starCost

  const currentResult = calculateFinalImageCostInStars_CURRENT(baseCost)
  const fixedResult = calculateFinalImageCostInStars_FIXED(baseCost)

  console.log(`üìù ${description}:`)
  console.log(`   –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${baseCost}`)
  console.log(`   –° –Ω–∞—Ü–µ–Ω–∫–æ–π: $${finalCostInDollars.toFixed(4)}`)
  console.log(`   –¢–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∑–≤–µ–∑–¥–∞—Ö: ${exactStars.toFixed(4)}‚≠ê`)
  console.log(`   –¢–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (Math.ceil): ${currentResult}‚≠ê`)
  console.log(`   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (Math.floor): ${fixedResult}‚≠ê`)

  if (exactStars % 1 !== 0) {
    const overcharge = currentResult - exactStars
    const savings = currentResult - fixedResult
    console.log(
      `   üö® –ü–†–û–ë–õ–ï–ú–ê: –ü–µ—Ä–µ–ø–ª–∞—Ç–∞ ${overcharge.toFixed(
        4
      )}‚≠ê –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ Math.ceil`
    )
    console.log(`   üí∞ –≠–ö–û–ù–û–ú–ò–Ø: ${savings}‚≠ê –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ Math.floor`)
    totalOvercharge += overcharge
    problemCases++
  } else {
    console.log(`   ‚úÖ –¢–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –Ω–µ –≤–ª–∏—è–µ—Ç`)
  }
  console.log('')
})

console.log('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:\n')
console.log(`   –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤: ${problemCases}/${testCases.length}`)
console.log(`   –û–±—â–∞—è –ø–µ—Ä–µ–ø–ª–∞—Ç–∞: ${totalOvercharge.toFixed(4)}‚≠ê`)
console.log(
  `   –°—Ä–µ–¥–Ω—è—è –ø–µ—Ä–µ–ø–ª–∞—Ç–∞ –Ω–∞ —Å–ª—É—á–∞–π: ${(totalOvercharge / problemCases).toFixed(
    4
  )}‚≠ê`
)

console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\n')
console.log(
  '1. üîß –ó–∞–º–µ–Ω–∏—Ç—å Math.ceil –Ω–∞ Math.floor –≤ calculateFinalImageCostInStars'
)
console.log('2. üéØ –≠—Ç–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç –ø–µ—Ä–µ–ø–ª–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
console.log(
  '3. üìä –ë—É–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫–µ calculateFinalPrice (–∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Math.floor)'
)
console.log('4. ‚öñÔ∏è –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤ –ø–æ–ª—å–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
console.log('5. üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç —ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏')

console.log('\nüîß –ü–†–ï–î–õ–ê–ì–ê–ï–ú–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:')
console.log('```typescript')
console.log(
  'export function calculateFinalImageCostInStars(baseCost: number): number {'
)
console.log('  const finalCostInDollars = baseCost * (1 + interestRate)')
console.log(
  '  return Math.floor(finalCostInDollars / starCost) // ‚Üê –ò–ó–ú–ï–ù–ï–ù–û: ceil ‚Üí floor'
)
console.log('}')
console.log('```')

console.log('\nüéØ –ü–†–ò–ú–ï–† –ö–û–ù–ö–†–ï–¢–ù–û–ô –ü–†–û–ë–õ–ï–ú–´:')
const exampleCost = 0.12 // TextToSpeech
const exampleFinalCost = exampleCost * (1 + interestRate)
const exampleExactStars = exampleFinalCost / starCost
console.log(
  `   TextToSpeech: $${exampleCost} ‚Üí $${exampleFinalCost} ‚Üí ${exampleExactStars.toFixed(
    4
  )}‚≠ê`
)
console.log(
  `   Math.ceil: ${Math.ceil(exampleExactStars)}‚≠ê (–ø–µ—Ä–µ–ø–ª–∞—Ç–∞ ${(
    Math.ceil(exampleExactStars) - exampleExactStars
  ).toFixed(4)}‚≠ê)`
)
console.log(`   Math.floor: ${Math.floor(exampleExactStars)}‚≠ê (—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ)`)
console.log(`   –≠—Ç–æ –∏ –µ—Å—Ç—å –≤–∞—à —Å–ª—É—á–∞–π: 7.5‚≠ê ‚Üí 8‚≠ê!`)
