/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–≤–µ—Ç–∞ Instagram API
 * –ü–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞–¥–∞–µ—Ç —Å –æ—à–∏–±–∫–æ–π "Expected object, received string"
 */

require('dotenv').config()
const axios = require('axios')

async function debugInstagramAPI() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞ Instagram API...\n')

  const config = {
    apiKey: process.env.RAPIDAPI_INSTAGRAM_KEY,
    host:
      process.env.RAPIDAPI_INSTAGRAM_HOST ||
      'real-time-instagram-scraper-api1.p.rapidapi.com',
    baseUrl: 'https://real-time-instagram-scraper-api1.p.rapidapi.com',
  }

  console.log('‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:')
  console.log(
    `   API Key: ${
      config.apiKey ? config.apiKey.substring(0, 10) + '...' : '–ù–ï –ù–ê–ô–î–ï–ù'
    }`
  )
  console.log(`   Host: ${config.host}`)
  console.log(`   Base URL: ${config.baseUrl}\n`)

  if (!config.apiKey) {
    console.error('‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!')
    return
  }

  try {
    console.log('üìû –í—ã–∑–æ–≤ Similar Users API...')
    const response = await axios.get(`${config.baseUrl}/v1/similar_users_v2`, {
      params: {
        username_or_id: 'treff_8',
        count: 3,
      },
      headers: {
        'x-rapidapi-key': config.apiKey,
        'x-rapidapi-host': config.host,
        'Content-Type': 'application/json',
      },
      timeout: 30000,
    })

    console.log('‚úÖ API –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!')
    console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status)
    console.log('üìã Headers:', JSON.stringify(response.headers, null, 2))

    console.log('\nüîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞:')
    console.log('   –¢–∏–ø response.data:', typeof response.data)
    console.log('   –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:', response.data.constructor.name)

    if (typeof response.data === 'string') {
      console.log('‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: response.data —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∞ –Ω–µ –æ–±—ä–µ–∫—Ç!')
      console.log('üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–æ–∫–∏ (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):')
      console.log(response.data.substring(0, 500))

      try {
        const parsed = JSON.parse(response.data)
        console.log('‚úÖ –°—Ç—Ä–æ–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–∞—Ä—Å–∏—Ç—Å—è –∫–∞–∫ JSON')
        console.log('üìä –¢–∏–ø –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞:', typeof parsed)
        console.log('üîë –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è:', Object.keys(parsed))

        if (parsed.data) {
          console.log('üîë –ö–ª—é—á–∏ –≤ parsed.data:', Object.keys(parsed.data))
        }
      } catch (parseError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', parseError.message)
      }
    } else {
      console.log('‚úÖ response.data —ç—Ç–æ –æ–±—ä–µ–∫—Ç')
      console.log('üîë –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è:', Object.keys(response.data))

      if (response.data.data) {
        console.log(
          'üîë –ö–ª—é—á–∏ –≤ response.data.data:',
          Object.keys(response.data.data)
        )
      }
    }

    console.log('\nüìÑ –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ (–ø–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤):')
    console.log(JSON.stringify(response.data, null, 2).substring(0, 1000))
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ API –≤—ã–∑–æ–≤–∞:', error.message)

    if (error.response) {
      console.log('üìä –°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏:', error.response.status)
      console.log(
        'üìã Headers –æ—à–∏–±–∫–∏:',
        JSON.stringify(error.response.headers, null, 2)
      )
      console.log('üìÑ –î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', error.response.data)
    }
  }
}

debugInstagramAPI().catch(console.error)
