import { supabase } from '@/core/supabase' // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ supabase —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ task_id, –≤–∫–ª—é—á–∞—è bot_name, language_code, username –∏ telegram_id.
 * @param task_id - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏.
 * @returns –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–ª–∏ null, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.
 */
export async function getTaskData(task_id: string): Promise<{
  telegram_id: string
  bot_name: string
  language_code: string
  username: string
} | null> {
  try {
    console.log('üîç Fetching task data for task_id:', task_id)

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã prompts_history
    const { data: existingData, error: selectError } = await supabase
      .from('prompts_history')
      .select('telegram_id, users(bot_name, language_code, username)')
      .eq('task_id', task_id)
      .single()

    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –∏ —ç—Ç–æ –Ω–µ "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö", –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
    if (selectError && selectError.code !== 'PGRST116') {
      console.error('Error fetching task data:', selectError)
      throw selectError
    }

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    if (!existingData) {
      console.warn('‚ö†Ô∏è No data found for task_id:', task_id)
      return null
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    const { telegram_id, users } = existingData
    if (!users) {
      console.warn('‚ö†Ô∏è No user data found for task_id:', task_id)
      return null
    }
    // @ts-ignore
    const { bot_name, language_code, username } = users

    console.log('‚úÖ Task data fetched successfully:', {
      telegram_id,
      bot_name,
      language_code,
      username,
    })

    return {
      telegram_id,
      bot_name,
      language_code,
      username,
    }
  } catch (error) {
    console.error('‚ùå Error in getTaskData:', error)
    throw error
  }
}
