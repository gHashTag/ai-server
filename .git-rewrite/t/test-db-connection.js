/**
 * –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Neon
 */

const { Pool } = require('pg')

async function testDatabaseConnection() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')

  const connectionString = process.env.NEON_DATABASE_URL
  console.log('Connection String:', connectionString ? 'FOUND' : 'NOT FOUND')

  if (!connectionString) {
    console.error('‚ùå NEON_DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
    process.exit(1)
  }

  // –°–æ–∑–¥–∞–µ–º –ø—É–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
  const dbPool = new Pool({
    connectionString: connectionString,
    ssl: {
      rejectUnauthorized: false,
    },
  })

  const client = await dbPool.connect()

  try {
    // –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    const result = await client.query('SELECT NOW() as current_time')
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!')
    console.log('Current time:', result.rows[0].current_time)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    const tablesResult = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      ORDER BY table_name
    `)

    console.log('\nüìä –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã:')
    tablesResult.rows.forEach(row => {
      console.log(`  - ${row.table_name}`)
    })

    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∫–∞–∫ –≤ —Ñ—É–Ω–∫—Ü–∏–∏
    console.log('\nüî® –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É...')
    await client.query(`
      CREATE TABLE IF NOT EXISTS instagram_similar_users (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        search_username VARCHAR(255) NOT NULL,
        user_pk VARCHAR(255) NOT NULL,
        username VARCHAR(255) NOT NULL,
        full_name VARCHAR(255),
        is_private BOOLEAN DEFAULT false,
        is_verified BOOLEAN DEFAULT false,
        profile_pic_url TEXT,
        profile_url TEXT,
        profile_chaining_secondary_label VARCHAR(255),
        social_context VARCHAR(255),
        project_id INTEGER,
        scraped_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(search_username, user_pk)
      );
    `)

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ instagram_similar_users —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª–∞—Å—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
    const newTablesResult = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      ORDER BY table_name
    `)

    console.log('\nüìä –¢–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è:')
    newTablesResult.rows.forEach(row => {
      console.log(`  - ${row.table_name}`)
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:', error.message)
    console.error('–î–µ—Ç–∞–ª–∏:', error)
    throw error
  } finally {
    client.release()
    await dbPool.end()
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testDatabaseConnection()
    .then(() => {
      console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
      process.exit(0)
    })
    .catch(error => {
      console.error('\nüí• –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error)
      process.exit(1)
    })
}

module.exports = { testDatabaseConnection }
