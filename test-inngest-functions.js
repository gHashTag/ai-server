/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö Inngest —Ñ—É–Ω–∫—Ü–∏–π
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
 */

const { inngest } = require('./dist/core/inngest/clients');

async function testInngestFunctions() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï INNGEST –§–£–ù–ö–¶–ò–ô');
  console.log('='.repeat(40));

  try {
    // 1. –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    console.log('\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...');
    const monitorResult = await inngest.send({
      name: 'system/trigger-monitor',
      data: { 
        trigger: 'test',
        timestamp: Date.now()
      }
    });
    console.log(`‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω: ${monitorResult.ids[0]}`);

    // 2. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
    console.log('\nüíö –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è...');
    const healthResult = await inngest.send({
      name: 'system/trigger-health-check',
      data: { 
        trigger: 'test',
        timestamp: Date.now()
      }
    });
    console.log(`‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∑–∞–ø—É—â–µ–Ω–∞: ${healthResult.ids[0]}`);

    // 3. –¢–µ—Å—Ç –∞–≤—Ç–æ–ø–∞—Ä—Å–µ—Ä–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤  
    console.log('\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ–ø–∞—Ä—Å–µ—Ä –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...');
    const autoParserResult = await inngest.send({
      name: 'competitor/trigger-auto-parse',
      data: { 
        trigger: 'test',
        timestamp: Date.now()
      }
    });
    console.log(`‚úÖ –ê–≤—Ç–æ–ø–∞—Ä—Å–µ—Ä –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω: ${autoParserResult.ids[0]}`);

    // 4. –¢–µ—Å—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –¥–ª—è health check
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º health test handler...');
    const testEventResult = await inngest.send({
      name: 'system/health-test',
      data: { 
        timestamp: Date.now(),
        source: 'test-script'
      }
    });
    console.log(`‚úÖ Health test event –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${testEventResult.ids[0]}`);

    console.log('\n' + '='.repeat(40));
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù–´');
    console.log('\n‚ÑπÔ∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Inngest –∏–ª–∏ –∞–¥–º–∏–Ω—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
    console.log('    –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    console.error(error);
  }
}

testInngestFunctions();