/**
 * –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö Instagram API –∫–ª—é—á–µ–π
 */

const axios = require('axios')

async function testRealInstagramAPI() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ Instagram API –∫–ª—é—á–∏...')

  const API_KEY = process.env.RAPIDAPI_INSTAGRAM_KEY || 'your-rapidapi-key-here'
  const HOST = 'real-time-instagram-scraper-api1.p.rapidapi.com'
  const BASE_URL = 'https://real-time-instagram-scraper-api1.p.rapidapi.com'

  console.log('API Key:', API_KEY.substring(0, 10) + '...')
  console.log('Host:', HOST)

  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    console.log('\nüîç –ò—â–µ–º –ø–æ—Ö–æ–∂–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è @instagram...')

    const response = await axios.get(`${BASE_URL}/v1/similar_users_v2`, {
      params: {
        username_or_id: 'instagram',
        count: 10,
      },
      headers: {
        'x-rapidapi-key': API_KEY,
        'x-rapidapi-host': HOST,
        'Content-Type': 'application/json',
      },
      timeout: 30000,
    })

    console.log('‚úÖ API Response Status:', response.status)
    console.log('üìä Response Data Structure:')
    console.log('- Status:', response.data?.status)
    console.log('- Message:', response.data?.message)

    if (response.data?.data) {
      if (typeof response.data.data === 'string') {
        console.log('‚ùå API Error Response:', response.data.data)
        return false
      }

      const users = response.data.data.users
      console.log(`üéâ SUCCESS! Found ${users?.length || 0} similar users`)

      if (users && users.length > 0) {
        console.log('\nüéØ –ü—Ä–∏–º–µ—Ä—ã —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤:')
        users.slice(0, 3).forEach((user, index) => {
          const verified = user.is_verified ? '‚úÖ' : '‚ùå'
          console.log(
            `${index + 1}. @${user.username} - ${user.full_name} ${verified}`
          )
          console.log(`   PK: ${user.pk}, Private: ${user.is_private}`)
        })
        return true
      }
    }

    console.log('‚ö†Ô∏è No users found in response')
    return false
  } catch (error) {
    console.error('‚ùå API Error:', error.message)
    if (error.response) {
      console.error('Status:', error.response.status)
      console.error('Response:', error.response.data)
    }
    return false
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testRealInstagramAPI()
    .then(success => {
      if (success) {
        console.log(
          '\nüéâ API –∫–ª—é—á–∏ —Ä–∞–±–æ—Ç–∞—é—Ç! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥.'
        )
      } else {
        console.log('\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å API –∫–ª—é—á–∞–º–∏ –∏–ª–∏ —Å–µ—Ä–≤–∏—Å–æ–º.')
      }
      process.exit(success ? 0 : 1)
    })
    .catch(error => {
      console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
      process.exit(1)
    })
}

module.exports = { testRealInstagramAPI }
