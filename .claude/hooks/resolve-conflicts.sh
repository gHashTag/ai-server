#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø—Ä–∏ merge
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä

set -e

FEATURE_BRANCH="$1"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[CONFLICT-RESOLVER] $1"
}

if [[ -z "$FEATURE_BRANCH" ]]; then
    log "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ –≤–µ—Ç–∫–∞ –¥–ª—è merge"
    exit 1
fi

log "üîß –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤..."

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
CONFLICTED_FILES=$(git diff --name-only --diff-filter=U 2>/dev/null || echo "")

if [[ -z "$CONFLICTED_FILES" ]]; then
    log "‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
    exit 0
fi

log "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ —Ñ–∞–π–ª–∞—Ö:"
echo "$CONFLICTED_FILES" | while read -r file; do
    log "   ‚Ä¢ $file"
done

RESOLVED_COUNT=0
TOTAL_COUNT=$(echo "$CONFLICTED_FILES" | wc -l)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π —Ñ–∞–π–ª
echo "$CONFLICTED_FILES" | while read -r file; do
    if [[ ! -f "$file" ]]; then
        log "‚ö†Ô∏è –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $file"
        continue
    fi
    
    log "üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: $file"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    case "$file" in
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã - –≤—ã–±–∏—Ä–∞–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é (ours)
        *.json|*.yaml|*.yml|*.env*|*.config.*|package.json|package-lock.json)
            log "   üìã –ö–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª - –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é (ours)"
            git checkout --ours "$file"
            git add "$file"
            ((RESOLVED_COUNT++))
            ;;
            
        # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è - –≤—ã–±–∏—Ä–∞–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é
        *.md|*.txt|*.rst)
            log "   üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é (ours)"
            git checkout --ours "$file"
            git add "$file"
            ((RESOLVED_COUNT++))
            ;;
            
        # IDE –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - —É–¥–∞–ª—è–µ–º (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ PR)
        .vscode/*|.idea/*|.cursor/*)
            log "   üóëÔ∏è IDE –∫–æ–Ω—Ñ–∏–≥ - —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª"
            git rm "$file" 2>/dev/null || rm -f "$file"
            ((RESOLVED_COUNT++))
            ;;
            
        # TypeScript/JavaScript —Ñ–∞–π–ª—ã - –ø—ã—Ç–∞–µ–º—Å—è —É–º–Ω—ã–π merge
        *.ts|*.js|*.tsx|*.jsx)
            log "   üíª –ö–æ–¥ —Ñ–∞–π–ª - –ø–æ–ø—ã—Ç–∫–∞ —É–º–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è..."
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ —Ç–æ–ª—å–∫–æ imports –∏–ª–∏ –ø—Ä–æ—Å—Ç—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if grep -q "<<<<<<< HEAD" "$file"; then
                # –ï—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç-–º–∞—Ä–∫–µ—Ä—ã, –ø—Ä–æ–±—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
                
                # –î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–ª—É—á–∞–µ–≤ - –≤—ã–±–∏—Ä–∞–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é
                if resolve_simple_conflict "$file"; then
                    git add "$file"
                    ((RESOLVED_COUNT++))
                    log "   ‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
                else
                    log "   ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞"
                fi
            else
                log "   ‚úÖ –§–∞–π–ª —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω"
                git add "$file"
                ((RESOLVED_COUNT++))
            fi
            ;;
            
        # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã - –≤—ã–±–∏—Ä–∞–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        *)
            log "   üîÄ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø - –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é (ours)"
            git checkout --ours "$file"
            git add "$file"
            ((RESOLVED_COUNT++))
            ;;
    esac
done

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ –∫–æ–¥–µ
resolve_simple_conflict() {
    local file="$1"
    local temp_file="/tmp/resolve_conflict_$$"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç –ø—Ä–æ—Å—Ç—ã–º (—Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è)
    if python3 -c "
import sys
import re

def can_auto_resolve(content):
    # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –±–ª–æ–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    conflicts = re.findall(r'<<<<<<< HEAD.*?\n(.*?)=======\n(.*?)>>>>>>> .*?\n', content, re.DOTALL)
    
    for head_part, incoming_part in conflicts:
        # –ï—Å–ª–∏ —á–∞—Å—Ç–∏ —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è, –Ω–µ –º–æ–∂–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç—å
        head_lines = set(head_part.strip().split('\n'))
        incoming_lines = set(incoming_part.strip().split('\n'))
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –∏–ª–∏ incoming —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        if len(head_lines & incoming_lines) > 0 or len(head_lines) == 0:
            continue
        else:
            return False
    return True

try:
    with open('$file', 'r', encoding='utf-8', errors='ignore') as f:
        content = f.read()
    
    if can_auto_resolve(content):
        # –ü—Ä–æ—Å—Ç–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ - –≤—ã–±–∏—Ä–∞–µ–º incoming (–Ω–∞—à—É) –≤–µ—Ä—Å–∏—é
        resolved = re.sub(r'<<<<<<< HEAD.*?\n(.*?)=======\n(.*?)>>>>>>> .*?\n', r'\2', content, flags=re.DOTALL)
        
        with open('$temp_file', 'w', encoding='utf-8') as f:
            f.write(resolved)
        
        print('SUCCESS')
    else:
        print('COMPLEX')
        
except Exception as e:
    print('ERROR')
    print(str(e), file=sys.stderr)
" 2>/dev/null; then
        if [[ -f "$temp_file" ]]; then
            cp "$temp_file" "$file"
            rm -f "$temp_file"
            return 0
        fi
    fi
    
    # –ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –≤—ã–±–∏—Ä–∞–µ–º –Ω–∞—à—É –≤–µ—Ä—Å–∏—é
    git checkout --ours "$file"
    return 0
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
REMAINING_CONFLICTS=$(git diff --name-only --diff-filter=U 2>/dev/null | wc -l)

if [[ $REMAINING_CONFLICTS -eq 0 ]]; then
    log "‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!"
    log "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: $RESOLVED_COUNT –∏–∑ $TOTAL_COUNT —Ñ–∞–π–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –µ—â–µ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è
    if [[ -f "package.json" ]] && command -v npm &> /dev/null; then
        log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞..."
        if npm run build &>/dev/null || npm run lint &>/dev/null; then
            log "‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤"
        else
            log "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–±–æ—Ä–∫–æ–π"
        fi
    fi
    
    exit 0
else
    log "‚ùå –û—Å—Ç–∞–ª–∏—Å—å –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã: $REMAINING_CONFLICTS"
    log "üîß –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –¥–ª—è:"
    git diff --name-only --diff-filter=U | while read -r file; do
        log "   ‚Ä¢ $file"
    done
    exit 1
fi