#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π merge –≤ production —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ feature branch

set -e

PROJECT_DIR="${CLAUDE_PROJECT_DIR:-$(pwd)}"
CURRENT_DIR="$(pwd)"
PRODUCTION_WORKTREE="/Users/playra/ai-server/worktrees/competitors"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[AUTO-MERGE] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
cleanup() {
    cd "$CURRENT_DIR"
}
trap cleanup EXIT

echo "üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ merge –≤ production..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if [[ ! -d .git ]] && [[ ! -f .git ]]; then
    log "‚ö†Ô∏è –ù–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º merge"
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ production worktree
if [[ ! -d "$PRODUCTION_WORKTREE" ]]; then
    log "‚ö†Ô∏è Production worktree –Ω–µ –Ω–∞–π–¥–µ–Ω: $PRODUCTION_WORKTREE"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
CURRENT_BRANCH=$(git branch --show-current 2>/dev/null || echo "")
if [[ -z "$CURRENT_BRANCH" ]]; then
    log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É"
    exit 1
fi

# –ü—Ä–æ–ø—É—Å–∫–∞–µ–º merge –¥–ª—è main/production –≤–µ—Ç–æ–∫
if [[ "$CURRENT_BRANCH" == "main" ]] || [[ "$CURRENT_BRANCH" == "production" ]]; then
    log "‚ÑπÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º merge –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ç–∫–∏: $CURRENT_BRANCH"
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
if [[ -n "$(git status --porcelain)" ]]; then
    log "‚ö†Ô∏è –ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º merge"
    exit 1
fi

log "üìã –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"
log "üéØ –ù–∞—á–∏–Ω–∞–µ–º merge –≤ production..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ production worktree
cd "$PRODUCTION_WORKTREE"
log "üìÅ –ü–µ—Ä–µ—à–ª–∏ –≤ production worktree: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å production –≤–µ—Ç–∫–∏
log "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å production –≤–µ—Ç–∫–∏..."
git status

# –ü—É–ª–ª–∏–º latest –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ origin
log "‚¨áÔ∏è –ü—É–ª–ª–∏–º latest –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ origin/production..."
if git pull origin production 2>/dev/null; then
    log "‚úÖ Production –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å production (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π)"
fi

# –ü—É–ª–ª–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ feature –≤–µ—Ç–∫–∏
log "‚¨áÔ∏è –ü—É–ª–ª–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ origin/$CURRENT_BRANCH..."
git fetch origin "$CURRENT_BRANCH" 2>/dev/null || {
    log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ –≤–µ—Ç–∫–∏ $CURRENT_BRANCH"
    exit 1
}

# –ù–∞—á–∏–Ω–∞–µ–º merge
log "üîÄ –ù–∞—á–∏–Ω–∞–µ–º merge $CURRENT_BRANCH –≤ production..."
if git merge "origin/$CURRENT_BRANCH" --no-edit -m "chore: Merge $CURRENT_BRANCH into production

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π merge –∏–∑ –≤–µ—Ç–∫–∏ $CURRENT_BRANCH –≤ production.

ü§ñ Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>" 2>/dev/null; then
    
    log "‚úÖ Merge –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤!"
    
    # –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ production
    log "üì§ –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ origin/production..."
    if git push origin production 2>/dev/null; then
        log "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—à–µ–Ω—ã –≤ production!"
        
        # –ü–æ–ª—É—á–∞–µ–º —Ö–µ—à –∫–æ–º–º–∏—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        MERGE_COMMIT=$(git rev-parse HEAD)
        log "üìù Commit hash: $MERGE_COMMIT"
        
    else
        log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ production"
        exit 1
    fi
    
else
    # –ï—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, –ø—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    log "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ..."
    
    # –í—ã–∑—ã–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    if "$PROJECT_DIR/.claude/hooks/resolve-conflicts.sh" "$CURRENT_BRANCH"; then
        log "‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        
        # –ö–æ–º–º–∏—Ç–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç merge
        git commit -m "chore: Merge $CURRENT_BRANCH into production with conflict resolution

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π merge –∏–∑ –≤–µ—Ç–∫–∏ $CURRENT_BRANCH –≤ production 
—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.

ü§ñ Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"
        
        # –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        log "üì§ –ü—É—à–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ origin/production..."
        if git push origin production; then
            log "‚úÖ Merge —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        else
            log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—à–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"
            exit 1
        fi
        
    else
        log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã"
        log "üîß –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ:"
        log "   cd $PRODUCTION_WORKTREE"
        log "   git status"
        log "   # —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä—É—á–Ω—É—é"
        log "   git add ."
        log "   git commit"
        log "   git push origin production"
        exit 1
    fi
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
log "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å production:"
git log --oneline -3

echo ""
log "üéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π merge –≤ production –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
log "üåê Production –æ–±–Ω–æ–≤–ª–µ–Ω —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –∏–∑ –≤–µ—Ç–∫–∏: $CURRENT_BRANCH"