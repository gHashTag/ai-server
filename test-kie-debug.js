const axios = require('axios');

const KIE_API_KEY = 'f52f224a92970aa6b7c7780104a00f71';
const BASE_URL = 'https://api.kie.ai/api/v1';

async function debugKieApi() {
  console.log('üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê KIE.AI API\n');
  console.log('=' * 50);
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
  console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê');
  try {
    const creditResponse = await axios.get(`${BASE_URL}/chat/credit`, {
      headers: {
        'Authorization': `Bearer ${KIE_API_KEY}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω:');
    console.log(JSON.stringify(creditResponse.data, null, 2));
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', error.message);
  }
  
  // 2. –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  console.log('\n2Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ó–ê–î–ê–ß–ò –ì–ï–ù–ï–†–ê–¶–ò–ò');
  
  const requestBody = {
    model: 'veo3_fast',
    prompt: 'Beautiful ocean waves at sunset, vertical video',
    duration: 4,
    aspectRatio: '9:16'
  };
  
  console.log('üìã –ó–∞–ø—Ä–æ—Å:');
  console.log(JSON.stringify(requestBody, null, 2));
  
  let taskId = null;
  
  try {
    const response = await axios.post(`${BASE_URL}/veo/generate`, requestBody, {
      headers: {
        'Authorization': `Bearer ${KIE_API_KEY}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('\n‚úÖ –û—Ç–≤–µ—Ç API:');
    console.log(JSON.stringify(response.data, null, 2));
    
    if (response.data.data && response.data.data.taskId) {
      taskId = response.data.data.taskId;
      console.log(`\nüìå Task ID: ${taskId}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏:', error.message);
    if (error.response) {
      console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
    }
    return;
  }
  
  if (!taskId) {
    console.log('‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω taskId');
    return;
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
  console.log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ó–ê–î–ê–ß–ò');
  console.log('‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π...');
  
  await new Promise(resolve => setTimeout(resolve, 10000));
  
  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã URL –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
  const statusUrls = [
    `${BASE_URL}/task/status/${taskId}`,
    `${BASE_URL}/veo/status/${taskId}`,
    `${BASE_URL}/tasks/${taskId}`,
    `${BASE_URL}/video/status/${taskId}`
  ];
  
  for (const url of statusUrls) {
    console.log(`\nüîç –ü—Ä–æ–±—É–µ–º URL: ${url}`);
    
    try {
      const statusResponse = await axios.get(url, {
        headers: {
          'Authorization': `Bearer ${KIE_API_KEY}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:');
      console.log(JSON.stringify(statusResponse.data, null, 2));
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
      if (statusResponse.data.data) {
        const data = statusResponse.data.data;
        console.log('\nüìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö:');
        console.log(`  - status: ${data.status || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
        console.log(`  - videoUrl: ${data.videoUrl || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
        console.log(`  - progress: ${data.progress || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
        console.log(`  - error: ${data.error || '–Ω–µ—Ç –æ—à–∏–±–æ–∫'}`);
      }
      
      break; // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
      
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${url}: ${error.message}`);
      if (error.response && error.response.status !== 404) {
        console.log('–î–µ—Ç–∞–ª–∏:', error.response.data);
      }
    }
  }
  
  // 4. –ñ–¥–µ–º –µ—â–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
  console.log('\n4Ô∏è‚É£ –ü–û–í–¢–û–†–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó 20 –°–ï–ö–£–ù–î');
  console.log('‚è≥ –ñ–¥–µ–º –µ—â–µ 20 —Å–µ–∫—É–Ω–¥...');
  
  await new Promise(resolve => setTimeout(resolve, 20000));
  
  // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –µ—â–µ —Ä–∞–∑
  for (const url of statusUrls) {
    try {
      const statusResponse = await axios.get(url, {
        headers: {
          'Authorization': `Bearer ${KIE_API_KEY}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log(`\n‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç ${url}:`);
      console.log(JSON.stringify(statusResponse.data, null, 2));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ—Ç–æ–≤–æ –ª–∏ –≤–∏–¥–µ–æ
      if (statusResponse.data.data) {
        const data = statusResponse.data.data;
        
        if (data.status === 'completed' && data.videoUrl) {
          console.log('\nüéâ –í–ò–î–ï–û –ì–û–¢–û–í–û!');
          console.log(`üìπ URL: ${data.videoUrl}`);
          console.log(`‚è±Ô∏è –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ~30 —Å–µ–∫—É–Ω–¥`);
          return;
        } else if (data.status === 'failed') {
          console.log('\n‚ùå –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–†–û–í–ê–õ–ò–õ–ê–°–¨');
          console.log(`–ü—Ä–∏—á–∏–Ω–∞: ${data.error || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
          return;
        } else {
          console.log(`\n‚è≥ –°—Ç–∞—Ç—É—Å: ${data.status || 'processing'}`);
          console.log('–í–∏–¥–µ–æ –≤—Å–µ –µ—â–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è...');
        }
      }
      
      break;
    } catch (error) {
      // –ú–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º 404 –æ—à–∏–±–∫–∏
      if (error.response && error.response.status !== 404) {
        console.log(`–û—à–∏–±–∫–∞: ${error.message}`);
      }
    }
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  console.log('\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–• API –ú–ï–¢–û–î–û–í');
  
  // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
  try {
    const tasksResponse = await axios.get(`${BASE_URL}/tasks`, {
      headers: {
        'Authorization': `Bearer ${KIE_API_KEY}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:');
    console.log(JSON.stringify(tasksResponse.data, null, 2));
  } catch (error) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á');
  }
  
  console.log('\n' + '=' * 50);
  console.log('üìä –ò–¢–û–ì–ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
  console.log('1. API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ');
  console.log('2. –ó–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è ‚úÖ');
  console.log(`3. Task ID –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è: ${taskId}`);
  console.log('4. –ù—É–∂–Ω–æ –≤—ã—è—Å–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞');
  console.log('5. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∂–¥–∞—Ç—å –¥–æ–ª—å—à–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
debugKieApi().catch(console.error);
