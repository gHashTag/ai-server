#!/usr/bin/env node

/**
 * ะขะตัั ะพะฑัะฐะฑะพัะบะธ GitHub webhook ะดะปั ัะพะทะดะฐะฝะธั ะทะฐะดะฐั ะฒ Dart AI
 * ะกะธะผัะปะธััะตั ัะพะทะดะฐะฝะธะต issue ะฒ GitHub ะธ ะตะณะพ ะพัะฟัะฐะฒะบั ะฒ Dart AI
 */

const express = require('express');
const axios = require('axios');

const app = express();
app.use(express.json());

// ะะฐัััะพะนะบะธ
const DART_AI_API_KEY = process.env.DART_AI_API_KEY;
const GITHUB_TOKEN = process.env.GITHUB_TOKEN;
const PORT = 3001;

console.log('๐ง ะะฐัััะพะนะบะฐ GitHub Webhook ัะตััะธัะพะฒะฐะฝะธั...');
console.log(`๐ Dart AI API Key: ${DART_AI_API_KEY ? 'โ ะฃััะฐะฝะพะฒะปะตะฝ' : 'โ ะััััััะฒัะตั'}`);
console.log(`๐ GitHub Token: ${GITHUB_TOKEN ? 'โ ะฃััะฐะฝะพะฒะปะตะฝ' : 'โ ะััััััะฒัะตั'}`);

/**
 * ะกะธะผัะปััะธั ัะพะทะดะฐะฝะธั ะทะฐะดะฐัะธ ะฒ Dart AI ะธะท GitHub Issue
 * ะะพัะบะพะปัะบั API Dart AI ัะพะปัะบะพ ะดะปั ััะตะฝะธั, ะปะพะณะธััะตะผ ััะพ ะฑั ะดะตะปะฐะปะธ
 */
async function simulateCreateDartTask(issueData) {
    console.log('\n๐ ะกะธะผัะปััะธั ัะพะทะดะฐะฝะธั ะทะฐะดะฐัะธ ะฒ Dart AI:');
    console.log({
        title: issueData.title,
        description: issueData.body || 'ะะฟะธัะฐะฝะธะต ะพััััััะฒัะตั',
        labels: issueData.labels?.map(l => l.name) || [],
        assignees: issueData.assignees?.map(a => a.login) || [],
        github_issue_url: issueData.html_url,
        github_issue_number: issueData.number,
        status: 'open'
    });
    
    // ะ ัะตะฐะปัะฝะพััะธ ะทะดะตัั ะฑั ะฑัะป ะทะฐะฟัะพั ะบ API Dart AI
    // ะะพ API ัะพะปัะบะพ ะดะปั ััะตะฝะธั, ะฟะพััะพะผั ะฒะพะทะฒัะฐัะฐะตะผ mock
    return {
        id: `dart_task_${Date.now()}`,
        title: issueData.title,
        status: 'created_from_github',
        github_sync: true
    };
}

/**
 * ะะฑัะฐะฑะพััะธะบ GitHub webhook ะดะปั issues
 */
app.post('/webhook/github', async (req, res) => {
    try {
        const { action, issue, repository } = req.body;
        
        console.log(`\n๐ฏ GitHub Webhook ะฟะพะปััะตะฝ: ${action} ะดะปั issue #${issue?.number}`);
        
        if (action === 'opened' || action === 'edited') {
            // ะกะธะผัะปะธััะตะผ ัะพะทะดะฐะฝะธะต/ะพะฑะฝะพะฒะปะตะฝะธะต ะทะฐะดะฐัะธ ะฒ Dart AI
            const dartTask = await simulateCreateDartTask(issue);
            
            console.log('โ ะะฐะดะฐัะฐ ัะธะฝััะพะฝะธะทะธัะพะฒะฐะฝะฐ ะฒ Dart AI:', dartTask);
            
            // ะะดะตัั ะผะพะถะฝะพ ะดะพะฑะฐะฒะธัั ะบะพะผะผะตะฝัะฐัะธะน ะบ GitHub issue ัะพ ัััะปะบะพะน ะฝะฐ Dart AI
            console.log('๐ฌ ะะพะถะฝะพ ะดะพะฑะฐะฒะธัั ะบะพะผะผะตะฝัะฐัะธะน ะฒ GitHub issue ัะพ ัััะปะบะพะน ะฝะฐ Dart AI ะทะฐะดะฐัั');
            
            res.json({ success: true, dartTask });
        } else {
            console.log(`โน๏ธ  ะะตะนััะฒะธะต ${action} ะฝะต ะพะฑัะฐะฑะฐััะฒะฐะตััั`);
            res.json({ success: true, message: 'Action not handled' });
        }
        
    } catch (error) {
        console.error('โ ะัะธะฑะบะฐ ะพะฑัะฐะฑะพัะบะธ webhook:', error.message);
        res.status(500).json({ error: error.message });
    }
});

/**
 * ะขะตััะพะฒัะน endpoint ะดะปั ัะธะผัะปััะธะธ GitHub issue
 */
app.post('/test/create-issue', async (req, res) => {
    const testIssue = {
        number: Math.floor(Math.random() * 1000) + 100,
        title: req.body.title || 'ะขะตััะพะฒะฐั ะทะฐะดะฐัะฐ ะธะท GitHub',
        body: req.body.body || 'ะะฟะธัะฐะฝะธะต ัะตััะพะฒะพะน ะทะฐะดะฐัะธ',
        html_url: `https://github.com/test/repo/issues/${Math.floor(Math.random() * 1000)}`,
        labels: req.body.labels || [],
        assignees: req.body.assignees || [],
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
    };
    
    console.log('\n๐งช ะกะพะทะดะฐะฝะธะต ัะตััะพะฒะพะณะพ GitHub issue...');
    
    // ะกะธะผัะปะธััะตะผ ะพัะฟัะฐะฒะบั webhook
    const webhookPayload = {
        action: 'opened',
        issue: testIssue,
        repository: {
            name: 'ai-server',
            full_name: 'gHashTag/ai-server'
        }
    };
    
    try {
        const response = await axios.post(
            `http://localhost:${PORT}/webhook/github`,
            webhookPayload,
            { headers: { 'Content-Type': 'application/json' } }
        );
        
        res.json({
            success: true,
            testIssue,
            webhookResponse: response.data
        });
        
    } catch (error) {
        console.error('โ ะัะธะฑะบะฐ ัะตััะฐ:', error.message);
        res.status(500).json({ error: error.message });
    }
});

/**
 * ะัะพะฒะตัะบะฐ ััะฐัััะฐ ะธะฝัะตะณัะฐัะธะธ
 */
app.get('/status', (req, res) => {
    res.json({
        status: 'running',
        dartAI: DART_AI_API_KEY ? 'configured' : 'not_configured',
        github: GITHUB_TOKEN ? 'configured' : 'not_configured',
        endpoints: [
            'POST /webhook/github - GitHub webhook handler',
            'POST /test/create-issue - Test issue creation',
            'GET /status - This status endpoint'
        ]
    });
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(PORT, () => {
    console.log(`\n๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
    console.log(`๐ ะะพัััะฟะฝัะต endpoints:`);
    console.log(`   GET  http://localhost:${PORT}/status`);
    console.log(`   POST http://localhost:${PORT}/webhook/github`);
    console.log(`   POST http://localhost:${PORT}/test/create-issue`);
    console.log(`\n๐งช ะะปั ัะตััะธัะพะฒะฐะฝะธั ะฒัะฟะพะปะฝะธัะต:`);
    console.log(`   curl -X POST http://localhost:${PORT}/test/create-issue -H "Content-Type: application/json" -d '{"title": "ะขะตัั ะธะท curl"}'`);
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\n๐ ะะฐะฒะตััะตะฝะธะต ัะฐะฑะพัั ัะตัะฒะตัะฐ...');
    process.exit(0);
});