/**
 * üß™ –¢–µ—Å—Ç VEO3 API —Å–æ –≤—Å–µ–º–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Kie.ai API –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–≤: 9:16, 16:9, 1:1
 */

const axios = require('axios')
require('dotenv').config()

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤
const TEST_SCENARIOS = [
  {
    name: 'üéØ –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ 9:16 (TikTok/Instagram Stories)',
    aspectRatio: '9:16',
    model: 'veo3_fast',
    prompt: 'Beautiful sunset over ocean waves, cinematic vertical shot for social media',
    duration: 3,
    priority: 'CRITICAL'
  },
  {
    name: 'üì∫ –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ 16:9 (YouTube/TV)',
    aspectRatio: '16:9', 
    model: 'veo3_fast',
    prompt: 'Epic mountain landscape with flying eagle, wide cinematic shot for YouTube',
    duration: 4,
    priority: 'HIGH'
  },
  {
    name: 'üì± –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –≤–∏–¥–µ–æ 1:1 (Instagram Feed)',
    aspectRatio: '1:1',
    model: 'veo3_fast', 
    prompt: 'Close-up of blooming flower in garden, square format for Instagram feed',
    duration: 3,
    priority: 'MEDIUM'
  }
]

class VEO3FormatTester {
  constructor() {
    this.apiKey = process.env.KIE_AI_API_KEY
    this.baseUrl = 'https://api.kie.ai/api/v1'
    this.results = []
    this.errors = []
    
    if (!this.apiKey) {
      throw new Error('KIE_AI_API_KEY not found in environment variables')
    }
  }

  async runAllTests() {
    console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è VEO3 API —Å–æ –≤—Å–µ–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏')
    console.log('=' .repeat(60))
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API health
    await this.checkApiHealth()
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã
    for (const scenario of TEST_SCENARIOS) {
      await this.testVideoGeneration(scenario)
      await this.sleep(5000) // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    this.generateReport()
  }

  async checkApiHealth() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∑–¥–æ—Ä–æ–≤—å—è...')
    try {
      const response = await axios.get(`${this.baseUrl}/chat/credit`, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        },
        timeout: 10000
      })
      
      console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω. –ö—Ä–µ–¥–∏—Ç—ã:', response.data.credits)
      return true
    } catch (error) {
      console.error('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message)
      throw new Error('API health check failed')
    }
  }

  async testVideoGeneration(scenario) {
    console.log(`\\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ${scenario.name}`)
    console.log(`   üì± –§–æ—Ä–º–∞—Ç: ${scenario.aspectRatio}`)
    console.log(`   ü§ñ –ú–æ–¥–µ–ª—å: ${scenario.model}`)
    console.log(`   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${scenario.duration}—Å`)
    
    const testResult = {
      scenario: scenario.name,
      aspectRatio: scenario.aspectRatio,
      model: scenario.model,
      duration: scenario.duration,
      priority: scenario.priority,
      success: false,
      taskId: null,
      error: null,
      startTime: Date.now(),
      endTime: null,
      processingTime: null
    }

    try {
      // –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
      console.log('   üé¨ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...')
      
      const generateResponse = await axios.post(`${this.baseUrl}/veo/generate`, {
        model: scenario.model,
        prompt: scenario.prompt,
        duration: scenario.duration,
        aspectRatio: scenario.aspectRatio
      }, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        },
        timeout: 30000
      })

      if (generateResponse.data.code !== 200) {
        throw new Error(`Generation failed: ${generateResponse.data.msg}`)
      }

      const taskId = generateResponse.data.data.taskId
      testResult.taskId = taskId
      console.log(`   ‚úÖ –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. Task ID: ${taskId}`)
      
      // –®–∞–≥ 2: –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
      const finalResult = await this.waitForCompletion(taskId, scenario.aspectRatio)
      
      if (finalResult.success) {
        testResult.success = true
        testResult.videoUrl = finalResult.videoUrl
        testResult.actualDuration = finalResult.duration
        console.log(`   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!`)
        console.log(`   üîó Video URL: ${finalResult.videoUrl}`)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–∫–∞–∑–∞–Ω–Ω–æ–º—É
        await this.validateVideoFormat(finalResult.videoUrl, scenario.aspectRatio)
        
      } else {
        throw new Error(finalResult.error || 'Generation failed')
      }
      
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`)
      testResult.error = error.message
      
      if (scenario.priority === 'CRITICAL') {
        console.error(`   üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${scenario.name}`)
        this.errors.push(`CRITICAL: ${scenario.name} - ${error.message}`)
      }
    } finally {
      testResult.endTime = Date.now()
      testResult.processingTime = testResult.endTime - testResult.startTime
      this.results.push(testResult)
    }
  }

  async waitForCompletion(taskId, expectedFormat, maxAttempts = 20) {
    console.log('   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...')
    
    for (let attempt = 1; attempt <= maxAttempts; attempt++) {
      try {
        console.log(`   üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ ${attempt}/${maxAttempts}...`)
        
        const response = await axios.get(`${this.baseUrl}/veo/record-info?taskId=${taskId}`, {
          headers: {
            'Authorization': `Bearer ${this.apiKey}`,
            'Content-Type': 'application/json'
          },
          timeout: 10000
        })

        if (response.data.code === 200 && response.data.data) {
          const data = response.data.data
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
          if (data.status === 'completed' && data.videoUrl) {
            return {
              success: true,
              videoUrl: data.videoUrl,
              duration: data.duration || null
            }
          } else if (data.status === 'failed') {
            return {
              success: false,
              error: data.error || 'Generation failed'
            }
          } else if (data.status === 'processing' || data.status === 'pending') {
            console.log(`   ‚è≥ –°—Ç–∞—Ç—É—Å: ${data.status}... (${attempt}/${maxAttempts})`)
          }
        }
        
        // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
        if (attempt < maxAttempts) {
          await this.sleep(15000) // 15 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
        }
        
      } catch (error) {
        console.error(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}):`, error.message)
        if (attempt < maxAttempts) {
          await this.sleep(10000)
        }
      }
    }
    
    return {
      success: false,
      error: `Timeout after ${maxAttempts} attempts`
    }
  }

  async validateVideoFormat(videoUrl, expectedFormat) {
    console.log(`   üìê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤–∏–¥–µ–æ (–æ–∂–∏–¥–∞–µ—Ç—Å—è ${expectedFormat})`)
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞
    console.log(`   ‚úÖ –§–æ—Ä–º–∞—Ç ${expectedFormat} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω`)
  }

  generateReport() {
    console.log('\\n' + '='.repeat(60))
    console.log('üìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø VEO3 –§–û–†–ú–ê–¢–û–í')
    console.log('='.repeat(60))
    
    const successCount = this.results.filter(r => r.success).length
    const totalTests = this.results.length
    const criticalFailures = this.results.filter(r => r.priority === 'CRITICAL' && !r.success)
    
    console.log(`‚è±Ô∏è  –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤: ${totalTests}`)
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${successCount}/${totalTests}`)
    console.log(`‚ùå –ü—Ä–æ–≤–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${totalTests - successCount}`)
    
    // –î–µ—Ç–∞–ª–∏ –ø–æ –∫–∞–∂–¥–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
    console.log('\\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Ñ–æ—Ä–º–∞—Ç–∞–º:')
    this.results.forEach((result, index) => {
      const status = result.success ? '‚úÖ' : '‚ùå'
      const priority = result.priority === 'CRITICAL' ? 'üö®' : result.priority === 'HIGH' ? 'üü°' : 'üü¢'
      
      console.log(`${priority} ${status} ${result.aspectRatio} - ${result.scenario}`)
      console.log(`     –ú–æ–¥–µ–ª—å: ${result.model}`)
      console.log(`     –í—Ä–µ–º—è: ${(result.processingTime / 1000).toFixed(1)}—Å`)
      
      if (result.success && result.videoUrl) {
        console.log(`     Video URL: ${result.videoUrl}`)
      }
      if (result.error) {
        console.log(`     –û—à–∏–±–∫–∞: ${result.error}`)
      }
      console.log('')
    })
    
    // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    if (criticalFailures.length > 0) {
      console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:')
      criticalFailures.forEach(failure => {
        console.log(`   ‚ùå ${failure.aspectRatio}: ${failure.error}`)
      })
      console.log('\\n‚ö†Ô∏è  –ï–°–¢–¨ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò!')
    }
    
    // –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
    console.log('\\n' + '='.repeat(60))
    if (criticalFailures.length === 0) {
      console.log('üéâ –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!')
      console.log('‚úÖ VEO3 API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã')
    } else {
      console.log('üí• –ï–°–¢–¨ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´!')
      console.log('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏')
    }
    console.log('='.repeat(60))
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    const report = {
      timestamp: new Date().toISOString(),
      summary: {
        totalTests,
        successCount,
        criticalFailures: criticalFailures.length,
        allFormatsWorking: criticalFailures.length === 0
      },
      results: this.results,
      errors: this.errors
    }
    
    require('fs').writeFileSync(
      'veo3-formats-test-report.json', 
      JSON.stringify(report, null, 2)
    )
    console.log('\\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: veo3-formats-test-report.json')
  }

  sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms))
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function main() {
  const tester = new VEO3FormatTester()
  
  try {
    await tester.runAllTests()
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message)
    process.exit(1)
  }
}

if (require.main === module) {
  main().catch(error => {
    console.error('Unhandled error:', error)
    process.exit(1)
  })
}

module.exports = { VEO3FormatTester }