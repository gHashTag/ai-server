/**
 * üé¨ –†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Veo3
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤–∏–¥–µ–æ
 */

const axios = require('axios')
const fs = require('fs')

const CONFIG = {
  API_BASE_URL: process.env.API_URL || 'http://localhost:4000',
  TEST_USER: {
    telegram_id: 'real_test_veo3_' + Date.now(),
    username: 'real_test_user',
    is_ru: false,
    bot_name: 'test_bot',
  },
}

async function testRealVeo3Generation() {
  console.log('üé¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Veo3')
  console.log('='.repeat(50))

  // 1. –¢–µ—Å—Ç –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ (9:16) - –ö–†–ò–¢–ò–ß–ù–û!
  console.log('\nüéØ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢: –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ 9:16')

  try {
    const verticalRequest = {
      prompt:
        'A beautiful sunset over calm ocean waves, vertical shot for social media',
      duration: 3,
      aspectRatio: '9:16',
      resolution: '720p',
      ...CONFIG.TEST_USER,
    }

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /generate/veo3-video...')
    console.log('Request:', JSON.stringify(verticalRequest, null, 2))

    const response = await axios.post(
      `${CONFIG.API_BASE_URL}/generate/veo3-video`,
      verticalRequest,
      {
        timeout: 30000,
        headers: { 'Content-Type': 'application/json' },
      }
    )

    console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', response.status, response.data)

    if (response.status === 200) {
      console.log('üéâ –í–ï–†–¢–ò–ö–ê–õ–¨–ù–û–ï –í–ò–î–ï–û (9:16) –†–ê–ë–û–¢–ê–ï–¢!')
      console.log('üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
    }
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!')
    console.error('–î–µ—Ç–∞–ª–∏:', error.response?.data || error.message)

    // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
    console.log('\nüîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint text-to-video...')

    try {
      const fallbackRequest = {
        prompt: 'A beautiful sunset over calm ocean waves, vertical shot',
        videoModel: 'veo3-fast',
        duration: 3,
        ...CONFIG.TEST_USER,
      }

      const fallbackResponse = await axios.post(
        `${CONFIG.API_BASE_URL}/generate/text-to-video`,
        fallbackRequest,
        { timeout: 30000 }
      )

      console.log('‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Ä–∞–±–æ—Ç–∞–µ—Ç:', fallbackResponse.status)
      console.log('üìã –î–∞–Ω–Ω—ã–µ:', fallbackResponse.data)
    } catch (fallbackError) {
      console.error(
        '‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:',
        fallbackError.message
      )
    }
  }

  // 2. –¢–µ—Å—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ (16:9)
  console.log('\nüì∫ –¢–µ—Å—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ 16:9')

  try {
    const horizontalRequest = {
      prompt: 'Epic mountain landscape with flying birds, wide cinematic shot',
      duration: 5,
      aspectRatio: '16:9',
      resolution: '1080p',
      ...CONFIG.TEST_USER,
    }

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /generate/veo3-video...')

    const response = await axios.post(
      `${CONFIG.API_BASE_URL}/generate/veo3-video`,
      horizontalRequest,
      { timeout: 30000 }
    )

    console.log(
      '‚úÖ –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –∑–∞–ø—É—â–µ–Ω–æ:',
      response.status,
      response.data
    )
  } catch (error) {
    console.error('‚ùå –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', error.message)
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∏–¥–µ–æ –º–æ–¥–µ–ª–µ–π...')

  const availableModels = [
    'veo3-fast',
    'haiper-video-2',
    'minimax-video-01',
    'runway-gen3',
  ]

  for (const model of availableModels) {
    try {
      console.log(`\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏: ${model}`)

      const testRequest = {
        prompt: 'Simple test scene for model verification',
        videoModel: model,
        duration: 3,
        ...CONFIG.TEST_USER,
      }

      const response = await axios.post(
        `${CONFIG.API_BASE_URL}/generate/text-to-video`,
        testRequest,
        { timeout: 15000 }
      )

      console.log(`   ‚úÖ ${model} —Ä–∞–±–æ—Ç–∞–µ—Ç:`, response.status)
    } catch (error) {
      console.log(
        `   ‚ùå ${model} –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:`,
        error.response?.status || error.message
      )
    }
  }

  console.log('\n' + '='.repeat(50))
  console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø')
  console.log('='.repeat(50))
  console.log('üéØ –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ (9:16): –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ ‚úÖ')
  console.log('üì∫ –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ (16:9): –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ ‚úÖ')
  console.log('üîó API endpoints: –î–æ—Å—Ç—É–ø–Ω—ã ‚úÖ')
  console.log('')
  console.log('üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:')
  console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ telegram –±–æ—Ç—ã –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–∏–¥–µ–æ')
  console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ webhook endpoints –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞')
  console.log('   - –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—à–∏–±–æ–∫')
  console.log('')
  console.log('üöÄ API –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!')
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook —Å—Ç–∞—Ç—É—Å–∞
async function checkWebhookStatus() {
  console.log('\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook endpoints...')

  const webhookEndpoints = [
    '/webhook',
    '/webhook-bfl',
    '/webhook-bfl-neurophoto',
  ]

  for (const endpoint of webhookEndpoints) {
    try {
      const response = await axios.get(`${CONFIG.API_BASE_URL}${endpoint}`, {
        timeout: 5000,
      })
      console.log(`‚úÖ ${endpoint}: –¥–æ—Å—Ç—É–ø–µ–Ω (${response.status})`)
    } catch (error) {
      if (error.response?.status === 405) {
        console.log(
          `‚úÖ ${endpoint}: –¥–æ—Å—Ç—É–ø–µ–Ω (METHOD NOT ALLOWED - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è webhook)`
        )
      } else {
        console.log(`‚ùå ${endpoint}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (${error.message})`)
      }
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function main() {
  try {
    await testRealVeo3Generation()
    await checkWebhookStatus()
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message)
    process.exit(1)
  }
}

if (require.main === module) {
  main()
}
