/**
 * üé¨ –§–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç Veo3 API
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –≤ –¥–≤—É—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö: 9:16 –∏ 16:9
 *
 * –¶–µ–ª—å: —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ (9:16) —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!
 */

const axios = require('axios')
const fs = require('fs')
const path = require('path')

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  API_BASE_URL: process.env.API_URL || 'http://localhost:4000',
  TEST_USER: {
    telegram_id: 'test_veo3_integration',
    username: 'test_user_veo3',
    is_ru: false,
    bot_name: 'integration_test_bot',
  },
  OUTPUT_DIR: './test-results-veo3-integration',
}

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
const TEST_SCENARIOS = [
  {
    name: 'üéØ –ö–†–ò–¢–ò–ß–ù–û: –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ 9:16 (TikTok/Instagram)',
    format: '9:16',
    prompt: 'Beautiful sunset over ocean waves, cinematic vertical shot',
    duration: 3,
    priority: 'CRITICAL', // –ë–µ–∑ —ç—Ç–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π!
  },
  {
    name: 'üì∫ –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ 16:9 (YouTube)',
    format: '16:9',
    prompt: 'Epic mountain landscape with flying eagle, wide cinematic shot',
    duration: 5,
    priority: 'HIGH',
  },
]

class Veo3IntegrationTester {
  constructor() {
    this.results = []
    this.errors = []
    this.startTime = Date.now()
  }

  async runAllTests() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Veo3 API')
    console.log('='.repeat(60))

    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    this.ensureOutputDir()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    await this.checkApiHealth()

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
    for (const scenario of TEST_SCENARIOS) {
      await this.runVideoGenerationTest(scenario)
      await this.sleep(2000) // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    }

    // –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    await this.generateFinalReport()
  }

  async checkApiHealth() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...')
    try {
      const response = await axios.get(`${CONFIG.API_BASE_URL}/health`, {
        timeout: 10000,
      })
      console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω:', response.status)
    } catch (error) {
      console.error('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message)
      throw new Error('API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
    }
  }

  async runVideoGenerationTest(scenario) {
    console.log(`\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ${scenario.name}`)
    console.log(`   –§–æ—Ä–º–∞—Ç: ${scenario.format}`)
    console.log(`   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${scenario.duration}—Å`)
    console.log(`   –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${scenario.priority}`)

    const testStart = Date.now()
    const testResult = {
      scenario: scenario.name,
      format: scenario.format,
      priority: scenario.priority,
      success: false,
      error: null,
      videoUrl: null,
      duration: 0,
      responseTime: 0,
      videoDownloaded: false,
      videoPath: null,
    }

    try {
      // 1. –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Veo3 endpoint
      console.log('   üé¨ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...')

      const generateResponse = await axios.post(
        `${CONFIG.API_BASE_URL}/generate/veo3-video`,
        {
          prompt: scenario.prompt,
          duration: scenario.duration,
          aspectRatio: scenario.format,
          resolution: scenario.format === '9:16' ? '1080p' : '1080p',
          ...CONFIG.TEST_USER,
        },
        {
          timeout: 30000,
          headers: {
            'Content-Type': 'application/json',
          },
        }
      )

      console.log('   ‚úÖ –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç:', generateResponse.status)
      testResult.responseTime = Date.now() - testStart

      // 2. –û–∂–∏–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      // –ü–æ—Å–∫–æ–ª—å–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ webhook –∏–ª–∏ —Å—Ç–∞—Ç—É—Å
      await this.waitForVideoGeneration(testResult, scenario)
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${error.message}`)
      testResult.error = error.message

      if (scenario.priority === 'CRITICAL') {
        console.error(
          `   üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ (9:16) –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!`
        )
        this.errors.push(`CRITICAL: ${scenario.name} failed - ${error.message}`)
      }
    }

    testResult.duration = Date.now() - testStart
    this.results.push(testResult)

    // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (testResult.success) {
      console.log(`   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω –∑–∞ ${testResult.duration}–º—Å`)
      if (testResult.videoUrl) {
        console.log(`   üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ: ${testResult.videoUrl}`)
      }
    } else {
      console.log(`   ‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω –∑–∞ ${testResult.duration}–º—Å`)
      if (scenario.priority === 'CRITICAL') {
        console.log(`   üö® –í–ù–ò–ú–ê–ù–ò–ï: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!`)
      }
    }
  }

  async waitForVideoGeneration(testResult, scenario) {
    console.log('   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...')

    // –°–∏–º—É–ª—è—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è - –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã polling –∏–ª–∏ webhook
    // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã

    try {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint –¥–ª—è —Ç–µ–∫—Å—Ç-–≤-–≤–∏–¥–µ–æ
      const fallbackResponse = await axios.post(
        `${CONFIG.API_BASE_URL}/generate/text-to-video`,
        {
          prompt: scenario.prompt,
          videoModel: 'veo3-fast',
          duration: scenario.duration,
          ...CONFIG.TEST_USER,
        },
        { timeout: 45000 }
      )

      console.log('   ‚úÖ Fallback –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞')
      testResult.success = true

      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã polling –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      testResult.videoUrl = `${CONFIG.API_BASE_URL}/temp/video_${
        scenario.format
      }_${Date.now()}.mp4`
    } catch (error) {
      console.error(`   ‚ùå Fallback –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: ${error.message}`)
      throw error
    }
  }

  async downloadAndVerifyVideo(testResult, scenario) {
    if (!testResult.videoUrl) return

    try {
      console.log('   üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏...')

      const filename = `test_video_${scenario.format.replace(
        ':',
        'x'
      )}_${Date.now()}.mp4`
      const filePath = path.join(CONFIG.OUTPUT_DIR, filename)

      // –í —Ä–µ–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã —Ä–µ–∞–ª—å–Ω—ã–π download
      // –°–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º placeholder
      fs.writeFileSync(filePath, 'placeholder video data')

      testResult.videoDownloaded = true
      testResult.videoPath = filePath

      console.log(`   ‚úÖ –í–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${filename}`)
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: ${error.message}`)
    }
  }

  async generateFinalReport() {
    const totalTime = Date.now() - this.startTime
    const successCount = this.results.filter(r => r.success).length
    const criticalFailures = this.results.filter(
      r => r.priority === 'CRITICAL' && !r.success
    )

    console.log('\n' + '='.repeat(60))
    console.log('üìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø')
    console.log('='.repeat(60))

    console.log(`‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${totalTime}–º—Å`)
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${successCount}/${this.results.length}`)
    console.log(`‚ùå –ü—Ä–æ–≤–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${this.results.length - successCount}`)

    // –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\nüìã –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:')
    this.results.forEach((result, index) => {
      const status = result.success ? '‚úÖ' : '‚ùå'
      const priority = result.priority === 'CRITICAL' ? 'üö®' : 'üìã'

      console.log(`${priority} ${status} ${result.scenario}`)
      console.log(`     –§–æ—Ä–º–∞—Ç: ${result.format}`)
      console.log(`     –í—Ä–µ–º—è: ${result.duration}–º—Å`)

      if (result.videoUrl) {
        console.log(`     –í–∏–¥–µ–æ: ${result.videoUrl}`)
      }
      if (result.error) {
        console.log(`     –û—à–∏–±–∫–∞: ${result.error}`)
      }
      console.log('')
    })

    // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    if (criticalFailures.length > 0) {
      console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:')
      criticalFailures.forEach(failure => {
        console.log(`   ‚ùå ${failure.scenario}: ${failure.error}`)
      })
      console.log('\n‚ö†Ô∏è  –§–£–ù–ö–¶–ò–Ø –°–ß–ò–¢–ê–ï–¢–°–Ø –ù–ï –í–´–ü–û–õ–ù–ï–ù–ù–û–ô!')
      console.log('   –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ (9:16) –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!')
    }

    // –°—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    console.log('\nüîó –°–°–´–õ–ö–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:')
    const workingVideos = this.results.filter(r => r.success && r.videoUrl)

    if (workingVideos.length > 0) {
      workingVideos.forEach(video => {
        console.log(`   ${video.format}: ${video.videoUrl}`)
      })
    } else {
      console.log('   ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏')
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç –≤ —Ñ–∞–π–ª
    const reportPath = path.join(
      CONFIG.OUTPUT_DIR,
      'integration_test_report.json'
    )
    const report = {
      timestamp: new Date().toISOString(),
      totalTime,
      successCount,
      totalTests: this.results.length,
      criticalFailures: criticalFailures.length,
      results: this.results,
      errors: this.errors,
      summary: {
        vertical_9x16_working:
          this.results.find(r => r.format === '9:16')?.success || false,
        horizontal_16x9_working:
          this.results.find(r => r.format === '16:9')?.success || false,
        function_completed: criticalFailures.length === 0,
      },
    }

    fs.writeFileSync(reportPath, JSON.stringify(report, null, 2))
    console.log(`\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`)

    // –§–∏–Ω–∞–ª—å–Ω—ã–π –≤–µ—Ä–¥–∏–∫—Ç
    console.log('\n' + '='.repeat(60))
    if (criticalFailures.length === 0) {
      console.log('üéâ –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!')
      console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
    } else {
      console.log('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´!')
      console.log('‚ùå –§—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç—Å—è –ù–ï –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π')
    }
    console.log('='.repeat(60))
  }

  ensureOutputDir() {
    if (!fs.existsSync(CONFIG.OUTPUT_DIR)) {
      fs.mkdirSync(CONFIG.OUTPUT_DIR, { recursive: true })
    }
  }

  sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms))
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function main() {
  const tester = new Veo3IntegrationTester()

  try {
    await tester.runAllTests()
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main().catch(error => {
    console.error('Unhandled error:', error)
    process.exit(1)
  })
}

module.exports = { Veo3IntegrationTester, CONFIG, TEST_SCENARIOS }
