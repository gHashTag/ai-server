/**
 * üóÑÔ∏è –¢–ï–°–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–• –†–ò–õ–ó
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ
 */

import { InstagramContentAgentDB } from './src/core/instagram/database-v2'

async function testDatabaseReels() {
  console.log('üóÑÔ∏è === –¢–ï–°–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–• –†–ò–õ–ó ===\n')

  try {
    const db = new InstagramContentAgentDB()
    
    // –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    console.log('üîå –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    const connectionTest = await db.testConnection()
    if (!connectionTest) {
      throw new Error('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ')

    // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ reels_analysis
    console.log('\nüìä –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ reels_analysis...')
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const client = (db as any).pool
    const pool = await client.connect()
    
    try {
      // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∏–ª–∑
      const countResult = await pool.query(`
        SELECT COUNT(*) as total_reels,
               COUNT(DISTINCT comp_username) as unique_users,
               MAX(created_at) as last_update,
               MIN(created_at) as first_record
        FROM reels_analysis
      `)
      
      const stats = countResult.rows[0]
      console.log('üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
      console.log(`   üìπ –í—Å–µ–≥–æ —Ä–∏–ª–∑: ${stats.total_reels}`)
      console.log(`   üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.unique_users}`)
      console.log(`   üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${stats.last_update ? new Date(stats.last_update).toLocaleString() : 'N/A'}`)
      console.log(`   üóìÔ∏è –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: ${stats.first_record ? new Date(stats.first_record).toLocaleString() : 'N/A'}`)

      // –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ä–∏–ª–∑
      console.log('\nüëë –¢–µ—Å—Ç 3: –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ä–∏–ª–∑...')
      const topUsersResult = await pool.query(`
        SELECT comp_username, 
               COUNT(*) as reels_count,
               AVG(views_count) as avg_views,
               AVG(likes_count) as avg_likes,
               MAX(views_count) as max_views
        FROM reels_analysis 
        GROUP BY comp_username 
        ORDER BY reels_count DESC 
        LIMIT 10
      `)

      topUsersResult.rows.forEach((user, index) => {
        console.log(`${index + 1}. ${user.comp_username}:`)
        console.log(`   üìπ –†–∏–ª–∑: ${user.reels_count}`)
        console.log(`   üëÄ –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${user.avg_views ? Math.round(user.avg_views).toLocaleString() : 'N/A'}`)
        console.log(`   üëç –°—Ä–µ–¥–Ω–∏–µ –ª–∞–π–∫–∏: ${user.avg_likes ? Math.round(user.avg_likes).toLocaleString() : 'N/A'}`)
        console.log(`   üèÜ –ú–∞–∫—Å –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${user.max_views ? user.max_views.toLocaleString() : 'N/A'}`)
      })

      // –¢–æ–ø —Ä–∏–ª–∑ –ø–æ engagement
      console.log('\nüî• –¢–µ—Å—Ç 4: –¢–æ–ø —Ä–∏–ª–∑ –ø–æ engagement...')
      const topReelsResult = await pool.query(`
        SELECT comp_username,
               reel_id,
               ig_reel_url,
               views_count,
               likes_count,
               comments_count,
               (likes_count + comments_count) as engagement,
               CASE 
                 WHEN views_count > 0 THEN 
                   ROUND(((likes_count + comments_count)::numeric / views_count::numeric) * 100, 2)
                 ELSE 0 
               END as engagement_rate,
               caption,
               created_at_instagram
        FROM reels_analysis 
        WHERE views_count > 0 
        ORDER BY engagement DESC 
        LIMIT 5
      `)

      topReelsResult.rows.forEach((reel, index) => {
        console.log(`\n${index + 1}. ${reel.comp_username} - ${reel.engagement.toLocaleString()} engagement`)
        console.log(`   üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${reel.views_count ? reel.views_count.toLocaleString() : 'N/A'}`)
        console.log(`   üëç –õ–∞–π–∫–∏: ${reel.likes_count ? reel.likes_count.toLocaleString() : 'N/A'}`)
        console.log(`   üí¨ –ö–æ–º–µ–Ω—Ç—ã: ${reel.comments_count ? reel.comments_count.toLocaleString() : 'N/A'}`)
        console.log(`   üìä Engagement Rate: ${reel.engagement_rate}%`)
        console.log(`   üîó URL: ${reel.ig_reel_url || 'N/A'}`)
        console.log(`   üìÖ –î–∞—Ç–∞: ${reel.created_at_instagram ? new Date(reel.created_at_instagram).toLocaleDateString() : 'N/A'}`)
        if (reel.caption) {
          const shortCaption = reel.caption.length > 80 ? reel.caption.substring(0, 80) + '...' : reel.caption
          console.log(`   üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${shortCaption}`)
        }
      })

      // –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–Ω—è–º
      console.log('\nüìÖ –¢–µ—Å—Ç 5: –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–Ω—è–º...')
      const activityResult = await pool.query(`
        SELECT DATE(created_at_instagram) as date,
               COUNT(*) as reels_count,
               AVG(views_count) as avg_views,
               SUM(likes_count) as total_likes
        FROM reels_analysis 
        WHERE created_at_instagram >= NOW() - INTERVAL '30 days'
        GROUP BY DATE(created_at_instagram)
        ORDER BY date DESC
        LIMIT 10
      `)

      console.log('üóìÔ∏è –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏:')
      activityResult.rows.forEach(day => {
        console.log(`   ${day.date}: ${day.reels_count} —Ä–∏–ª–∑, ${day.avg_views ? Math.round(day.avg_views).toLocaleString() : 'N/A'} —Å—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã`)
      })

      // –ü—Ä–æ–≤–µ—Ä–∏–º —Ñ—É–Ω–∫—Ü–∏—é –∞–Ω–∞–ª–∏–∑–∞ –∏–∑ –Ω–∞—à–µ–≥–æ –∫–æ–¥–∞
      console.log('\nüîç –¢–µ—Å—Ç 6: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ getTopReels...')
      const testUsernames = topUsersResult.rows.slice(0, 3).map(user => user.comp_username)
      
      for (const username of testUsernames) {
        try {
          const topReels = await db.getTopReels(username, 3)
          console.log(`\nüë§ ${username}: ${topReels.length} —Ç–æ–ø —Ä–∏–ª–∑`)
          topReels.forEach((reel, idx) => {
            console.log(`   ${idx + 1}. Views: ${reel.views_count?.toLocaleString()}, Likes: ${reel.likes_count?.toLocaleString()}`)
          })
        } catch (error) {
          console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${username}:`, error.message)
        }
      }

    } finally {
      pool.release()
    }

    console.log('\nüéâ === –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===')
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç!')
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ —Ä–∏–ª–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç!')
    console.log('‚úÖ –§—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–±–æ—Ç–∞—é—Ç!')
    console.log('')
    console.log('üî• –í–´–í–û–î: –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏–ª–∑ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!')
    console.log('üìä –ü—Ä–æ–±–ª–µ–º–∞ —Ç–æ–ª—å–∫–æ —Å –ª–∏–º–∏—Ç–∞–º–∏ RapidAPI, –Ω–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
    console.log('üí° –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
    
    if (error.message.includes('NEON_DATABASE_URL')) {
      console.log('üîß –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é NEON_DATABASE_URL')
    }
    
    if (error.message.includes('connection')) {
      console.log('üîß –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Neon')
    }

    throw error
  }
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ë–î
process.env.NEON_DATABASE_URL = process.env.NEON_DATABASE_URL || 'postgresql://neondb_owner:npg_5RWzh7CwrXxE@ep-delicate-block-a1l1lt0p-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require'

testDatabaseReels()
  .then(() => {
    console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
    process.exit(0)
  })
  .catch(error => {
    console.error('\nüí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–∞–ª–µ–Ω–æ:', error.message)
    process.exit(1)
  })