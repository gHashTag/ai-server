---
description: 
globs: 
alwaysApply: true
---
# Current Task: Refactor Balance Handling Logic

**Goal:** Ensure consistent balance checking, error handling, and user notification logic across all features that deduct or add stars/balance, following the pattern established for video operations.

**Decomposition:**

1.  **Identify Functions Interacting with Balance:**
    *   Search the codebase for functions that modify or check user balance (e.g., using `updateUserBalance`, `getUserBalance`, `processBalanceOperation`, `modeCosts`, `paymentAmount`, `newBalance`).
    *   Focus on generation services (`generate...`), Inngest functions (`modelTrainingV2`, `paymentProcessing`), controllers, etc.

2.  **Analyze Each Identified Function:**
    *   How is balance checked (centralized function vs. custom logic)?
    *   How are errors (insufficient funds, etc.) handled?
    *   Where/how is the user notified about errors?
    *   Where/how is the user notified about success (cost, new balance)?

3.  **Refactor to Match Pattern:**
    *   Use a centralized balance check function (`processBalanceOperation` or `processBalanceVideoOperation`).
    *   Ensure the balance check function does **not** use `ctx` or send messages; it should return `{ success: boolean, error?: string, ... }`.
    *   Modify the **calling function** to:
        *   Check the result of the balance function.
        *   If `!success`, send the `error` message to the user using the available `bot` instance and stop processing.
        *   If `success`, use `newBalance` and `paymentAmount` for logic and the success notification.
    *   Standardize success messages to include cost and remaining balance.

4.  **Create/Update `processBalanceOperation`:**
    *   Verify or create a generic `processBalanceOperation` function in `src/price/helpers` that follows the new pattern (no `ctx`, returns result object with potential error).

**Next Steps:**

*   Begin by searching for functions that interact with user balance.
*   Analyze and refactor `src/price/helpers/processBalanceOperation.ts` if it exists and needs changes.
*   Analyze and refactor calling functions like `src/inngest-functions/modelTrainingV2.ts`.
