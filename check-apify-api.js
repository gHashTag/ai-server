/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ API apify-client –≤–µ—Ä—Å–∏–∏ 2.15.0
 */

try {
  const { ApifyClient } = require('apify-client');
  const client = new ApifyClient({ token: 'test-token' });
  
  console.log('‚úÖ ApifyClient –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
  console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∫–ª–∏–µ–Ω—Ç–∞:');
  
  const methods = Object.getOwnPropertyNames(client.__proto__).filter(m => !m.startsWith('_'));
  methods.forEach(method => {
    console.log(`   ‚Ä¢ ${method}: ${typeof client[method]}`);
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–∞ actor
  if (typeof client.actor === 'function') {
    console.log('‚úÖ client.actor() - –º–µ—Ç–æ–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  } else {
    console.log('‚ùå client.actor() - –º–µ—Ç–æ–¥ –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    console.log('üîç –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π API');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤:');
  console.log(`   ‚Ä¢ client.actors: ${typeof client.actors}`);
  console.log(`   ‚Ä¢ client.acts: ${typeof client.acts}`);
  
  if (client.actors) {
    console.log('üìã –ú–µ—Ç–æ–¥—ã client.actors:');
    const actorMethods = Object.getOwnPropertyNames(client.actors.__proto__).filter(m => !m.startsWith('_'));
    actorMethods.forEach(method => {
      console.log(`   ‚Ä¢ actors.${method}: ${typeof client.actors[method]}`);
    });
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API:', error.message);
}