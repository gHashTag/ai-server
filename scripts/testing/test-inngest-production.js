const axios = require('axios')

const PRODUCTION_INNGEST_URL =
  'https://ai-server-production-production-8e2d.up.railway.app'

async function testInngestProduction() {
  console.log(
    'üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Instagram –ø–∞—Ä—Å–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ Inngest –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ...\n'
  )

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π Inngest...')
    const inngestInfo = await axios.get(`${PRODUCTION_INNGEST_URL}/api/inngest`)
    console.log('   ‚úÖ Inngest –∞–∫—Ç–∏–≤–µ–Ω')
    console.log(
      `   üìä –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ñ—É–Ω–∫—Ü–∏–π: ${inngestInfo.data.function_count}`
    )
    console.log(`   üåê –†–µ–∂–∏–º: ${inngestInfo.data.mode}`)

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –¥–ª—è Instagram –ø–∞—Ä—Å–∏–Ω–≥–∞
    console.log('\n2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –¥–ª—è Instagram –ø–∞—Ä—Å–∏–Ω–≥–∞...')

    const testEvent = {
      name: 'instagram-scraper-v2/scrape.requested',
      data: {
        username_or_id: 'neuro_coder',
        project_id: 37,
        max_users: 1,
        scrape_reels: true,
        max_reels_per_user: 3,
      },
    }

    console.log('   üì§ –°–æ–±—ã—Ç–∏–µ:', JSON.stringify(testEvent, null, 2))

    // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ —á–µ—Ä–µ–∑ endpoint (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    try {
      const eventResponse = await axios.post(
        `${PRODUCTION_INNGEST_URL}/api/inngest`,
        testEvent,
        {
          headers: {
            'Content-Type': 'application/json',
          },
        }
      )

      console.log('   ‚úÖ –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ')
      console.log('   –û—Ç–≤–µ—Ç:', eventResponse.data)
    } catch (eventError) {
      console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ –Ω–∞–ø—Ä—è–º—É—é')
      console.log('   –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Inngest SDK –∏–ª–∏ Cloud Dashboard')
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—Ä—É–≥–∏—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø–∞—Ä—Å–∏–Ω–≥–∞...')
    const parsingFunctions = [
      'instagramScraperV2',
      'instagramApifyScraper',
      'findCompetitors',
      'analyzeCompetitorReels',
      'extractTopContent',
    ]

    console.log('   –û–∂–∏–¥–∞–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:')
    parsingFunctions.forEach(fn => {
      console.log(`   - ${fn}`)
    })

    console.log('\n' + '='.repeat(60))
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:')
    console.log('='.repeat(60))
    console.log('‚úÖ –ü—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç')
    console.log('‚úÖ Inngest –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –∞–∫—Ç–∏–≤–µ–Ω')
    console.log(
      `‚úÖ ${inngestInfo.data.function_count} —Ñ—É–Ω–∫—Ü–∏–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ`
    )
    console.log('‚ö†Ô∏è –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:')
    console.log('   1. Inngest Cloud Dashboard: https://app.inngest.com')
    console.log('   2. –ò–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π Inngest Dev Server')
    console.log('='.repeat(60))

    // 4. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('\nüìù –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:')
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Inngest Cloud Dashboard')
    console.log('2. –ù–∞–π–¥–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é "Instagram Scraper V2 (Real API + Zod)"')
    console.log('3. –ù–∞–∂–º–∏—Ç–µ "Invoke" –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:')
    console.log(
      JSON.stringify(
        {
          data: {
            username_or_id: 'neuro_coder',
            project_id: 37,
            max_users: 1,
            scrape_reels: true,
            max_reels_per_user: 5,
          },
        },
        null,
        2
      )
    )
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message)
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏:', error.response.data)
    }
  }
}

testInngestProduction()
