/**
 * –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
 */

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
process.env.NODE_ENV = 'development'
process.env.PORT = '4000'
process.env.SUPABASE_URL = 'dummy_url'
process.env.SUPABASE_ANON_KEY = 'dummy_key'
process.env.SUPABASE_SERVICE_KEY = 'dummy_service_key'
process.env.NEON_DATABASE_URL =
  process.env.NEON_DATABASE_URL ||
  'postgresql://user:password@localhost:5432/testdb'

console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...')

try {
  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  const { App } = require('./dist/app.js')
  const { routes } = require('./dist/routes/index.js')

  const app = new App(routes)
  const server = app.listen()

  console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 4000')
  console.log(
    'üîó –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å: http://localhost:4000/api/competitor-subscriptions'
  )

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(async () => {
    try {
      const axios = require('axios')

      console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...')

      // –¢–µ—Å—Ç health check
      try {
        const healthResponse = await axios.get('http://localhost:4000/health')
        console.log(
          '‚úÖ Health check:',
          healthResponse.status,
          healthResponse.data.status
        )
      } catch (error) {
        console.log('‚ùå Health check failed:', error.message)
      }

      // –¢–µ—Å—Ç –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
      try {
        const rootResponse = await axios.get('http://localhost:4000/')
        console.log(
          '‚úÖ Root endpoint:',
          rootResponse.status,
          rootResponse.data.message
        )
      } catch (error) {
        console.log('‚ùå Root endpoint failed:', error.message)
      }

      // –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫
      try {
        const statsResponse = await axios.get(
          'http://localhost:4000/api/competitor-subscriptions/stats'
        )
        console.log(
          '‚úÖ Competitor stats:',
          statsResponse.status,
          'Users:',
          statsResponse.data.stats?.total_users
        )
      } catch (error) {
        console.log(
          '‚ùå Competitor stats failed:',
          error.response?.status,
          error.message
        )
      }

      console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!')
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message)
    }
  }, 2000)
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error.message)
  process.exit(1)
}
