#!/usr/bin/env node

const { Telegraf } = require('telegraf')

const BOT_TOKEN = process.env.MONITORING_BOT_TOKEN || process.env.BOT_TOKEN_1
const ADMIN_ID = '144022504'

async function checkSystemStatus() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...\n')

  const status = {
    inngest: false,
    api: false,
    telegram: false,
    functions: [],
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ Inngest
  try {
    const response = await fetch('http://localhost:8288/health')
    const data = await response.json()
    status.inngest = data.status === 200
    console.log(`‚úÖ Inngest Dev Server: –†–∞–±–æ—Ç–∞–µ—Ç (–ø–æ—Ä—Ç 8288)`)
  } catch (error) {
    console.log(`‚ùå Inngest Dev Server: –ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω`)
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ API
  try {
    const response = await fetch('http://localhost:4000/health')
    status.api = response.ok
    console.log(`‚úÖ API Server: –†–∞–±–æ—Ç–∞–µ—Ç (–ø–æ—Ä—Ç 4000)`)
  } catch (error) {
    console.log(`‚ùå API Server: –ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω`)
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram
  try {
    const bot = new Telegraf(BOT_TOKEN)
    const me = await bot.telegram.getMe()
    status.telegram = true
    console.log(`‚úÖ Telegram Bot: @${me.username} –∞–∫—Ç–∏–≤–µ–Ω`)
  } catch (error) {
    console.log(`‚ùå Telegram Bot: –ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω`)
  }

  console.log('\nüìä –§—É–Ω–∫—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:')
  console.log('‚Ä¢ Log Monitor - –∞–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ (cron: 0 10 * * *)')
  console.log('‚Ä¢ Critical Error Monitor - –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö')
  console.log(
    '‚Ä¢ Health Check - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç (cron: */30 * * * *)'
  )

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤ Telegram
  if (status.telegram) {
    const bot = new Telegraf(BOT_TOKEN)

    const statusEmoji = status.inngest && status.api ? '‚úÖ' : '‚ö†Ô∏è'
    const message =
      `${statusEmoji} <b>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</b>\n\n` +
      `${status.inngest ? '‚úÖ' : '‚ùå'} Inngest: ${
        status.inngest ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω'
      }\n` +
      `${status.api ? '‚úÖ' : '‚ùå'} API: ${
        status.api ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω'
      }\n` +
      `${status.telegram ? '‚úÖ' : '‚ùå'} Telegram: ${
        status.telegram ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω'
      }\n\n` +
      `<b>–ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n` +
      `‚Ä¢ üìä Log Monitor (24—á)\n` +
      `‚Ä¢ üö® Critical Error Monitor\n` +
      `‚Ä¢ üíö Health Check (30–º–∏–Ω)\n\n` +
      `<i>–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: ${new Date().toLocaleString('ru-RU', {
        timeZone: 'Europe/Moscow',
      })}</i>`

    try {
      await bot.telegram.sendMessage(ADMIN_ID, message, {
        parse_mode: 'HTML',
      })
      console.log('\n‚úÖ –û—Ç—á–µ—Ç –æ —Å—Ç–∞—Ç—É—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram')
    } catch (error) {
      console.log('\n‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –≤ Telegram:', error.message)
    }
  }

  // –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
  console.log('\n' + '='.repeat(50))
  if (status.inngest && status.api && status.telegram) {
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–∞!')
  } else {
    console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–∏—Å—Ç–µ–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞')
    if (!status.inngest)
      console.log(
        '  - –ó–∞–ø—É—Å—Ç–∏—Ç–µ Inngest: npx inngest-cli@latest dev --port 8288'
      )
    if (!status.api) console.log('  - –ó–∞–ø—É—Å—Ç–∏—Ç–µ API: npm run dev')
  }
  console.log('='.repeat(50))
}

checkSystemStatus().catch(console.error)
