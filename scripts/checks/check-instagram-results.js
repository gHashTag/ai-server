#!/usr/bin/env node

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Instagram Scraper V2 –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */

const { Pool } = require('pg')

async function checkInstagramResults() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã Instagram –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n')

  const dbPool = new Pool({
    connectionString: process.env.SUPABASE_URL,
    ssl: { rejectUnauthorized: false },
  })

  try {
    const client = await dbPool.connect()

    console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è vyacheslav_nekludov
    const competitorsQuery = `
      SELECT 
        search_username,
        username,
        full_name,
        is_verified,
        is_private,
        profile_chaining_secondary_label,
        social_context,
        created_at,
        project_id
      FROM instagram_similar_users 
      WHERE search_username = 'vyacheslav_nekludov'
      ORDER BY created_at DESC 
      LIMIT 10
    `

    const competitorsResult = await client.query(competitorsQuery)

    if (competitorsResult.rows.length > 0) {
      console.log(
        `‚úÖ –ù–∞–π–¥–µ–Ω–æ ${competitorsResult.rows.length} –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è vyacheslav_nekludov:`
      )

      competitorsResult.rows.forEach((competitor, index) => {
        const verified = competitor.is_verified ? '‚úÖ' : '‚ùå'
        const private_status = competitor.is_private ? 'üîí' : 'üîì'
        const category =
          competitor.profile_chaining_secondary_label || 'No category'

        console.log(
          `${index + 1}. @${competitor.username} ${verified} ${private_status}`
        )
        console.log(`   üë§ ${competitor.full_name || 'No name'}`)
        console.log(`   üìÇ ${category}`)
        if (competitor.social_context) {
          console.log(`   üí¨ ${competitor.social_context}`)
        }
        console.log(
          `   üìÖ ${new Date(competitor.created_at).toLocaleString('ru-RU')}`
        )
        console.log(`   üèóÔ∏è Project: ${competitor.project_id}`)
        console.log('')
      })

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∏–ª—Å—ã
      console.log('üé¨ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∏–ª—Å—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...')

      const reelsQuery = `
        SELECT 
          owner_username,
          shortcode,
          like_count,
          comment_count,
          play_count,
          video_duration,
          taken_at_timestamp,
          scraped_at
        FROM instagram_user_reels 
        WHERE scraped_for_user_pk IN (
          SELECT user_pk FROM instagram_similar_users 
          WHERE search_username = 'vyacheslav_nekludov'
        )
        ORDER BY like_count DESC 
        LIMIT 5
      `

      const reelsResult = await client.query(reelsQuery)

      if (reelsResult.rows.length > 0) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${reelsResult.rows.length} —Ä–∏–ª—Å–æ–≤:`)

        reelsResult.rows.forEach((reel, index) => {
          console.log(
            `${index + 1}. @${reel.owner_username} - ${reel.shortcode}`
          )
          console.log(
            `   üëç ${reel.like_count || 0} –ª–∞–π–∫–æ–≤, üí¨ ${
              reel.comment_count || 0
            } –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤`
          )
          console.log(
            `   üëÄ ${reel.play_count || 0} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, ‚è±Ô∏è ${
              reel.video_duration || 0
            }—Å`
          )
          console.log(
            `   üìÖ ${
              reel.taken_at_timestamp
                ? new Date(reel.taken_at_timestamp * 1000).toLocaleString(
                    'ru-RU'
                  )
                : 'Unknown date'
            }`
          )
          console.log('')
        })
      } else {
        console.log('‚ùå –†–∏–ª—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
      }
    } else {
      console.log('‚ùå –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –¥–ª—è vyacheslav_nekludov –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤–æ–æ–±—â–µ
    console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ instagram_similar_users:')

    const latestQuery = `
      SELECT 
        search_username,
        username,
        created_at,
        project_id
      FROM instagram_similar_users 
      ORDER BY created_at DESC 
      LIMIT 5
    `

    const latestResult = await client.query(latestQuery)

    if (latestResult.rows.length > 0) {
      latestResult.rows.forEach((row, index) => {
        console.log(
          `${index + 1}. Target: ${row.search_username} ‚Üí Found: @${
            row.username
          }`
        )
        console.log(
          `   üìÖ ${new Date(row.created_at).toLocaleString(
            'ru-RU'
          )} | Project: ${row.project_id}`
        )
      })
    } else {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ instagram_similar_users –ø—É—Å—Ç–∞')
    }

    client.release()
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message)

    if (
      error.message.includes('relation') &&
      error.message.includes('does not exist')
    ) {
      console.log(
        '\nüí° –í–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–±–ª–∏—Ü—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ Inngest Dashboard.'
      )
    }
  } finally {
    await dbPool.end()
  }
}

// –ó–∞–ø—É—Å–∫
checkInstagramResults()
  .then(() => {
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
  })
  .catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
  })
