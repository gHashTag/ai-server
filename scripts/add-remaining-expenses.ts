#!/usr/bin/env bun

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SQL –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –º–∞–π 2024
 */

const remainingExpenses = [
  {
    date: '02/05',
    name: 'PINECONE SYSTEMS, IN',
    amount: 40.19,
    currency: 'THB',
    description: '–í–µ–∫—Ç–æ—Ä–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö',
    purpose: '–•—Ä–∞–Ω–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è AI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.',
    url: 'Pinecone',
    category: 'INFRASTRUCTURE',
    expenseType: 'DATABASE'
  },
  {
    date: '02/05',
    name: 'WARP.DEV',
    amount: 1726.61,
    currency: 'THB',
    description: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
    purpose: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.',
    url: 'Warp',
    category: 'DEVELOPMENT',
    expenseType: 'DEVELOPMENT_TOOLS'
  },
  {
    date: '03/05',
    name: 'REPLICATE',
    amount: 6088.40,
    currency: 'THB',
    description: '–•–æ—Å—Ç–∏–Ω–≥ –º–æ–¥–µ–ª–µ–π',
    purpose: '–•–æ—Å—Ç–∏–Ω–≥ –º–æ–¥–µ–ª–µ–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –¥—Ä—É–≥–∏—Ö AI –∑–∞–¥–∞—á.',
    url: 'Replicate',
    category: 'AI_SERVICES',
    expenseType: 'IMAGE_GENERATION'
  },
  {
    date: '03/05',
    name: 'WISPR',
    amount: 517.37,
    currency: 'THB',
    description: 'AI —Å–æ–æ–±—â–µ–Ω–∏—è',
    purpose: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ–±—â–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ AI.',
    url: 'Wispr',
    category: 'AI_SERVICES',
    expenseType: 'AI_API'
  },
  {
    date: '05/05',
    name: 'CURSOR USAGE MID MA',
    amount: 689.83,
    currency: 'THB',
    description: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
    purpose: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.',
    url: 'Cursor',
    category: 'DEVELOPMENT',
    expenseType: 'DEVELOPMENT_TOOLS'
  },
  {
    date: '08/05',
    name: 'ELEVENLABS',
    amount: 741.22,
    currency: 'THB',
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞',
    purpose: '–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞.',
    url: 'ElevenLabs',
    category: 'AI_SERVICES',
    expenseType: 'VOICE_GENERATION'
  },
  {
    date: '21/05',
    name: 'RUNWAY UNLIMITED PLA',
    amount: 3211.43,
    currency: 'THB',
    description: 'AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ',
    purpose: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.',
    url: 'Runway',
    category: 'AI_SERVICES',
    expenseType: 'VIDEO_GENERATION'
  }
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
]

function generateInsertSQL(expenses: any[]): string {
  const values = expenses.map(expense => {
    const invId = `farm_expense_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
    const paymentDate = `2024-05-${expense.date.split('/')[0].padStart(2, '0')}`
    
    return `(
      '${invId}',
      'SYSTEM_BOT_FARM',
      'bot_farm_manager',
      ${expense.amount},
      0,
      '${expense.currency}',
      'COMPLETED',
      'MONEY_OUTCOME',
      'System',
      '${expense.name}: ${expense.description.replace(/'/g, "''")}',
      '{"expense_category": "${expense.category}", "expense_type": "${expense.expenseType}", "purpose": "${expense.purpose.replace(/'/g, "''")}", "original_name": "${expense.name}", "url": "${expense.url}", "is_bot_farm_expense": true, "processed_at": "${new Date().toISOString()}"}',
      NULL,
      NULL,
      '${paymentDate}T00:00:00.000Z',
      NOW(),
      NOW()
    )`
  }).join(',\n')

  return `
INSERT INTO payments_v2 (
  inv_id,
  telegram_id,
  bot_name,
  amount,
  stars,
  currency,
  status,
  type,
  payment_method,
  description,
  metadata,
  subscription_type,
  service_type,
  payment_date,
  created_at,
  updated_at
) VALUES ${values};
`
}

async function main() {
  console.log('üöÄ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ —Ñ–µ—Ä–º—ã –±–æ—Ç–æ–≤...')
  
  const sql = generateInsertSQL(remainingExpenses)
  const totalAmount = remainingExpenses.reduce((sum, expense) => sum + expense.amount, 0)
  
  console.log('üìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SQL:')
  console.log('='.repeat(60))
  console.log(sql)
  console.log('='.repeat(60))
  
  console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`)
  console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ${remainingExpenses.length}`)
  console.log(`   –û–±—â–∞—è —Å—É–º–º–∞: ${totalAmount.toFixed(2)} THB`)
  
  console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:')
  console.log('1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ SQL –≤—ã—à–µ')
  console.log('2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ Supabase SQL Editor')
  console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL')
  console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:')
  console.log('   SELECT COUNT(*), SUM(amount) FROM payments_v2 WHERE telegram_id = \'SYSTEM_BOT_FARM\';')
}

main().catch(console.error)