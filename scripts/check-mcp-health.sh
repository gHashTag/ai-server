#!/bin/bash

# MCP Health Check Script
# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ–π MCP —Å–∏—Å—Ç–µ–º—ã

echo "üîç MCP Health Check - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
if [ "$(pwd)" != "/Users/playra/ai-server" ]; then
    echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!"
    echo "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: cd /Users/playra/ai-server"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
echo ""
echo "üü¢ Node.js –≤–µ—Ä—Å–∏—è:"
/Users/playra/.nvm/versions/node/v20.19.2/bin/node --version

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
echo ""
echo "üî® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏:"
if [ -d "dist/mcp" ]; then
    echo "‚úÖ dist/mcp —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    echo "   –§–∞–π–ª—ã: $(ls dist/mcp/ | wc -l) —Ñ–∞–π–ª–æ–≤"
else
    echo "‚ùå dist/mcp –ù–ï –ù–ê–ô–î–ï–ù!"
    echo "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: bun run build"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
echo ""
echo "üìú –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤:"
if [ -f "scripts/start-mcp-for-cursor.js" ]; then
    echo "‚úÖ start-mcp-for-cursor.js –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå start-mcp-for-cursor.js –ù–ï –ù–ê–ô–î–ï–ù!"
    exit 1
fi

if [ -f "scripts/test-mcp-tools.js" ]; then
    echo "‚úÖ test-mcp-tools.js –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå test-mcp-tools.js –ù–ï –ù–ê–ô–î–ï–ù!"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo ""
echo "‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
if [ -f ".cursor/mcp.json" ]; then
    echo "‚úÖ .cursor/mcp.json –Ω–∞–π–¥–µ–Ω"
    echo "   –ö–æ–º–∞–Ω–¥–∞: $(cat .cursor/mcp.json | grep -o '"/Users/playra/.nvm/versions/node/v20.19.2/bin/node"' | head -1)"
else
    echo "‚ùå .cursor/mcp.json –ù–ï –ù–ê–ô–î–ï–ù!"
    exit 1
fi

# –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç MCP —Å–µ—Ä–≤–µ—Ä–∞ (–±–µ–∑ timeout –¥–ª—è macOS)
echo ""
echo "üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç MCP —Å–µ—Ä–≤–µ—Ä–∞:"
echo "   –ó–∞–ø—É—Å–∫ node scripts/test-mcp-tools.js –≤ —Ñ–æ–Ω–µ..."

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –≤ —Ñ–æ–Ω–µ –∏ —É–±–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
node scripts/test-mcp-tools.js > /tmp/mcp-test.log 2>&1 &
TEST_PID=$!
sleep 3
kill $TEST_PID 2>/dev/null

if grep -q "MCP server responded" /tmp/mcp-test.log; then
    echo "‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
    RESPONSES=$(grep -c "Response received" /tmp/mcp-test.log 2>/dev/null || echo "0")
    echo "   –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤: $RESPONSES"
else
    echo "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ MCP —Å–µ—Ä–≤–µ—Ä –≤—Ä—É—á–Ω—É—é"
    echo "   –ö–æ–º–∞–Ω–¥–∞: node scripts/test-mcp-tools.js"
fi

echo ""
echo "üéØ –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:"
echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å Cursor!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –û—Ç–∫—Ä—ã—Ç—å Cursor Settings ‚Üí Features ‚Üí Model Context Protocol"
echo "2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–µ–ª–µ–Ω—ã–π —Å—Ç–∞—Ç—É—Å ai-server-neurophoto"
echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —á–∞—Ç–µ: '–°–æ–∑–¥–∞–π –Ω–µ–π—Ä–æ—Ñ–æ—Ç–æ –¥–µ–≤—É—à–∫–∏ —Å –ø—Ä–æ–º–ø—Ç–æ–º \"beautiful woman\" –∏ telegram_id \"123456789\"'"
echo ""
echo "üîß –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö:"
echo "- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Cursor (Cmd+Q)"
echo "- –í—ã–ø–æ–ª–Ω–∏—Ç—å: bun run build"
echo "- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å: node scripts/test-mcp-tools.js"
echo ""
echo "üìñ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: MCP_QUICK_START.md" 