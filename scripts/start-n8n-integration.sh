#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ N8N –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AI Server
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
setup_env() {
    if [ ! -f .env ]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
        
        cat > .env << EOF
# N8N Configuration
N8N_ADMIN_PASSWORD=admin123
N8N_WEBHOOK_URL=http://n8n:5678

# AI Server Configuration  
NODE_ENV=development
PORT=3000
SECRET_KEY=your-secret-key-here

# Add your other environment variables here
EOF
        
        warning "–°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º."
        warning "–û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π N8N_ADMIN_PASSWORD"
    else
        success ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
start_containers() {
    log "–ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose down 2>/dev/null || true
    
    # –ó–∞–ø—É—Å—Ç–∏–º –Ω–æ–≤—ã–µ
    docker-compose up -d
    
    success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
wait_for_services() {
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ñ–¥–µ–º AI Server
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ AI Server (–ø–æ—Ä—Ç 3000)..."
    timeout=60
    while ! curl -s http://localhost:3000/api/n8n/health >/dev/null 2>&1; do
        sleep 2
        timeout=$((timeout-2))
        if [ $timeout -le 0 ]; then
            error "AI Server –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥"
            return 1
        fi
    done
    success "AI Server –≥–æ—Ç–æ–≤"
    
    # –ñ–¥–µ–º N8N
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ N8N (–ø–æ—Ä—Ç 5678)..."
    timeout=60
    while ! curl -s -u admin:admin123 http://localhost:5678/api/v1/workflows >/dev/null 2>&1; do
        sleep 2
        timeout=$((timeout-2))
        if [ $timeout -le 0 ]; then
            error "N8N –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥"
            return 1
        fi
    done
    success "N8N –≥–æ—Ç–æ–≤"
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
run_integration_tests() {
    log "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏..."
    
    if [ -f "dist/utils/logger.js" ]; then
        node tests/n8n/test-n8n-integration.js
    else
        warning "–ü—Ä–æ–µ–∫—Ç –Ω–µ —Å–æ–±—Ä–∞–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É..."
        npm run build
        node tests/n8n/test-n8n-integration.js
    fi
}

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
show_service_info() {
    echo
    echo "üéâ N8N –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!"
    echo
    echo "üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    echo "  ‚Ä¢ N8N Admin Panel:  http://localhost:5678"
    echo "    ‚îî‚îÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:   admin"
    echo "    ‚îî‚îÄ –ü–∞—Ä–æ–ª—å:         $(grep N8N_ADMIN_PASSWORD .env | cut -d'=' -f2)"
    echo
    echo "  ‚Ä¢ AI Server API:    http://localhost:3000"
    echo "    ‚îî‚îÄ Health Check:   http://localhost:3000/api/n8n/health"
    echo "    ‚îî‚îÄ Workflows:      http://localhost:3000/api/n8n/workflows"
    echo
    echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ N8N:     docker-compose logs -f n8n-admin"
    echo "  ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Server:  docker-compose logs -f ai-server"
    echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:     docker-compose down"
    echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:             docker-compose restart"
    echo
    echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
    echo "  ‚Ä¢ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ:       N8N_INTEGRATION_GUIDE.md"
    echo "  ‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã–π workflow: n8n/workflows/test-ai-server-integration.json"
    echo
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ N8N Workflow Automation –¥–ª—è AI Server"
    echo "================================================"
    
    check_dependencies
    setup_env
    
    log "–°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    npm run build
    
    start_containers
    
    if wait_for_services; then
        success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã"
        
        log "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏..."
        if run_integration_tests; then
            success "–¢–µ—Å—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"
        else
            warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        fi
        
        show_service_info
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo
        echo "üîç –û—Ç–ª–∞–¥–∫–∞:"
        echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs"
        echo "  ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç—ã 3000 –∏ 5678 —Å–≤–æ–±–æ–¥–Ω—ã"
        echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    "test")
        log "–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤..."
        run_integration_tests
        ;;
    "stop")
        log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose down
        success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;
    "restart")
        log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose down
        sleep 2
        docker-compose up -d
        success "–°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
        ;;
    "logs")
        docker-compose logs -f
        ;;
    "status")
        docker-compose ps
        ;;
    *)
        main
        ;;
esac