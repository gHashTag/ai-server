const { config } = require('dotenv')

// –ó–∞–≥—Ä—É–∂–∞–µ–º env —Ñ–∞–π–ª—ã –≤ —Ç–æ–º –∂–µ –ø–æ—Ä—è–¥–∫–µ —á—Ç–æ –∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
config({ path: '.env' })
config({ path: '.env.development.local' })

const { Telegraf } = require('telegraf')

async function testBotTokens() {
  console.log('üß™ === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–û–ö–ï–ù–û–í –ë–û–¢–û–í ===\n')

  const BOT_NAMES = {
    ai_koshey_bot: process.env.BOT_TOKEN_TEST_1,
    clip_maker_neuro_bot: process.env.BOT_TOKEN_TEST_2,
  }

  console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã:')
  Object.entries(BOT_NAMES).forEach(([name, token]) => {
    console.log(`  ${name}: ${token ? '‚úÖ –ï–°–¢–¨' : '‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢'}`)
    if (token) {
      console.log(`    –î–ª–∏–Ω–∞: ${token.length} —Å–∏–º–≤–æ–ª–æ–≤`)
      console.log(`    –ù–∞—á–∞–ª–æ: ${token.substring(0, 10)}...`)
    }
  })

  console.log('\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API:')

  for (const [botName, token] of Object.entries(BOT_NAMES)) {
    if (token) {
      console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º ${botName}...`)
      try {
        const bot = new Telegraf(token)

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º getMe API call
        const botInfo = await bot.telegram.getMe()
        console.log(`‚úÖ ${botName}: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ`)
        console.log(`   Username: @${botInfo.username}`)
        console.log(`   Name: ${botInfo.first_name}`)
        console.log(`   ID: ${botInfo.id}`)

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
        try {
          // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –≥—Ä—É–ø–ø—É
          await bot.telegram.sendMessage(
            '@neuro_blogger_pulse',
            `üß™ [–¢–ï–°–¢] –ë–æ—Ç ${
              botInfo.username
            } —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - ${new Date().toISOString()}`
          )
          console.log(`‚úÖ ${botName}: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç`)
        } catch (sendError) {
          console.log(
            `‚ö†Ô∏è ${botName}: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:`,
            sendError.message
          )
        }
      } catch (error) {
        console.error(`‚ùå ${botName}: –û–®–ò–ë–ö–ê -`, error.message)

        if (error.message.includes('401')) {
          console.error(`   üí° –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –æ—Ç–æ–∑–≤–∞–Ω`)
        } else if (error.message.includes('Too Many Requests')) {
          console.error(`   üí° –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ`)
        }
      }
    } else {
      console.log(`‚ùå ${botName}: –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`)
    }
  }

  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω')
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ –º–æ—Ä—Ñ–∏–Ω–≥–∞
async function testSpecificBot(botName, token) {
  if (!token) {
    return { success: false, error: 'Token missing' }
  }

  try {
    const bot = new Telegraf(token)
    const botInfo = await bot.telegram.getMe()
    return {
      success: true,
      botInfo: {
        username: botInfo.username,
        name: botInfo.first_name,
        id: botInfo.id,
      },
    }
  } catch (error) {
    return {
      success: false,
      error: error.message,
      isUnauthorized: error.message.includes('401'),
    }
  }
}

if (require.main === module) {
  testBotTokens().catch(console.error)
}

module.exports = { testBotTokens, testSpecificBot }
