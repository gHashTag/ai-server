#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥—Ä–æ–±–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∑–≤–µ–∑–¥
 * –ü–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ numeric(10,2) –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å
 */

const { createClient } = require('@supabase/supabase-js')
require('dotenv').config()

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
)

async function testFractionalStars() {
  console.log('üß™ –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥—Ä–æ–±–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∑–≤–µ–∑–¥ –≤ –ë–î\n')

  const testInvId = `test_fractional_${Date.now()}`
  const testTelegramId = '999999999'
  const testStars = 7.5

  try {
    console.log('üìù –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å 7.5‚≠ê...')

    // –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
    const { error: insertError } = await supabase.from('payments_v2').insert({
      telegram_id: testTelegramId,
      inv_id: testInvId,
      currency: 'STARS',
      amount: testStars,
      status: 'COMPLETED',
      stars: testStars, // 7.5 - –¥—Ä–æ–±–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      type: 'MONEY_OUTCOME',
      description: '–¢–µ—Å—Ç –¥—Ä–æ–±–Ω—ã—Ö –∑–≤–µ–∑–¥ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏',
      payment_method: 'Internal',
      bot_name: 'test_bot',
      language: 'ru',
      payment_date: new Date(),
    })

    if (insertError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ:', insertError.message)
      return
    }

    console.log('‚úÖ –ó–∞–ø–∏—Å—å –≤—Å—Ç–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')

    // –ß–∏—Ç–∞–µ–º —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å
    console.log('üîç –ß–∏—Ç–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ...')

    const { data, error: selectError } = await supabase
      .from('payments_v2')
      .select('stars, description, created_at')
      .eq('inv_id', testInvId)
      .single()

    if (selectError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏:', selectError.message)
      return
    }

    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:')
    console.log('='.repeat(40))
    console.log(`–í—Å—Ç–∞–≤–∏–ª–∏: ${testStars}‚≠ê`)
    console.log(`–°–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å: ${data.stars}‚≠ê`)
    console.log(`–¢–∏–ø: ${typeof data.stars}`)

    if (data.stars === testStars) {
      console.log('‚úÖ –£–°–ü–ï–•! –î—Ä–æ–±–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')
      console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è numeric(10,2) —Ä–∞–±–æ—Ç–∞–µ—Ç!')
      console.log('‚úÖ NeuroPhoto —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç —Å–ø–∏—Å—ã–≤–∞—Ç—å —Ä–æ–≤–Ω–æ 7.5‚≠ê!')
    } else {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê! –ó–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏!')
      console.log(
        '‚ùå –í–æ–∑–º–æ–∂–Ω–æ –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª–∞—Å—å –∏–ª–∏ –µ—Å—Ç—å –¥—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞'
      )
    }

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
    console.log('\nüßπ –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å...')
    const { error: deleteError } = await supabase
      .from('payments_v2')
      .delete()
      .eq('inv_id', testInvId)

    if (deleteError) {
      console.error(
        '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å:',
        deleteError.message
      )
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞')
    }
  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message)
  }
}

testFractionalStars()
