#!/usr/bin/env node

/**
 * üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –≤–∏–¥–µ–æ
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API –∫–ª—é—á–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */

const axios = require('axios')
require('dotenv').config()

console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° –ì–ï–ù–ï–†–ê–¶–ò–ï–ô –í–ò–î–ï–û')
console.log('='.repeat(60))

// –°–ø–∏—Å–æ–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –≤–∏–¥–µ–æ
const REQUIRED_ENV_VARS = [
  {
    name: 'KIE_AI_API_KEY',
    description: 'API –∫–ª—é—á Kie.ai (–æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä –≤–∏–¥–µ–æ)',
    required: false,
    service: 'kie-ai',
    url: 'https://kie.ai',
  },
  {
    name: 'GOOGLE_CLOUD_PROJECT',
    description: 'ID –ø—Ä–æ–µ–∫—Ç–∞ Google Cloud (fallback –¥–ª—è Vertex AI)',
    required: false,
    service: 'vertex-ai',
    url: 'https://console.cloud.google.com',
  },
  {
    name: 'GOOGLE_APPLICATION_CREDENTIALS',
    description: '–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É credentials Google Cloud',
    required: false,
    service: 'vertex-ai',
  },
  {
    name: 'SUPABASE_URL',
    description: 'URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase',
    required: true,
    service: 'database',
  },
  {
    name: 'SUPABASE_ANON_KEY',
    description: 'Anon –∫–ª—é—á Supabase',
    required: true,
    service: 'database',
  },
]

async function checkEnvironmentVariables() {
  console.log('\nüìä –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:')
  console.log('-'.repeat(40))

  let criticalMissing = []
  let videoProviders = []

  for (const envVar of REQUIRED_ENV_VARS) {
    const value = process.env[envVar.name]
    const isSet = !!value

    if (isSet) {
      console.log(`‚úÖ ${envVar.name}: –Ω–∞—Å—Ç—Ä–æ–µ–Ω`)

      // –°–∫—Ä—ã–≤–∞–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      if (envVar.name.includes('KEY') || envVar.name.includes('SECRET')) {
        const masked =
          value.substring(0, 8) + '***' + value.substring(value.length - 4)
        console.log(`   üîë –ó–Ω–∞—á–µ–Ω–∏–µ: ${masked}`)
      }

      if (envVar.service === 'kie-ai') {
        videoProviders.push('Kie.ai (87% —ç–∫–æ–Ω–æ–º–∏–∏)')
      }
      if (envVar.service === 'vertex-ai') {
        videoProviders.push('Vertex AI (–¥–æ—Ä–æ–≥–æ–π fallback)')
      }
    } else {
      if (envVar.required) {
        console.log(`‚ùå ${envVar.name}: –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ï–ù - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!`)
        criticalMissing.push(envVar)
      } else {
        console.log(`‚ö†Ô∏è  ${envVar.name}: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)`)
        console.log(`   üí° ${envVar.description}`)
        if (envVar.url) {
          console.log(`   üåê –ü–æ–ª—É—á–∏—Ç—å: ${envVar.url}`)
        }
      }
    }
  }

  return { criticalMissing, videoProviders }
}

async function testKieAiConnection() {
  console.log('\nüé¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï KIE.AI API:')
  console.log('-'.repeat(40))

  const kieApiKey = process.env.KIE_AI_API_KEY
  if (!kieApiKey) {
    console.log('‚ùå KIE_AI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω')
    console.log('   ‚ö†Ô∏è  –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–æ—Ä–æ–≥–æ–π Vertex AI')
    console.log('   üí∞ –≠–∫–æ–Ω–æ–º–∏—è –¥–æ 87% –ù–ï–î–û–°–¢–£–ü–ù–ê')
    return false
  }

  try {
    const response = await axios.get('https://api.kie.ai/api/v1/chat/credit', {
      headers: {
        Authorization: `Bearer ${kieApiKey}`,
        'Content-Type': 'application/json',
      },
      timeout: 10000,
    })

    const credits = response.data.credits || 0
    console.log('‚úÖ Kie.ai API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ')
    console.log(`üí∞ –ë–∞–ª–∞–Ω—Å: ${credits} –∫—Ä–µ–¥–∏—Ç–æ–≤`)

    if (credits < 1) {
      console.log('‚ö†Ô∏è  –ù–ò–ó–ö–ò–ô –ë–ê–õ–ê–ù–°! –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç')
      console.log('   üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –º–∏–Ω–∏–º—É–º $5-10')
    } else {
      console.log('‚úÖ –ë–∞–ª–∞–Ω—Å –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏')
    }

    return true
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Kie.ai')

    if (error.response) {
      const status = error.response.status
      if (status === 401) {
        console.log('   üö´ –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á')
        console.log('   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ KIE_AI_API_KEY –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö')
      } else if (status === 429) {
        console.log('   ‚è±  –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤')
        console.log('   üí° –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –ø–ª–∞–Ω')
      } else {
        console.log(`   ‚ö†Ô∏è  HTTP ${status}: ${error.response.statusText}`)
      }
    } else {
      console.log(`   üåê –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${error.message}`)
    }

    return false
  }
}

async function checkVertexAiFallback() {
  console.log('\nüß† –ü–†–û–í–ï–†–ö–ê VERTEX AI (FALLBACK):')
  console.log('-'.repeat(40))

  const hasProject = !!process.env.GOOGLE_CLOUD_PROJECT
  const hasCredentials = !!process.env.GOOGLE_APPLICATION_CREDENTIALS

  if (!hasProject) {
    console.log('‚ùå GOOGLE_CLOUD_PROJECT –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
  } else {
    console.log(`‚úÖ Google Cloud Project: ${process.env.GOOGLE_CLOUD_PROJECT}`)
  }

  if (!hasCredentials) {
    console.log('‚ùå GOOGLE_APPLICATION_CREDENTIALS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
  } else {
    console.log('‚úÖ Google Application Credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
  }

  if (!hasProject || !hasCredentials) {
    console.log('‚ö†Ô∏è  Vertex AI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ fallback')
    console.log('   üö® –ï—Å–ª–∏ Kie.ai –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ù–ï–í–û–ó–ú–û–ñ–ù–ê')
    return false
  }

  console.log('‚úÖ Vertex AI –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–∞–∫ fallback')
  return true
}

async function checkDatabaseConnection() {
  console.log('\nüóÑÔ∏è  –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:')
  console.log('-'.repeat(40))

  const supabaseUrl = process.env.SUPABASE_URL
  const supabaseKey = process.env.SUPABASE_ANON_KEY

  if (!supabaseUrl || !supabaseKey) {
    console.log('‚ùå Supabase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç')
    return false
  }

  try {
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const response = await axios.get(`${supabaseUrl}/rest/v1/`, {
      headers: {
        apikey: supabaseKey,
        Authorization: `Bearer ${supabaseKey}`,
      },
      timeout: 5000,
    })

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ')
    return true
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: ${error.message}`)
    return false
  }
}

function generateSolutions(checks) {
  console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:')
  console.log('='.repeat(60))

  if (checks.criticalMissing.length > 0) {
    console.log('\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:')
    checks.criticalMissing.forEach(env => {
      console.log(`‚ùå ${env.name}: ${env.description}`)
    })
  }

  if (!checks.kieAiOk && !checks.vertexAiOk) {
    console.log('\nüö® –í–ò–î–ï–û –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –ù–ï–î–û–°–¢–£–ü–ù–ê!')
    console.log('   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä:')
    console.log('   1. Kie.ai (–¥–µ—à–µ–≤—ã–π) - –ø–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞ https://kie.ai')
    console.log('   2. Vertex AI (–¥–æ—Ä–æ–≥–æ–π) - –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Google Cloud')
  } else if (!checks.kieAiOk) {
    console.log('\n‚ö†Ô∏è  –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø –î–û–†–û–ì–û–ô VERTEX AI!')
    console.log('   üí∞ –≠–∫–æ–Ω–æ–º—å—Ç–µ –¥–æ 87% - –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Kie.ai:')
    console.log('   1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å: https://kie.ai')
    console.log('   2. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –≤ Settings ‚Üí API Keys')
    console.log('   3. –î–æ–±–∞–≤—å—Ç–µ KIE_AI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è')
    console.log('   4. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å (–º–∏–Ω–∏–º—É–º $5)')
  } else if (checks.kieAiOk && checks.vertexAiOk) {
    console.log('\n‚úÖ –û–ü–¢–ò–ú–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê!')
    console.log('   üéØ Kie.ai –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π (—ç–∫–æ–Ω–æ–º–∏—è 87%)')
    console.log('   üõ°Ô∏è  Vertex AI –∫–∞–∫ –Ω–∞–¥–µ–∂–Ω—ã–π fallback')
  }

  if (!checks.databaseOk) {
    console.log('\nüö® –ë–ê–ó–ê –î–ê–ù–ù–´–• –ù–ï–î–û–°–¢–£–ü–ù–ê!')
    console.log('   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∏–¥–µ–æ –Ω–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è')
    console.log('   üîß –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Supabase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è')
  }
}

async function main() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const envCheck = await checkEnvironmentVariables()

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const kieAiOk = await testKieAiConnection()
    const vertexAiOk = await checkVertexAiFallback()
    const databaseOk = await checkDatabaseConnection()

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    generateSolutions({
      criticalMissing: envCheck.criticalMissing,
      videoProviders: envCheck.videoProviders,
      kieAiOk,
      vertexAiOk,
      databaseOk,
    })

    // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    console.log('\nüìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:')
    console.log('='.repeat(60))

    if (kieAiOk && vertexAiOk && databaseOk) {
      console.log('üéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢ –û–ü–¢–ò–ú–ê–õ–¨–ù–û!')
      console.log('   ‚úÖ –î–µ—à–µ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Kie.ai')
      console.log('   ‚úÖ –ù–∞–¥–µ–∂–Ω—ã–π fallback —á–µ—Ä–µ–∑ Vertex AI')
      console.log('   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞')
    } else if ((kieAiOk || vertexAiOk) && databaseOk) {
      console.log('‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–ê–Ø –ì–û–¢–û–í–ù–û–°–¢–¨')
      console.log('   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –≤–æ–∑–º–æ–∂–Ω–∞')
      console.log('   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç')
      if (!kieAiOk) {
        console.log('   ‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–æ—Ä–æ–≥–æ–π Vertex AI')
      }
    } else {
      console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ –ù–ê–ô–î–ï–ù–´!')
      console.log('   ‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å')
      console.log('   üîß –°–ª–µ–¥—É–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –≤—ã—à–µ')
    }
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message)
    console.error('   üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞')
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
main()
