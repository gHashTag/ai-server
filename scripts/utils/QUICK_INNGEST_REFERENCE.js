#!/usr/bin/env node
/**
 * üî• Instagram Scraper V2 - Quick Reference –¥–ª—è Telegram Bot
 *
 * EVENT NAME: 'instagram/scraper-v2'
 * RESULT: –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã + –†–∏–ª—Å—ã + HTML –æ—Ç—á—ë—Ç + Excel + ZIP –∞—Ä—Ö–∏–≤
 */

const { Inngest } = require('inngest')

// ========================================
// üéØ –û–°–ù–û–í–ù–û–ï –°–û–ë–´–¢–ò–ï
// ========================================

async function sendInstagramAnalysisEvent(userData) {
  const inngest = new Inngest({ id: 'telegram-bot-client' })

  const result = await inngest.send({
    name: 'instagram/scraper-v2', // ‚Üê –ù–ê–ó–í–ê–ù–ò–ï –°–û–ë–´–¢–ò–Ø
    data: {
      // ‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï
      username_or_id: userData.targetUsername, // Instagram username (–±–µ–∑ @)
      project_id: userData.projectId, // –ù–æ–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      // ‚öôÔ∏è –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï
      max_users: userData.maxCompetitors || 10, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ (1-100)
      max_reels_per_user: userData.maxReels || 5, // –†–∏–ª—Å–æ–≤ –Ω–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ (1-200)
      scrape_reels: userData.includeReels || false, // –ü–∞—Ä—Å–∏—Ç—å —Ä–∏–ª—Å—ã true/false
      requester_telegram_id: userData.telegramId, // Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    },
  })

  return result.ids[0] // Event ID –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
}

// ========================================
// üé¨ –ü–†–ò–ú–ï–†–´ –ó–ê–ü–†–û–°–û–í
// ========================================

// üì± –ë–∞–∑–æ–≤—ã–π (—Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã)
const basicRequest = {
  name: 'instagram/scraper-v2',
  data: {
    username_or_id: 'target_account',
    project_id: 123,
  },
}

// üî• –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã + —Ä–∏–ª—Å—ã)
const fullRequest = {
  name: 'instagram/scraper-v2',
  data: {
    username_or_id: 'vyacheslav_nekludov',
    project_id: 37,
    max_users: 10,
    max_reels_per_user: 5,
    scrape_reels: true,
    requester_telegram_id: '144022504',
  },
}

// ‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
const testRequest = {
  name: 'instagram/scraper-v2',
  data: {
    username_or_id: 'test_account',
    project_id: 1,
    max_users: 3,
    scrape_reels: false,
  },
}

// ========================================
// üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –§–£–ù–ö–¶–ò–ò
// ========================================

const expectedResult = {
  success: true,
  targetUser: 'vyacheslav_nekludov',
  projectId: 37,
  usersScraped: 50,
  usersSaved: 10,
  reelsScraped: 25,

  // üÜï –ù–û–í–û–ï: –ê—Ä—Ö–∏–≤ —Å –æ—Ç—á—ë—Ç–∞–º–∏
  reports: {
    generated: true,
    htmlReport:
      '/path/to/instagram_analysis_vyacheslav_nekludov_1234567890.html',
    excelReport: '/path/to/instagram_data_vyacheslav_nekludov_1234567890.xlsx',
    archivePath:
      '/path/to/instagram_competitors_vyacheslav_nekludov_1234567890.zip',
    archiveFileName: 'instagram_competitors_vyacheslav_nekludov_1234567890.zip',
    error: null,
  },
}

// ========================================
// üì¶ –û–¢–ü–†–ê–í–ö–ê –ê–†–•–ò–í–ê –í TELEGRAM
// ========================================

async function sendArchiveToTelegramUser(ctx, reportInfo, targetUsername) {
  if (!reportInfo || !reportInfo.generated) {
    return ctx.reply('‚ùå –û—Ç—á—ë—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω')
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ZIP –∞—Ä—Ö–∏–≤
  await ctx.replyWithDocument(
    {
      source: reportInfo.archivePath, // –ü—É—Ç—å –∫ ZIP —Ñ–∞–π–ª—É
      filename: reportInfo.archiveFileName, // –ò–º—è —Ñ–∞–π–ª–∞
    },
    {
      caption:
        `üì¶ –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è @${targetUsername}\n\n` +
        `üìä –í –∞—Ä—Ö–∏–≤–µ:\n` +
        `‚Ä¢ HTML –æ—Ç—á—ë—Ç (–æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)\n` +
        `‚Ä¢ Excel —Ñ–∞–π–ª (–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞)\n` +
        `‚Ä¢ README –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è\n\n` +
        `üí° –û—Ç–∫—Ä–æ–π—Ç–µ HTML –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!`,
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üîç –ù–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑', callback_data: 'new_search' }],
        ],
      },
    }
  )
}

// ========================================
// ‚úÖ –ì–û–¢–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø
// ========================================

// –î–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤ –±–æ—Ç–µ
async function handleInstagramCommand(ctx, userData) {
  const eventId = await sendInstagramAnalysisEvent({
    targetUsername: userData.username,
    projectId: userData.projectId,
    maxCompetitors: userData.count || 10,
    includeReels: userData.reels || false,
    telegramId: ctx.from.id.toString(),
  })

  await ctx.reply(
    `üîÑ –ó–∞–ø—É—â–µ–Ω –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è @${userData.username}\n` +
      `üìã Event ID: ${eventId}\n` +
      `‚è≥ –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ 3-5 –º–∏–Ω—É—Ç`
  )

  return eventId
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ —Ç–∞–π–º–µ—Ä
setTimeout(() => {
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—Ä—Ö–∏–≤
  checkAndSendReport(ctx, eventId, userData)
}, 5 * 60 * 1000) // 5 –º–∏–Ω—É—Ç

module.exports = {
  sendInstagramAnalysisEvent,
  sendArchiveToTelegramUser,
  handleInstagramCommand,
}
