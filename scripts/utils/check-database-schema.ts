/**
 * üîç –ü–†–û–í–ï–†–ö–ê –°–•–ï–ú–´ –ë–ê–ó–´ –î–ê–ù–ù–´–•
 * –ü–æ—Å–º–æ—Ç—Ä–∏–º –∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å—Ç—å –∏ —Å–æ–∑–¥–∞–¥–∏–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ
 */

import pkg from 'pg'
const { Pool } = pkg

async function checkDatabaseSchema() {
  console.log('üîç === –ü–†–û–í–ï–†–ö–ê –°–•–ï–ú–´ –ë–ê–ó–´ –î–ê–ù–ù–´–• ===\n')

  const connectionString = process.env.NEON_DATABASE_URL || 'postgresql://neondb_owner:npg_5RWzh7CwrXxE@ep-delicate-block-a1l1lt0p-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require'
  
  const pool = new Pool({
    connectionString,
    ssl: { rejectUnauthorized: false },
    max: 20,
    connectionTimeoutMillis: 30000,
    idleTimeoutMillis: 30000,
  })

  try {
    const client = await pool.connect()
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
      console.log('üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...')
      const tablesResult = await client.query(`
        SELECT table_name, table_schema 
        FROM information_schema.tables 
        WHERE table_schema = 'public' 
        ORDER BY table_name
      `)

      console.log('‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã:')
      tablesResult.rows.forEach(table => {
        console.log(`   üìä ${table.table_name}`)
      })

      if (tablesResult.rows.length === 0) {
        console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å—Ö–µ–º–µ public')
      }

      // –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è Instagram –∞–Ω–∞–ª–∏–∑–∞
      console.log('\nüèóÔ∏è –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è Instagram –∞–Ω–∞–ª–∏–∑–∞...')

      // –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
      console.log('üìÅ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É projects...')
      await client.query(`
        CREATE TABLE IF NOT EXISTS projects (
          id SERIAL PRIMARY KEY,
          name TEXT NOT NULL,
          description TEXT,
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        )
      `)

      // –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
      await client.query(`
        INSERT INTO projects (id, name, description) 
        VALUES (1, 'Instagram Analysis Project', 'Main project for Instagram competitor analysis')
        ON CONFLICT (id) DO NOTHING
      `)

      // –¢–∞–±–ª–∏—Ü–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
      console.log('üë• –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É competitors...')
      await client.query(`
        CREATE TABLE IF NOT EXISTS competitors (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          query_username TEXT NOT NULL,
          comp_username TEXT NOT NULL,
          followers_count INTEGER,
          category TEXT,
          bio TEXT,
          ig_url TEXT,
          project_id INTEGER REFERENCES projects(id),
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
          UNIQUE(query_username, comp_username)
        )
      `)

      // –¢–∞–±–ª–∏—Ü–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏–ª–∑
      console.log('üé¨ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É reels_analysis...')
      await client.query(`
        CREATE TABLE IF NOT EXISTS reels_analysis (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          comp_username TEXT NOT NULL,
          reel_id TEXT NOT NULL,
          ig_reel_url TEXT,
          caption TEXT,
          views_count INTEGER,
          likes_count INTEGER,
          comments_count INTEGER,
          created_at_instagram TIMESTAMP WITH TIME ZONE,
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
          project_id INTEGER REFERENCES projects(id),
          UNIQUE(reel_id, project_id)
        )
      `)

      // –¢–∞–±–ª–∏—Ü–∞ –∫–æ–Ω—Ç–µ–Ω—Ç-—Å–∫—Ä–∏–ø—Ç–æ–≤
      console.log('üìù –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É content_scripts...')
      await client.query(`
        CREATE TABLE IF NOT EXISTS content_scripts (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          reel_id TEXT NOT NULL,
          orig_caption TEXT,
          orig_transcript TEXT,
          script_v1 TEXT,
          script_v2 TEXT,
          script_v3 TEXT,
          ig_reel_url TEXT,
          project_id INTEGER REFERENCES projects(id),
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
          UNIQUE(reel_id, project_id)
        )
      `)

      // –¢–∞–±–ª–∏—Ü–∞ –ø–∞–º—è—Ç–∏ Telegram
      console.log('üí¨ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É telegram_memory...')
      await client.query(`
        CREATE TABLE IF NOT EXISTS telegram_memory (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          user_id TEXT NOT NULL,
          message_text TEXT NOT NULL,
          message_type TEXT DEFAULT 'user' CHECK (message_type IN ('user', 'bot')),
          context_data JSONB,
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        )
      `)

      // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      console.log('‚ö° –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...')
      await client.query(`CREATE INDEX IF NOT EXISTS idx_reels_analysis_username ON reels_analysis(comp_username)`)
      await client.query(`CREATE INDEX IF NOT EXISTS idx_reels_analysis_views ON reels_analysis(views_count DESC)`)
      await client.query(`CREATE INDEX IF NOT EXISTS idx_reels_analysis_date ON reels_analysis(created_at_instagram DESC)`)
      await client.query(`CREATE INDEX IF NOT EXISTS idx_competitors_query ON competitors(query_username)`)
      await client.query(`CREATE INDEX IF NOT EXISTS idx_telegram_memory_user ON telegram_memory(user_id, created_at DESC)`)

      console.log('‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')

      // –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      console.log('\nüß™ –®–∞–≥ 3: –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')
      
      // –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã
      await client.query(`
        INSERT INTO competitors (query_username, comp_username, followers_count, category, bio, ig_url, project_id) 
        VALUES 
          ('alexyanovsky', 'garyvee', 12500000, 'Business', 'Entrepreneur and motivational speaker', 'https://instagram.com/garyvee', 1),
          ('alexyanovsky', 'mkbhd', 5200000, 'Tech', 'Tech reviewer and YouTuber', 'https://instagram.com/mkbhd', 1),
          ('alexyanovsky', 'cristiano', 620000000, 'Sports', 'Professional footballer', 'https://instagram.com/cristiano', 1)
        ON CONFLICT (query_username, comp_username) DO NOTHING
      `)

      // –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–∏–ª–∑ (–∏–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
      await client.query(`
        INSERT INTO reels_analysis (comp_username, reel_id, ig_reel_url, caption, views_count, likes_count, comments_count, created_at_instagram, project_id) 
        VALUES 
          ('garyvee', 'test_reel_001', 'https://instagram.com/p/ABC123/', 'Motivation Monday: Stop making excuses and start taking action! üí™ #motivation #business', 2500000, 85000, 3200, NOW() - INTERVAL '3 days', 1),
          ('garyvee', 'test_reel_002', 'https://instagram.com/p/DEF456/', 'The key to success is patience and persistence. Here is why... üîë', 1800000, 72000, 2800, NOW() - INTERVAL '5 days', 1),
          ('mkbhd', 'test_reel_003', 'https://instagram.com/p/GHI789/', 'iPhone 15 Pro review in 60 seconds! Is it worth the upgrade? üì±', 3200000, 125000, 8500, NOW() - INTERVAL '2 days', 1),
          ('mkbhd', 'test_reel_004', 'https://instagram.com/p/JKL012/', 'Tesla Model S Plaid vs Lucid Air Dream Edition üèéÔ∏è‚ö°', 2900000, 98000, 5600, NOW() - INTERVAL '1 week', 1),
          ('cristiano', 'test_reel_005', 'https://instagram.com/p/MNO345/', 'Training session before the big match! Siuuuu! ‚öΩ', 15000000, 1200000, 45000, NOW() - INTERVAL '1 day', 1),
          ('cristiano', 'test_reel_006', 'https://instagram.com/p/PQR678/', 'Family time is the best time ‚ù§Ô∏èüë®‚Äçüë©‚Äçüëß‚Äçüë¶', 18000000, 1500000, 62000, NOW() - INTERVAL '4 days', 1)
        ON CONFLICT (reel_id, project_id) DO NOTHING
      `)

      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      console.log('\nüìä –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')
      
      const reelsCount = await client.query('SELECT COUNT(*) FROM reels_analysis')
      const competitorsCount = await client.query('SELECT COUNT(*) FROM competitors')
      
      console.log(`üìπ –†–∏–ª–∑ –≤ –±–∞–∑–µ: ${reelsCount.rows[0].count}`)
      console.log(`üë• –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: ${competitorsCount.rows[0].count}`)

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
      const sampleReels = await client.query(`
        SELECT comp_username, caption, views_count, likes_count, comments_count
        FROM reels_analysis 
        ORDER BY views_count DESC 
        LIMIT 3
      `)

      console.log('\nüé¨ –ü—Ä–∏–º–µ—Ä—ã —Ä–∏–ª–∑:')
      sampleReels.rows.forEach((reel, index) => {
        console.log(`${index + 1}. ${reel.comp_username}:`)
        console.log(`   üëÄ ${reel.views_count?.toLocaleString()} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤`)
        console.log(`   üëç ${reel.likes_count?.toLocaleString()} –ª–∞–π–∫–æ–≤`) 
        console.log(`   üí¨ ${reel.comments_count?.toLocaleString()} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤`)
        console.log(`   üìù ${reel.caption}`)
      })

    } finally {
      client.release()
    }

    console.log('\nüéâ === –°–•–ï–ú–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• –ì–û–¢–û–í–ê! ===')
    console.log('‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã')
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
    console.log('')
    console.log('üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏–ª–∑!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ö–µ–º—ã:', error)
    throw error
  } finally {
    await pool.end()
  }
}

checkDatabaseSchema()
  .then(() => {
    console.log('\nüéØ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!')
    process.exit(0)
  })
  .catch(error => {
    console.error('\nüí• –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ö–µ–º—ã:', error.message)
    process.exit(1)
  })