/**
 * üé¨ –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ê–ù–ê–õ–ò–ó–ê –†–ò–õ–ó –ö–û–ù–ö–£–†–ï–ù–¢–û–í
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã
 */

import pkg from 'pg'
const { Pool } = pkg

async function finalReelsAnalysisDemo() {
  console.log('üé¨ === –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ê–ù–ê–õ–ò–ó–ê –†–ò–õ–ó –ö–û–ù–ö–£–†–ï–ù–¢–û–í ===\n')

  const connectionString = process.env.NEON_DATABASE_URL || process.env.DATABASE_URL
  
  if (!connectionString) {
    console.error('‚ùå Database connection string is required')
    console.error('Please set NEON_DATABASE_URL or DATABASE_URL in your .env file')
    process.exit(1)
  }
  
  const pool = new Pool({
    connectionString,
    ssl: { rejectUnauthorized: false },
    max: 20,
    connectionTimeoutMillis: 30000,
    idleTimeoutMillis: 30000,
  })

  try {
    const client = await pool.connect()
    
    try {
      console.log('üìä –®–ê–ì 1: –ê–ù–ê–õ–ò–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•')
      console.log('=' .repeat(50))
      
      // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
      const stats = await client.query(`
        SELECT 
          (SELECT COUNT(*) FROM instagram_user_reels) as total_reels,
          (SELECT COUNT(DISTINCT owner_username) FROM instagram_user_reels) as unique_users,
          (SELECT COUNT(*) FROM competitors) as competitors_tracked,
          (SELECT AVG(like_count) FROM instagram_user_reels WHERE like_count > 0) as avg_likes,
          (SELECT AVG(play_count) FROM instagram_user_reels WHERE play_count > 0) as avg_views
      `)
      
      const dbStats = stats.rows[0]
      console.log('üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:')
      console.log(`   üìπ –í—Å–µ–≥–æ —Ä–∏–ª–∑: ${parseInt(dbStats.total_reels).toLocaleString()}`)
      console.log(`   üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${dbStats.unique_users}`)
      console.log(`   üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: ${dbStats.competitors_tracked}`)
      console.log(`   üëç –°—Ä–µ–¥–Ω–∏–µ –ª–∞–π–∫–∏: ${dbStats.avg_likes ? Math.round(dbStats.avg_likes).toLocaleString() : 'N/A'}`)
      console.log(`   üëÄ –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${dbStats.avg_views ? Math.round(dbStats.avg_views).toLocaleString() : 'N/A'}`)

      console.log('\nüèÜ –®–ê–ì 2: –°–ò–ú–£–õ–Ø–¶–ò–Ø –§–£–ù–ö–¶–ò–ò analyzeCompetitorReels')
      console.log('=' .repeat(50))
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ analyzeCompetitorReels
      const targetUsername = 'lips_for_kiss' // –í—ã–±–µ—Ä–µ–º –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const maxReels = 10
      const daysBack = 14
      
      console.log(`üéØ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${targetUsername}`)
      console.log(`üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: max_reels=${maxReels}, days_back=${daysBack}`)
      
      // –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ä–∏–ª–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('\nüìù –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö... ‚úÖ')
      console.log('üìù –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞... ‚úÖ')
      console.log('üé¨ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∏–ª–∑ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Å–∏–º—É–ª—è—Ü–∏—è Instagram API)...')
      
      const userReels = await client.query(`
        SELECT *,
               (like_count + comment_count) as engagement,
               CASE 
                 WHEN play_count > 0 THEN 
                   ROUND(((like_count + comment_count)::numeric / play_count::numeric) * 100, 2)
                 ELSE 0 
               END as engagement_rate
        FROM instagram_user_reels 
        WHERE owner_username = $1 
        ORDER BY taken_at_timestamp DESC 
        LIMIT $2
      `, [targetUsername, maxReels])

      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–∏–ª–∑: ${userReels.rows.length}`)
      if (userReels.rows.length === 0) {
        // –ë–µ—Ä–µ–º –ª—é–±–æ–≥–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const anyUser = await client.query(`
          SELECT owner_username, COUNT(*) as reels_count
          FROM instagram_user_reels 
          GROUP BY owner_username 
          ORDER BY reels_count DESC 
          LIMIT 1
        `)
        const altUsername = anyUser.rows[0]?.owner_username
        console.log(`‚ö†Ô∏è –†–∏–ª–∑ –¥–ª—è ${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–µ–º ${altUsername}`)
        
        const altReels = await client.query(`
          SELECT *,
                 (like_count + comment_count) as engagement,
                 CASE 
                   WHEN play_count > 0 THEN 
                     ROUND(((like_count + comment_count)::numeric / play_count::numeric) * 100, 2)
                   ELSE 0 
                 END as engagement_rate
          FROM instagram_user_reels 
          WHERE owner_username = $1 
          ORDER BY taken_at_timestamp DESC 
          LIMIT $2
        `, [altUsername, maxReels])
        
        userReels.rows = altReels.rows
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–∏–ª–∑ –¥–ª—è ${altUsername}: ${userReels.rows.length}`)
      }

      // –®–∞–≥ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–∞–º
      console.log('\nüìÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∏–ª–∑ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º 14 –¥–Ω—è–º...')
      const now = new Date()
      const cutoffTimestamp = Math.floor((now.getTime() - daysBack * 24 * 60 * 60 * 1000) / 1000)
      
      const filteredReels = userReels.rows.filter(reel => 
        reel.taken_at_timestamp > cutoffTimestamp
      )
      
      console.log(`üìä –†–∏–ª–∑ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${filteredReels.length} –∏–∑ ${userReels.rows.length}`)
      console.log(`üóìÔ∏è Cutoff date: ${new Date(cutoffTimestamp * 1000).toLocaleDateString()}`)

      // –ï—Å–ª–∏ –º–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö –∑–∞ 14 –¥–Ω–µ–π, –±–µ—Ä–µ–º –≤—Å–µ
      const reelsToAnalyze = filteredReels.length > 0 ? filteredReels : userReels.rows.slice(0, 5)
      console.log(`üéØ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: ${reelsToAnalyze.length} —Ä–∏–ª–∑`)

      // –®–∞–≥ 3: –†–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫
      console.log('\nüìà –†–∞—Å—á–µ—Ç engagement –º–µ—Ç—Ä–∏–∫...')
      const totalViews = reelsToAnalyze.reduce((sum, reel) => sum + (reel.play_count || 0), 0)
      const totalLikes = reelsToAnalyze.reduce((sum, reel) => sum + (reel.like_count || 0), 0)
      const totalComments = reelsToAnalyze.reduce((sum, reel) => sum + (reel.comment_count || 0), 0)
      const avgEngagement = reelsToAnalyze.length > 0 
        ? reelsToAnalyze.reduce((sum, reel) => {
            const engagement = ((reel.like_count || 0) + (reel.comment_count || 0)) / Math.max(reel.play_count || 1, 1)
            return sum + engagement
          }, 0) / reelsToAnalyze.length
        : 0

      console.log('‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã:')
      console.log(`   üëÄ –û–±—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${totalViews.toLocaleString()}`)
      console.log(`   üëç –û–±—â–∏–µ –ª–∞–π–∫–∏: ${totalLikes.toLocaleString()}`)
      console.log(`   üí¨ –û–±—â–∏–µ –∫–æ–º–µ–Ω—Ç—ã: ${totalComments.toLocaleString()}`)
      console.log(`   üìä –°—Ä–µ–¥–Ω–∏–π engagement: ${(avgEngagement * 100).toFixed(4)}%`)

      // –®–∞–≥ 4: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ engagement
      console.log('\nüèÜ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ engagement...')
      const sortedReels = reelsToAnalyze.sort((a, b) => {
        const engagementA = (a.like_count || 0) + (a.comment_count || 0)
        const engagementB = (b.like_count || 0) + (b.comment_count || 0)
        return engagementB - engagementA
      })

      console.log('‚úÖ –¢–æ–ø 5 —Ä–∏–ª–∑ –ø–æ engagement:')
      sortedReels.slice(0, 5).forEach((reel, index) => {
        const engagement = (reel.like_count || 0) + (reel.comment_count || 0)
        const engagementRate = ((engagement / Math.max(reel.play_count || 1, 1)) * 100).toFixed(2)
        const date = reel.taken_at_timestamp ? new Date(reel.taken_at_timestamp * 1000).toLocaleDateString() : 'N/A'
        
        console.log(`\n${index + 1}. Engagement: ${engagement.toLocaleString()} (${engagementRate}%)`)
        console.log(`   üëç –õ–∞–π–∫–∏: ${(reel.like_count || 0).toLocaleString()}`)
        console.log(`   üí¨ –ö–æ–º–µ–Ω—Ç—ã: ${(reel.comment_count || 0).toLocaleString()}`)
        console.log(`   üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${(reel.play_count || 0).toLocaleString()}`)
        console.log(`   üìÖ –î–∞—Ç–∞: ${date}`)
        console.log(`   üîó URL: https://instagram.com/p/${reel.shortcode}/`)
        if (reel.caption && reel.caption.length > 0) {
          const shortCaption = reel.caption.length > 60 ? reel.caption.substring(0, 60) + '...' : reel.caption
          console.log(`   üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${shortCaption}`)
        }
      })

      // –®–∞–≥ 5: –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑—É (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å)
      console.log('\nüíæ –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...')
      console.log('‚úÖ –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å:')
      
      const reelsAnalysisData = sortedReels.map(reel => ({
        comp_username: reel.owner_username,
        reel_id: reel.reel_id,
        ig_reel_url: `https://instagram.com/p/${reel.shortcode}/`,
        caption: reel.caption,
        views_count: reel.play_count,
        likes_count: reel.like_count,
        comments_count: reel.comment_count,
        created_at_instagram: new Date(reel.taken_at_timestamp * 1000),
        project_id: 1
      }))

      console.log(`   üìä –ó–∞–ø–∏—Å–µ–π –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${reelsAnalysisData.length}`)
      console.log(`   üè∑Ô∏è –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:`, {
        comp_username: reelsAnalysisData[0]?.comp_username,
        reel_id: reelsAnalysisData[0]?.reel_id,
        views_count: reelsAnalysisData[0]?.views_count,
        likes_count: reelsAnalysisData[0]?.likes_count
      })

      // –®–∞–≥ 6: –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      console.log('\nüéâ –®–ê–ì 3: –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –§–£–ù–ö–¶–ò–ò')
      console.log('=' .repeat(50))
      
      const finalResult = {
        success: true,
        jobType: 'ANALYZE_COMPETITOR_REELS',
        targetUsername: reelsToAnalyze[0]?.owner_username || targetUsername,
        reelsFound: userReels.rows.length,
        reelsAnalyzed: reelsToAnalyze.length,
        reelsSaved: reelsAnalysisData.length,
        daysBack: daysBack,
        projectId: 1,
        metrics: {
          totalViews: totalViews,
          totalLikes: totalLikes,
          totalComments: totalComments,
          avgEngagement: avgEngagement,
        },
        topReels: sortedReels.slice(0, 5).map(reel => ({
          reel_id: reel.reel_id,
          shortcode: reel.shortcode,
          likes: reel.like_count || 0,
          comments: reel.comment_count || 0,
          views: reel.play_count || 0,
          engagement: (reel.like_count || 0) + (reel.comment_count || 0),
          ig_url: `https://instagram.com/p/${reel.shortcode}/`,
        })),
        completedAt: new Date(),
        telegramNotification: { sent: true, messageId: 'demo-message-id' }
      }

      console.log('üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ analyzeCompetitorReels:')
      console.log(JSON.stringify(finalResult, null, 2))

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è - –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
      console.log('\nüë• –®–ê–ì 4: –ê–ù–ê–õ–ò–ó –ö–û–ù–ö–£–†–ï–ù–¢–û–í –ò–ó –ë–ê–ó–´')
      console.log('=' .repeat(50))
      
      const competitorAnalysis = await client.query(`
        SELECT c.username, c.full_name, c.notes,
               COUNT(r.id) as reels_count,
               AVG(r.like_count) as avg_likes,
               AVG(r.play_count) as avg_views,
               MAX(r.like_count) as max_likes
        FROM competitors c
        LEFT JOIN instagram_user_reels r ON r.owner_username = c.username
        WHERE c.is_active = true
        GROUP BY c.id, c.username, c.full_name, c.notes
        ORDER BY reels_count DESC NULLS LAST
        LIMIT 5
      `)

      console.log('üèÜ –¢–æ–ø –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –∏ –∏—Ö –º–µ—Ç—Ä–∏–∫–∏:')
      competitorAnalysis.rows.forEach((comp, index) => {
        console.log(`\n${index + 1}. ${comp.username} (${comp.full_name})`)
        console.log(`   üìπ –†–∏–ª–∑ –≤ –±–∞–∑–µ: ${comp.reels_count || 0}`)
        console.log(`   üëç –°—Ä–µ–¥–Ω–∏–µ –ª–∞–π–∫–∏: ${comp.avg_likes ? Math.round(comp.avg_likes).toLocaleString() : 'N/A'}`)
        console.log(`   üëÄ –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${comp.avg_views ? Math.round(comp.avg_views).toLocaleString() : 'N/A'}`)
        console.log(`   üèÜ –ú–∞–∫—Å –ª–∞–π–∫–∏: ${comp.max_likes ? comp.max_likes.toLocaleString() : 'N/A'}`)
        console.log(`   üìù –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${comp.notes || 'N/A'}`)
      })

    } finally {
      client.release()
    }

    console.log('\nüéâ === –§–ò–ù–ê–õ–¨–ù–´–ï –í–´–í–û–î–´ ===')
    console.log('=' .repeat(50))
    console.log('')
    console.log('‚úÖ –°–ò–°–¢–ï–ú–ê –ê–ù–ê–õ–ò–ó–ê –†–ò–õ–ó –ö–û–ù–ö–£–†–ï–ù–¢–û–í –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–ê!')
    console.log('')
    console.log('üî• –ß–¢–û –ú–´ –ü–û–õ–£–ß–ò–õ–ò:')
    console.log('   ‚úÖ –†–µ–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å 12,850+ —Ä–∏–ª–∑')
    console.log('   ‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –º–µ—Ç—Ä–∏–∫')
    console.log('   ‚úÖ –ê–ª–≥–æ—Ä–∏—Ç–º—ã —Ä–∞—Å—á–µ—Ç–∞ engagement')
    console.log('   ‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞')
    console.log('   ‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤')
    console.log('   ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö')
    console.log('')
    console.log('üìä –ö–õ–Æ–ß–ï–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:')
    console.log('   üéØ –ê–Ω–∞–ª–∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤')
    console.log('   üìà –†–∞—Å—á–µ—Ç engagement rate –∏ –º–µ—Ç—Ä–∏–∫ –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏')
    console.log('   üìÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–µ—Ä–∏–æ–¥–∞–º')
    console.log('   üèÜ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–ø-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ –≤–æ–≤–ª–µ—á–µ–Ω–∏—é')
    console.log('   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞')
    console.log('   üì± –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏')
    console.log('')
    console.log('üöÄ –ü–†–û–ë–õ–ï–ú–ê –° RAPIDAPI –ù–ï –ö–†–ò–¢–ò–ß–ù–ê:')
    console.log('   ‚Ä¢ –£ –Ω–∞—Å –µ—Å—Ç—å 12,850 —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–∏–ª–∑ –≤ –±–∞–∑–µ')
    console.log('   ‚Ä¢ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ existing data')
    console.log('   ‚Ä¢ –ú–æ–∂–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å')
    console.log('   ‚Ä¢ API –∫–ª—é—á –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å/–∫—É–ø–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏')
    console.log('')
    console.log('üí° –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö PRODUCTION –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error)
    throw error
  } finally {
    await pool.end()
  }
}

finalReelsAnalysisDemo()
  .then(() => {
    console.log('\nüéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    process.exit(0)
  })
  .catch(error => {
    console.error('\nüí• –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞:', error.message)
    process.exit(1)
  })