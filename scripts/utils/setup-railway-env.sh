#!/bin/bash

# üöÑ Railway Environment Setup Script
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Railway

echo "üöÑ Railway Environment Setup"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Railway CLI
if ! command -v railway &> /dev/null; then
    echo "‚ùå Railway CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: npm install -g @railway/cli"
    echo "üîó –ò–ª–∏: https://docs.railway.com/develop/cli"
    exit 1
fi

echo "‚úÖ Railway CLI –Ω–∞–π–¥–µ–Ω"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
set_env_var() {
    local key=$1
    local value=$2
    local environment=$3
    
    if [[ -n "$environment" ]]; then
        echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $key –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è $environment..."
        railway variables set "$key=$value" --environment "$environment"
    else
        echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $key..."
        railway variables set "$key=$value"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
prompt_env_vars() {
    local env_name=$1
    
    echo ""
    echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: $env_name"
    echo "=================================================="
    
    # –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    echo "üì± –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    set_env_var "NODE_ENV" "production" "$env_name"
    
    if [[ "$env_name" == "staging" ]]; then
        set_env_var "APP_ENV" "staging" "$env_name"
        read -p "üåê –í–≤–µ–¥–∏—Ç–µ NGROK_URL (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏): " ngrok_url
        if [[ -n "$ngrok_url" ]]; then
            set_env_var "NGROK_URL" "$ngrok_url" "$env_name"
        fi
    else
        set_env_var "APP_ENV" "production" "$env_name"
    fi
    
    # Database & Supabase
    echo ""
    echo "üóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ Supabase:"
    read -p "üîó SUPABASE_URL: " supabase_url
    read -p "üîë SUPABASE_SERVICE_KEY: " supabase_service_key
    read -p "üîë SUPABASE_SERVICE_ROLE_KEY: " supabase_service_role_key
    
    set_env_var "SUPABASE_URL" "$supabase_url" "$env_name"
    set_env_var "SUPABASE_SERVICE_KEY" "$supabase_service_key" "$env_name"
    set_env_var "SUPABASE_SERVICE_ROLE_KEY" "$supabase_service_role_key" "$env_name"
    
    # Security
    echo ""
    echo "üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:"
    read -p "üóùÔ∏è  SECRET_KEY: " secret_key
    read -p "üóùÔ∏è  SECRET_API_KEY: " secret_api_key
    read -p "üóùÔ∏è  JWT_SECRET_KEY: " jwt_secret
    
    set_env_var "SECRET_KEY" "$secret_key" "$env_name"
    set_env_var "SECRET_API_KEY" "$secret_api_key" "$env_name"
    set_env_var "JWT_SECRET_KEY" "$jwt_secret" "$env_name"
    
    # External APIs
    echo ""
    echo "ü§ñ –í–Ω–µ—à–Ω–∏–µ API:"
    read -p "üß† OPENAI_API_KEY: " openai_key
    read -p "üé≠ REPLICATE_API_TOKEN: " replicate_token
    read -p "üó£Ô∏è  ELEVENLABS_API_KEY: " elevenlabs_key
    read -p "üé® BFL_API_KEY: " bfl_key
    read -p "üé¨ SYNC_LABS_API_KEY: " sync_labs_key
    read -p "üéØ NEXT_PUBLIC_MANAGEMENT_TOKEN: " management_token
    
    set_env_var "OPENAI_API_KEY" "$openai_key" "$env_name"
    set_env_var "REPLICATE_API_TOKEN" "$replicate_token" "$env_name"
    set_env_var "ELEVENLABS_API_KEY" "$elevenlabs_key" "$env_name"
    set_env_var "BFL_API_KEY" "$bfl_key" "$env_name"
    set_env_var "SYNC_LABS_API_KEY" "$sync_labs_key" "$env_name"
    set_env_var "NEXT_PUBLIC_MANAGEMENT_TOKEN" "$management_token" "$env_name"
    
    # Bot Tokens
    echo ""
    echo "ü§ñ Telegram –±–æ—Ç—ã:"
    
    if [[ "$env_name" == "production" ]]; then
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω –±–æ—Ç–æ–≤ (1-10):"
        for i in {1..10}; do
            read -p "ü§ñ BOT_TOKEN_$i: " bot_token
            if [[ -n "$bot_token" ]]; then
                set_env_var "BOT_TOKEN_$i" "$bot_token" "$env_name"
            fi
        done
    else
        echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –±–æ—Ç–æ–≤:"
        read -p "üß™ BOT_TOKEN_TEST_1: " bot_token_test_1
        read -p "üß™ BOT_TOKEN_TEST_2: " bot_token_test_2
        
        set_env_var "BOT_TOKEN_TEST_1" "$bot_token_test_1" "$env_name"
        set_env_var "BOT_TOKEN_TEST_2" "$bot_token_test_2" "$env_name"
        
        # –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥–∞–∫—à–Ω —Ç–æ–∫–µ–Ω—ã –¥–ª—è staging
        read -p "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Ç–æ–∫–µ–Ω—ã –¥–ª—è staging? (y/n): " add_prod_tokens
        if [[ "$add_prod_tokens" == "y" ]]; then
            for i in {1..10}; do
                read -p "ü§ñ BOT_TOKEN_$i: " bot_token
                if [[ -n "$bot_token" ]]; then
                    set_env_var "BOT_TOKEN_$i" "$bot_token" "$env_name"
                fi
            done
        fi
    fi
    
    # Service URLs
    echo ""
    echo "üåê URL —Å–µ—Ä–≤–∏—Å–æ–≤:"
    read -p "üîó BASE_URL (https://your-app-$env_name.railway.app): " base_url
    
    if [[ -n "$base_url" ]]; then
        set_env_var "BASE_URL" "$base_url" "$env_name"
        set_env_var "ORIGIN" "$base_url" "$env_name"
        set_env_var "API_URL" "$base_url" "$env_name"
        set_env_var "INNGEST_WEBHOOK_URL" "$base_url/api/inngest" "$env_name"
        set_env_var "RESULT_URL2" "$base_url/payment/result" "$env_name"
    fi
    
    # Payment
    echo ""
    echo "üí∞ –ü–ª–∞—Ç–µ–∂–∏ (Robokassa):"
    read -p "üè™ MERCHANT_LOGIN: " merchant_login
    read -p "üîê PASSWORD2: " password2
    
    set_env_var "MERCHANT_LOGIN" "$merchant_login" "$env_name"
    set_env_var "PASSWORD2" "$password2" "$env_name"
    
    # Inngest
    echo ""
    echo "‚ö° Inngest:"
    read -p "üîë INNGEST_EVENT_KEY: " inngest_event_key
    read -p "üîë INNGEST_SIGNING_KEY: " inngest_signing_key
    
    set_env_var "INNGEST_EVENT_KEY" "$inngest_event_key" "$env_name"
    set_env_var "INNGEST_SIGNING_KEY" "$inngest_signing_key" "$env_name"
    
    # Nexrender
    echo ""
    echo "üé¨ Nexrender:"
    set_env_var "NEXRENDER_PORT" "4001" "$env_name"
    set_env_var "NEXRENDER_SECRET" "myapisecret" "$env_name"
    set_env_var "AERENDER_PATH" "/usr/local/bin/aerender" "$env_name"
    
    # Logging
    echo ""
    echo "üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:"
    if [[ "$env_name" == "staging" ]]; then
        set_env_var "LOG_LEVEL" "debug" "$env_name"
    else
        set_env_var "LOG_LEVEL" "info" "$env_name"
    fi
    
    set_env_var "LOG_FORMAT" "combined" "$env_name"
    set_env_var "ENABLE_LOGGING" "true" "$env_name"
    set_env_var "CREDENTIALS" "true" "$env_name"
    
    echo ""
    echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è $env_name –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
echo ""
echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
echo "1) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å staging –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
echo "2) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å production –æ–∫—Ä—É–∂–µ–Ω–∏–µ"  
echo "3) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "4) –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ"
echo "5) –í—ã—Ö–æ–¥"

read -p "–í–∞—à –≤—ã–±–æ—Ä (1-5): " choice

case $choice in
    1)
        prompt_env_vars "staging"
        ;;
    2)
        prompt_env_vars "production"
        ;;
    3)
        prompt_env_vars "staging"
        echo ""
        echo "===================="
        prompt_env_vars "production"
        ;;
    4)
        echo ""
        echo "üìã –¢–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
        echo "================================"
        railway variables
        ;;
    5)
        echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
        exit 0
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: railway variables"
echo "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π: git push origin main (–¥–ª—è staging)"
echo "üöÄ –ò–ª–∏: git push origin production (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω)"