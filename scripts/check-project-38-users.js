/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ 38
 */

require('dotenv').config()
const { Client } = require('pg')

const PROJECT_ID = 38

async function checkProject38Users() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ 38...\n')

  const client = new Client({
    connectionString: process.env.NEON_DATABASE_URL,
    ssl: {
      rejectUnauthorized: false,
    },
  })

  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ 38
    const usersQuery = `
      SELECT 
        search_username,
        COUNT(*) as users_count,
        MIN(created_at) as first_created,
        MAX(created_at) as last_created
      FROM instagram_similar_users 
      WHERE project_id = $1
      GROUP BY search_username 
      ORDER BY users_count DESC
    `

    const usersResult = await client.query(usersQuery, [PROJECT_ID])

    if (usersResult.rows.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ 38')
    } else {
      console.log(
        `‚úÖ –ù–∞–π–¥–µ–Ω–æ ${usersResult.rows.length} –ø–æ–∏—Å–∫–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ 38:`
      )
      usersResult.rows.forEach((user, index) => {
        console.log(
          `   ${index + 1}. "${user.search_username}" - ${
            user.users_count
          } –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤`
        )
        console.log(`      –ü–µ—Ä–≤—ã–π: ${user.first_created}`)
        console.log(`      –ü–æ—Å–ª–µ–¥–Ω–∏–π: ${user.last_created}`)
        console.log('')
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∏–ª—Å—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ 38
    const reelsQuery = `
      SELECT 
        COUNT(*) as total_reels,
        COUNT(DISTINCT scraped_for_user_pk) as unique_users,
        MIN(created_at) as first_reel,
        MAX(created_at) as last_reel
      FROM instagram_user_reels 
      WHERE project_id = $1
      GROUP BY project_id
    `

    const reelsResult = await client.query(reelsQuery, [PROJECT_ID])

    if (reelsResult.rows.length > 0) {
      const reels = reelsResult.rows[0]
      console.log(`üé¨ –†–∏–ª—Å—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ 38:`)
      console.log(`   –í—Å–µ–≥–æ —Ä–∏–ª—Å–æ–≤: ${reels.total_reels}`)
      console.log(`   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${reels.unique_users}`)
      console.log(`   –ü–µ—Ä–≤—ã–π —Ä–∏–ª—Å: ${reels.first_reel}`)
      console.log(`   –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∏–ª—Å: ${reels.last_reel}`)
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∏–ª—Å—ã
    const latestReelsQuery = `
      SELECT 
        owner_username,
        scraped_for_user_pk,
        created_at
      FROM instagram_user_reels 
      WHERE project_id = $1
      ORDER BY created_at DESC
      LIMIT 10
    `

    const latestReelsResult = await client.query(latestReelsQuery, [PROJECT_ID])

    if (latestReelsResult.rows.length > 0) {
      console.log('\nüìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∏–ª—Å—ã:')
      latestReelsResult.rows.forEach((reel, index) => {
        console.log(
          `   ${index + 1}. @${reel.owner_username} (scraped_for: ${
            reel.scraped_for_user_pk
          }) - ${reel.created_at}`
        )
      })
    }

    console.log('\nüéØ –ò–¢–û–ì:')
    console.log(
      `   –ü—Ä–æ–µ–∫—Ç 38: ${usersResult.rows.length} –ø–æ–∏—Å–∫–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`
    )
    console.log(
      `   –†–∏–ª—Å—ã: ${
        reelsResult.rows.length > 0 ? reelsResult.rows[0].total_reels : 0
      }`
    )

    if (usersResult.rows.length === 0 && reelsResult.rows.length > 0) {
      console.log(
        '   ‚ö†Ô∏è –ï—Å—Ç—å —Ä–∏–ª—Å—ã, –Ω–æ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
      )
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message)
  } finally {
    await client.end()
    console.log('\nüîö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
  }
}

checkProject38Users().catch(console.error)
