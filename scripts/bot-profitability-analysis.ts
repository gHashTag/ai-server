#!/usr/bin/env bun

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–æ–≤ –∑–∞ –º–∞–π, –∏—é–Ω—å, –∏—é–ª—å 2024
 *
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –±–æ—Ç–∞ –≤ –∑–≤–µ–∑–¥–∞—Ö –∏ —Ä—É–±–ª—è—Ö –ø–æ –º–µ—Å—è—Ü–∞–º
 *
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * bun run scripts/bot-profitability-analysis.ts
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import { config as dotenvConfig } from 'dotenv'
dotenvConfig({ path: '.env' })
dotenvConfig({ path: `.env.${process.env.NODE_ENV || 'development'}.local` })

import {
  getBotProfitability,
  generateBotProfitabilityStats,
  displayBotProfitabilityReport,
} from '../src/core/supabase/getBotProfitabilityReport'
import { supabaseAdmin as supabase } from '../src/core/supabase'

// –£–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑ getBotProfitabilityReport

async function testConnection(): Promise<boolean> {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...')

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  if (!process.env.SUPABASE_URL) {
    console.error('‚ùå SUPABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    return false
  }
  if (!process.env.SUPABASE_SERVICE_ROLE_KEY) {
    console.error('‚ùå SUPABASE_SERVICE_ROLE_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    return false
  }

  console.log('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')

  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    const { data, error } = await supabase
      .from('payments_v2')
      .select('id')
      .limit(1)

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', error.message)
      return false
    }

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —Ä–∞–±–æ—Ç–∞–µ—Ç!')
    return true
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error)
    return false
  }
}

async function analyzeBotProfitability() {
  console.log('üìä –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–æ–≤...')

  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –º–∞–π-–∏—é–ª—å 2024 –∏—Å–ø–æ–ª—å–∑—É—è –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é
    const profitabilityData = await getBotProfitability(
      '2024-05-01',
      '2024-07-31'
    )

    if (profitabilityData.length === 0) {
      console.log('‚ùå –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–æ–≤ –∑–∞ –º–∞–π-–∏—é–ª—å 2024 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
      return
    }

    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${profitabilityData.length} –∑–∞–ø–∏—Å–µ–π`)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = generateBotProfitabilityStats(profitabilityData)

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—á–µ—Ç
    displayBotProfitabilityReport(stats)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è displayResults —É–¥–∞–ª–µ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º displayBotProfitabilityReport –∏–∑ –º–æ–¥—É–ª—è

async function main() {
  console.log(
    'üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–æ–≤ –∑–∞ –º–∞–π, –∏—é–Ω—å, –∏—é–ª—å 2024...'
  )

  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const connectionOk = await testConnection()
    if (!connectionOk) {
      console.error('üí• –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.')
      process.exit(1)
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ (–æ—Ç—á–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏)
    await analyzeBotProfitability()

    console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main()
