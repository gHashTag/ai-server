#!/bin/bash

echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê INNGEST –í PRODUCTION"
echo "==================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

PRODUCTION_URL="https://ai-server-u14194.vm.elestio.app"
API_ENDPOINT="$PRODUCTION_URL/api/inngest"

echo ""
echo -e "${BLUE}üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:${NC}"
echo "‚Ä¢ Environment Variables"
echo "‚Ä¢ Inngest Serve Endpoint"
echo "‚Ä¢ Function Registration" 
echo "‚Ä¢ Event Processing"
echo ""

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Environment Variables
echo -e "${BLUE}1. üîß Environment Variables:${NC}"

if [ -z "$INNGEST_SIGNING_KEY" ]; then
    echo -e "   ${RED}‚ùå INNGEST_SIGNING_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    echo -e "   ${GREEN}‚úÖ INNGEST_SIGNING_KEY: ${INNGEST_SIGNING_KEY:0:20}...${NC}"
fi

if [ -z "$INNGEST_EVENT_KEY" ]; then
    echo -e "   ${RED}‚ùå INNGEST_EVENT_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    echo -e "   ${GREEN}‚úÖ INNGEST_EVENT_KEY: ${INNGEST_EVENT_KEY:0:20}...${NC}"
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Inngest Serve Endpoint
echo ""
echo -e "${BLUE}2. üåê Inngest Serve Endpoint:${NC}"

ENDPOINT_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" "$API_ENDPOINT")
HTTP_STATUS=$(echo $ENDPOINT_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
RESPONSE_BODY=$(echo $ENDPOINT_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

if [ "$HTTP_STATUS" -eq 200 ]; then
    echo -e "   ${GREEN}‚úÖ Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω: $API_ENDPOINT${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π
    FUNCTIONS_COUNT=$(echo "$RESPONSE_BODY" | grep -o '"functionsFound":[0-9]*' | cut -d':' -f2)
    if [ "$FUNCTIONS_COUNT" -gt 0 ]; then
        echo -e "   ${GREEN}‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü–∏–π: $FUNCTIONS_COUNT${NC}"
    else
        echo -e "   ${RED}‚ùå –§—É–Ω–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º signing key
    HAS_SIGNING_KEY=$(echo "$RESPONSE_BODY" | grep -o '"hasSigningKey":[a-z]*' | cut -d':' -f2)
    if [ "$HAS_SIGNING_KEY" = "true" ]; then
        echo -e "   ${GREEN}‚úÖ Signing Key –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "   ${RED}‚ùå Signing Key –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º event key
    HAS_EVENT_KEY=$(echo "$RESPONSE_BODY" | grep -o '"hasEventKey":[a-z]*' | cut -d':' -f2)
    if [ "$HAS_EVENT_KEY" = "true" ]; then
        echo -e "   ${GREEN}‚úÖ Event Key –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "   ${RED}‚ùå Event Key –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
else
    echo -e "   ${RED}‚ùå Endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $HTTP_STATUS)${NC}"
    echo -e "   ${YELLOW}   URL: $API_ENDPOINT${NC}"
    echo -e "   ${YELLOW}   –û—Ç–≤–µ—Ç: $RESPONSE_BODY${NC}"
fi

# 3. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è
echo ""
echo -e "${BLUE}3. üì§ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è:${NC}"

EVENT_DATA='{
  "name": "instagram/scraper-v2",
  "data": {
    "username_or_id": "test_diagnosis",
    "project_id": 37,
    "max_users": 3,
    "scrape_reels": false,
    "requester_telegram_id": "diagnosis_test"
  }
}'

EVENT_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" \
  -X POST "$API_ENDPOINT" \
  -H "Content-Type: application/json" \
  -d "$EVENT_DATA")

EVENT_HTTP_STATUS=$(echo $EVENT_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
EVENT_RESPONSE_BODY=$(echo $EVENT_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

if [ "$EVENT_HTTP_STATUS" -eq 200 ] || [ "$EVENT_HTTP_STATUS" -eq 201 ]; then
    echo -e "   ${GREEN}‚úÖ –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Event ID
    EVENT_ID=$(echo "$EVENT_RESPONSE_BODY" | grep -o '"id":"[^"]*"' | cut -d'"' -f4)
    if [ ! -z "$EVENT_ID" ]; then
        echo -e "   ${GREEN}‚úÖ Event ID: $EVENT_ID${NC}"
    fi
else
    echo -e "   ${RED}‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è (HTTP $EVENT_HTTP_STATUS)${NC}"
    echo -e "   ${YELLOW}   –û—Ç–≤–µ—Ç: $EVENT_RESPONSE_BODY${NC}"
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo ""
echo -e "${BLUE}4. üê≥ Docker Containers (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ):${NC}"

if command -v docker &> /dev/null; then
    DOCKER_STATUS=$(docker ps --filter "name=ai-server" --format "table {{.Names}}\t{{.Status}}" 2>/dev/null)
    if [ ! -z "$DOCKER_STATUS" ]; then
        echo -e "   ${GREEN}‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
        echo "$DOCKER_STATUS" | while IFS= read -r line; do
            echo "      $line"
        done
    else
        echo -e "   ${YELLOW}‚ö†Ô∏è  AI Server –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  Docker –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —ç—Ç–æ–π —Å—Ä–µ–¥–µ${NC}"
fi

# 5. –ò—Ç–æ–≥–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
echo ""
echo "==================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:${NC}"

ISSUES_COUNT=0

if [ -z "$INNGEST_SIGNING_KEY" ]; then
    echo -e "${RED}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç INNGEST_SIGNING_KEY${NC}"
    ((ISSUES_COUNT++))
fi

if [ -z "$INNGEST_EVENT_KEY" ]; then
    echo -e "${RED}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç INNGEST_EVENT_KEY${NC}"
    ((ISSUES_COUNT++))
fi

if [ "$HTTP_STATUS" -ne 200 ]; then
    echo -e "${RED}‚ùå Inngest endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    ((ISSUES_COUNT++))
fi

if [ "$FUNCTIONS_COUNT" -eq 0 ] 2>/dev/null; then
    echo -e "${RED}‚ùå –§—É–Ω–∫—Ü–∏–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã${NC}"
    ((ISSUES_COUNT++))
fi

if [ "$EVENT_HTTP_STATUS" -ne 200 ] && [ "$EVENT_HTTP_STATUS" -ne 201 ]; then
    echo -e "${RED}‚ùå –°–æ–±—ã—Ç–∏—è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è${NC}"
    ((ISSUES_COUNT++))
fi

echo ""
if [ "$ISSUES_COUNT" -eq 0 ]; then
    echo -e "${GREEN}üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!${NC}"
    echo -e "${GREEN}   Inngest –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ production${NC}"
else
    echo -e "${RED}üö® –ù–ê–ô–î–ï–ù–û –ü–†–û–ë–õ–ï–ú: $ISSUES_COUNT${NC}"
    echo ""
    echo -e "${YELLOW}üîß –†–ï–®–ï–ù–ò–ï:${NC}"
    echo "1. –î–æ–±–∞–≤—å—Ç–µ INNGEST_SIGNING_KEY –≤ .env"
    echo "2. –î–æ–±–∞–≤—å—Ç–µ INNGEST_EVENT_KEY –≤ .env" 
    echo "3. –û–±–Ω–æ–≤–∏—Ç–µ docker-compose.yml —Å Inngest –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏"
    echo "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: docker-compose up -d"
    echo ""
    echo -e "${BLUE}üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: PRODUCTION_INNGEST_DIAGNOSIS.md${NC}"
fi

echo "===================================" 